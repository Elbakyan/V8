[{"/home/nordil/Desktop/V8/src/index.js":"1","/home/nordil/Desktop/V8/src/App.js":"2","/home/nordil/Desktop/V8/src/store.js":"3","/home/nordil/Desktop/V8/src/serviceWorker.js":"4","/home/nordil/Desktop/V8/src/redux/rootReducer.js":"5","/home/nordil/Desktop/V8/src/redux/user/action.js":"6","/home/nordil/Desktop/V8/src/redux/location/action.js":"7","/home/nordil/Desktop/V8/src/redux/auto/action.js":"8","/home/nordil/Desktop/V8/src/redux/score/action.js":"9","/home/nordil/Desktop/V8/src/redux/message/action.js":"10","/home/nordil/Desktop/V8/src/components/config/Requsest.js":"11","/home/nordil/Desktop/V8/src/components/Loading.jsx":"12","/home/nordil/Desktop/V8/src/components/config/Api.jsx":"13","/home/nordil/Desktop/V8/src/components/Home/Home.jsx":"14","/home/nordil/Desktop/V8/src/components/User/User.jsx":"15","/home/nordil/Desktop/V8/src/components/Score/Score.jsx":"16","/home/nordil/Desktop/V8/src/components/spare/SpareParts.jsx":"17","/home/nordil/Desktop/V8/src/components/announcement/Announcement.jsx":"18","/home/nordil/Desktop/V8/src/components/Search/Result.jsx":"19","/home/nordil/Desktop/V8/src/components/Soon/Soon.jsx":"20","/home/nordil/Desktop/V8/src/redux/user/UserReducer.js":"21","/home/nordil/Desktop/V8/src/redux/location/LocationReducer.js":"22","/home/nordil/Desktop/V8/src/redux/auto/AutoReducer.js":"23","/home/nordil/Desktop/V8/src/redux/score/ScoreReducer.js":"24","/home/nordil/Desktop/V8/src/redux/message/MessageReducer.js":"25","/home/nordil/Desktop/V8/src/components/config/Url.js":"26","/home/nordil/Desktop/V8/src/redux/sellauto/SellReducer.js":"27","/home/nordil/Desktop/V8/src/redux/favorite/FavoriteReducer.js":"28","/home/nordil/Desktop/V8/src/redux/tmp/tmpReducer.js":"29","/home/nordil/Desktop/V8/src/redux/search/SearchReducer.js":"30","/home/nordil/Desktop/V8/src/redux/sellauto/action.js":"31","/home/nordil/Desktop/V8/src/redux/favorite/action.js":"32","/home/nordil/Desktop/V8/src/redux/search/action.js":"33","/home/nordil/Desktop/V8/src/components/Home/Header.jsx":"34","/home/nordil/Desktop/V8/src/components/User/Account.jsx":"35","/home/nordil/Desktop/V8/src/components/Score/Account.jsx":"36","/home/nordil/Desktop/V8/src/components/spare/Header.jsx":"37","/home/nordil/Desktop/V8/src/components/User/Header.jsx":"38","/home/nordil/Desktop/V8/src/components/Score/Header.jsx":"39","/home/nordil/Desktop/V8/src/components/announcement/Result.jsx":"40","/home/nordil/Desktop/V8/src/components/announcement/Auto.jsx":"41","/home/nordil/Desktop/V8/src/components/Search/ScoreListGlobal.jsx":"42","/home/nordil/Desktop/V8/src/components/Search/DetaeLists.jsx":"43","/home/nordil/Desktop/V8/src/components/Search/ScoreList.jsx":"44","/home/nordil/Desktop/V8/src/components/Footer/Footer.jsx":"45","/home/nordil/Desktop/V8/src/components/Content/Content.jsx":"46","/home/nordil/Desktop/V8/src/components/User/Authentication/Login.jsx":"47","/home/nordil/Desktop/V8/src/components/User/Authentication/Signin.jsx":"48","/home/nordil/Desktop/V8/src/components/Menu/Menu.jsx":"49","/home/nordil/Desktop/V8/src/components/Score/Authentication/Login.jsx":"50","/home/nordil/Desktop/V8/src/components/Score/Authentication/Signin.jsx":"51","/home/nordil/Desktop/V8/src/components/StoreInfo/StoreInfo.jsx":"52","/home/nordil/Desktop/V8/src/components/forms/inputs/DefaultInput.jsx":"53","/home/nordil/Desktop/V8/src/components/forms/buttons/DefaultBtn.jsx":"54","/home/nordil/Desktop/V8/src/components/forms/select/DefaultSelect.jsx":"55","/home/nordil/Desktop/V8/src/redux/auto/Values.js":"56","/home/nordil/Desktop/V8/src/redux/tmp/action.js":"57","/home/nordil/Desktop/V8/src/components/Alert.js":"58","/home/nordil/Desktop/V8/src/components/Menu/autoObj.js":"59","/home/nordil/Desktop/V8/src/components/Search/Search.jsx":"60","/home/nordil/Desktop/V8/src/components/announcement/SellCar.jsx":"61","/home/nordil/Desktop/V8/src/components/User/Profile/PersionalData.jsx":"62","/home/nordil/Desktop/V8/src/components/User/Profile/Profile.jsx":"63","/home/nordil/Desktop/V8/src/components/User/Authentication/Header.jsx":"64","/home/nordil/Desktop/V8/src/components/Score/Authentication/Header.jsx":"65","/home/nordil/Desktop/V8/src/components/Score/Profile/PersionalDataScore.jsx":"66","/home/nordil/Desktop/V8/src/components/Score/Profile/Profile.jsx":"67","/home/nordil/Desktop/V8/src/components/SliderAuto/SliderAuto.jsx":"68","/home/nordil/Desktop/V8/src/components/User/Profile/ProfilSetings.jsx":"69","/home/nordil/Desktop/V8/src/components/Score/Profile/ProfilSetingsScore.jsx":"70","/home/nordil/Desktop/V8/src/components/SliderAuto/Zoom.jsx":"71","/home/nordil/Desktop/V8/src/components/favorite/GeFavorite.jsx":"72","/home/nordil/Desktop/V8/src/components/User/UserCars/CarsForm.jsx":"73","/home/nordil/Desktop/V8/src/components/User/message/Message.jsx":"74","/home/nordil/Desktop/V8/src/components/User/UserCars/UserCars.jsx":"75","/home/nordil/Desktop/V8/src/components/AutoParts/AutoParts.jsx":"76","/home/nordil/Desktop/V8/src/components/Score/message/Message.jsx":"77","/home/nordil/Desktop/V8/src/components/Score/ScoreList/ScoreList.jsx":"78","/home/nordil/Desktop/V8/src/components/favorite/Favorite.jsx":"79","/home/nordil/Desktop/V8/src/components/User/message/Respondent.jsx":"80","/home/nordil/Desktop/V8/src/components/User/message/GetMessage.jsx":"81","/home/nordil/Desktop/V8/src/components/Score/message/Respondent.jsx":"82","/home/nordil/Desktop/V8/src/components/Score/message/GetMessage.jsx":"83","/home/nordil/Desktop/V8/src/components/AutoParts/FormAutoParts/FormAutoParts.jsx":"84","/home/nordil/Desktop/V8/src/components/AutoParts/FormAutoParts/FormGlobalAutoParts.jsx":"85","/home/nordil/Desktop/V8/src/components/Score/ScorePage/ScorePage.jsx":"86","/home/nordil/Desktop/V8/src/components/AutoParts/TypeCars.jsx":"87","/home/nordil/Desktop/V8/src/components/Score/ScorePage/AddImg.jsx":"88","/home/nordil/Desktop/V8/src/components/AutoParts/FormAutoParts/ListGlobalAutoParts.jsx":"89","/home/nordil/Desktop/V8/src/components/AutoParts/FormAutoParts/FormGlobalTruckParts.jsx":"90","/home/nordil/Desktop/V8/src/components/ButtonView/ButtonView.jsx":"91","/home/nordil/Desktop/V8/src/components/AutoParts/FormAutoParts/ListGlobalTruckParts.jsx":"92"},{"size":706,"mtime":1605472127457,"results":"93","hashOfConfig":"94"},{"size":2805,"mtime":1605956607657,"results":"95","hashOfConfig":"94"},{"size":304,"mtime":1605472127457,"results":"96","hashOfConfig":"94"},{"size":5086,"mtime":1605472127457,"results":"97","hashOfConfig":"94"},{"size":772,"mtime":1605472127457,"results":"98","hashOfConfig":"94"},{"size":346,"mtime":1605472127457,"results":"99","hashOfConfig":"94"},{"size":884,"mtime":1605472127457,"results":"100","hashOfConfig":"94"},{"size":2655,"mtime":1605620669032,"results":"101","hashOfConfig":"94"},{"size":1457,"mtime":1605472127457,"results":"102","hashOfConfig":"94"},{"size":2105,"mtime":1605472127457,"results":"103","hashOfConfig":"94"},{"size":593,"mtime":1605472127457,"results":"104","hashOfConfig":"94"},{"size":781,"mtime":1605472127450,"results":"105","hashOfConfig":"94"},{"size":5236,"mtime":1605690404478,"results":"106","hashOfConfig":"94"},{"size":874,"mtime":1605472127447,"results":"107","hashOfConfig":"94"},{"size":1664,"mtime":1605472127453,"results":"108","hashOfConfig":"94"},{"size":2031,"mtime":1605472127450,"results":"109","hashOfConfig":"94"},{"size":391,"mtime":1605472127457,"results":"110","hashOfConfig":"94"},{"size":9177,"mtime":1605854415635,"results":"111","hashOfConfig":"94"},{"size":5234,"mtime":1605688572282,"results":"112","hashOfConfig":"94"},{"size":546,"mtime":1605957069409,"results":"113","hashOfConfig":"94"},{"size":617,"mtime":1605472127457,"results":"114","hashOfConfig":"94"},{"size":408,"mtime":1605472127457,"results":"115","hashOfConfig":"94"},{"size":1282,"mtime":1605620625224,"results":"116","hashOfConfig":"94"},{"size":858,"mtime":1605472127457,"results":"117","hashOfConfig":"94"},{"size":1048,"mtime":1605472127457,"results":"118","hashOfConfig":"94"},{"size":2580,"mtime":1605708854659,"results":"119","hashOfConfig":"94"},{"size":435,"mtime":1605472127457,"results":"120","hashOfConfig":"94"},{"size":522,"mtime":1605472127457,"results":"121","hashOfConfig":"94"},{"size":423,"mtime":1605472127457,"results":"122","hashOfConfig":"94"},{"size":1546,"mtime":1605688572302,"results":"123","hashOfConfig":"94"},{"size":871,"mtime":1605965365733,"results":"124","hashOfConfig":"94"},{"size":957,"mtime":1605960908441,"results":"125","hashOfConfig":"94"},{"size":2454,"mtime":1605687692495,"results":"126","hashOfConfig":"94"},{"size":3353,"mtime":1605472127447,"results":"127","hashOfConfig":"94"},{"size":721,"mtime":1605472127453,"results":"128","hashOfConfig":"94"},{"size":824,"mtime":1605472127450,"results":"129","hashOfConfig":"94"},{"size":1617,"mtime":1605472127457,"results":"130","hashOfConfig":"94"},{"size":2389,"mtime":1605472127453,"results":"131","hashOfConfig":"94"},{"size":1497,"mtime":1605529796956,"results":"132","hashOfConfig":"94"},{"size":3110,"mtime":1606116094241,"results":"133","hashOfConfig":"94"},{"size":9848,"mtime":1605472127453,"results":"134","hashOfConfig":"94"},{"size":5906,"mtime":1605867463427,"results":"135","hashOfConfig":"94"},{"size":9219,"mtime":1605472127450,"results":"136","hashOfConfig":"94"},{"size":4371,"mtime":1605472127450,"results":"137","hashOfConfig":"94"},{"size":1754,"mtime":1605854415631,"results":"138","hashOfConfig":"94"},{"size":3779,"mtime":1605472127447,"results":"139","hashOfConfig":"94"},{"size":3366,"mtime":1605690404470,"results":"140","hashOfConfig":"94"},{"size":6944,"mtime":1605690404470,"results":"141","hashOfConfig":"94"},{"size":11652,"mtime":1605952898025,"results":"142","hashOfConfig":"94"},{"size":2240,"mtime":1605472127450,"results":"143","hashOfConfig":"94"},{"size":7786,"mtime":1605698552798,"results":"144","hashOfConfig":"94"},{"size":11987,"mtime":1605881816343,"results":"145","hashOfConfig":"94"},{"size":1219,"mtime":1605472127457,"results":"146","hashOfConfig":"94"},{"size":1541,"mtime":1605472127457,"results":"147","hashOfConfig":"94"},{"size":948,"mtime":1605472127457,"results":"148","hashOfConfig":"94"},{"size":4307,"mtime":1605472127457,"results":"149","hashOfConfig":"94"},{"size":984,"mtime":1605472127457,"results":"150","hashOfConfig":"94"},{"size":809,"mtime":1605603877747,"results":"151","hashOfConfig":"94"},{"size":4708,"mtime":1605472127450,"results":"152","hashOfConfig":"94"},{"size":2488,"mtime":1605618023140,"results":"153","hashOfConfig":"94"},{"size":4043,"mtime":1605472127453,"results":"154","hashOfConfig":"94"},{"size":3452,"mtime":1605472127453,"results":"155","hashOfConfig":"94"},{"size":5268,"mtime":1605472127453,"results":"156","hashOfConfig":"94"},{"size":558,"mtime":1605472127453,"results":"157","hashOfConfig":"94"},{"size":531,"mtime":1605472127450,"results":"158","hashOfConfig":"94"},{"size":2714,"mtime":1605534665672,"results":"159","hashOfConfig":"94"},{"size":4938,"mtime":1605873804367,"results":"160","hashOfConfig":"94"},{"size":6300,"mtime":1605472127453,"results":"161","hashOfConfig":"94"},{"size":8730,"mtime":1605472127453,"results":"162","hashOfConfig":"94"},{"size":5789,"mtime":1605615923360,"results":"163","hashOfConfig":"94"},{"size":2765,"mtime":1605472127453,"results":"164","hashOfConfig":"94"},{"size":585,"mtime":1605472127457,"results":"165","hashOfConfig":"94"},{"size":11249,"mtime":1605472127453,"results":"166","hashOfConfig":"94"},{"size":9923,"mtime":1605957948525,"results":"167","hashOfConfig":"94"},{"size":19605,"mtime":1605472127453,"results":"168","hashOfConfig":"94"},{"size":3167,"mtime":1605867463423,"results":"169","hashOfConfig":"94"},{"size":8130,"mtime":1605957948525,"results":"170","hashOfConfig":"94"},{"size":13630,"mtime":1605854415631,"results":"171","hashOfConfig":"94"},{"size":3034,"mtime":1606116038841,"results":"172","hashOfConfig":"94"},{"size":1667,"mtime":1605472127453,"results":"173","hashOfConfig":"94"},{"size":5337,"mtime":1605472127453,"results":"174","hashOfConfig":"94"},{"size":1718,"mtime":1605472127450,"results":"175","hashOfConfig":"94"},{"size":5928,"mtime":1605695263486,"results":"176","hashOfConfig":"94"},{"size":21705,"mtime":1605943321540,"results":"177","hashOfConfig":"94"},{"size":12785,"mtime":1605947065057,"results":"178","hashOfConfig":"94"},{"size":27029,"mtime":1605860587551,"results":"179","hashOfConfig":"94"},{"size":1152,"mtime":1605867463427,"results":"180","hashOfConfig":"94"},{"size":1229,"mtime":1605472127450,"results":"181","hashOfConfig":"94"},{"size":6677,"mtime":1605690404462,"results":"182","hashOfConfig":"94"},{"size":12825,"mtime":1605947625017,"results":"183","hashOfConfig":"94"},{"size":751,"mtime":1605472127447,"results":"184","hashOfConfig":"94"},{"size":6297,"mtime":1605690404462,"results":"185","hashOfConfig":"94"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},"1sbtmf",{"filePath":"189","messages":"190","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"188"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"188"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"188"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"188"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"188"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"188"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"188"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"188"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"188"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"276","messages":"277","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"188"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"188"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"188"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"188"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"188"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"188"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"188"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"188"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"188"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"188"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"188"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"188"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"188"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"188"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"188"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"188"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"188"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"188"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"188"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"188"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"188"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"188"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"188"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"188"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"188"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"188"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"188"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"188"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"188"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"188"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"188"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"188"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"188"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413"},"/home/nordil/Desktop/V8/src/index.js",[],["414","415"],"/home/nordil/Desktop/V8/src/App.js",["416","417","418","419"],"import React from 'react';\nimport { Route, Switch,} from \"react-router\";\nimport './style/style.scss'\nimport Home from \"./components/Home/Home\";\nimport User from \"./components/User/User\";\nimport {connect} from \"react-redux\";\nimport {UserExist} from \"./redux/user/action\";\nimport {GetSicle} from \"./redux/location/action\";\nimport {GetMark, GetTruck, GetTruckModel, GetTruckModels} from \"./redux/auto/action\";\nimport Score from \"./components/Score/Score\";\nimport SpaerParts from \"./components/spare/SpareParts\";\nimport {ScoreExist} from \"./redux/score/action\";\nimport Announcement from \"./components/announcement/Announcement\";\nimport Loading from \"./components/Loading\";\nimport {GetMessage} from \"./redux/message/action\";\nimport Result from \"./components/Search/Result\";\nimport Api from \"./components/config/Api\";\nimport {GET} from \"./components/config/Requsest\";\nimport Soon from \"./components/Soon/Soon\";\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            path: '/',\n            incriment: 0\n\n        }\n        this.VinRef = React.createRef()\n    }\n\n\n    componentDidMount() {\n        this.props.dispatch(UserExist())\n        this.props.dispatch(ScoreExist())\n        this.props.dispatch(GetSicle())\n        this.props.dispatch(GetMark())\n        this.props.dispatch(GetTruck())\n        this.props.dispatch(GetTruckModels())\n\n    }\n\n\n    render() {\n      return (\n          <div className=\"App\">\n              <Switch>\n                  <Route exact path='/'>\n                      <Home userStatus={this.props.user.status} scoreStatus={this.props.score.score.status}/>\n                  </Route>\n                  <Route  path='/user'>\n                      <User/>\n                  </Route>\n                  <Route path='/score'>\n                      <Score/>\n                  </Route>\n                  <Route exact path='/spare-parts'>\n                      <SpaerParts/>\n                  </Route>\n                  <Route path='/announcement'>\n                      <Announcement/>\n                  </Route>\n                  <Route path='/search/result'>\n                      <Result/>\n                  </Route>\n                  <Route path='/soon'>\n                      <Soon/>\n                  </Route>\n              </Switch>\n              {this.props.user.status  === undefined? <div className=\"main__load\">  <Loading type=\"spinningBubbles\" size={500} color=\"#101423\"/><Loading /> </div> : ''}\n              {this.props.score.score.status  === undefined? <div className=\"main__load\">  <Loading type=\"spinningBubbles\" size={500} color=\"#101423\"/><Loading /> </div> : ''}\n\n          </div>\n      )\n    }\n}\n\nconst MapStateToProps = state => state;\nconst MainApp = connect(MapStateToProps)(App)\nexport default MainApp;\n","/home/nordil/Desktop/V8/src/store.js",[],"/home/nordil/Desktop/V8/src/serviceWorker.js",[],"/home/nordil/Desktop/V8/src/redux/rootReducer.js",[],"/home/nordil/Desktop/V8/src/redux/user/action.js",[],"/home/nordil/Desktop/V8/src/redux/location/action.js",[],"/home/nordil/Desktop/V8/src/redux/auto/action.js",[],"/home/nordil/Desktop/V8/src/redux/score/action.js",[],"/home/nordil/Desktop/V8/src/redux/message/action.js",[],"/home/nordil/Desktop/V8/src/components/config/Requsest.js",[],"/home/nordil/Desktop/V8/src/components/Loading.jsx",[],"/home/nordil/Desktop/V8/src/components/config/Api.jsx",[],"/home/nordil/Desktop/V8/src/components/Home/Home.jsx",[],"/home/nordil/Desktop/V8/src/components/User/User.jsx",["420","421"],"import React from 'react';\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport Login from \"./Authentication/Login\";\nimport Account from \"./Account\";\nimport {connect} from \"react-redux\";\nimport Loading from \"../Loading\";\nimport Signin from \"./Authentication/Signin\";\nimport {GetAuto} from \"../../redux/auto/action\";\nimport {GetMessage} from \"../../redux/message/action\";\n\n\nclass User extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.id\n        }\n    }\n\n    render() {\n\n        return (\n            <div className=\"User\">\n\n               <Switch>\n                   <Route exact path='/user/login'>\n                       <Login status={this.props.user.status} message={this.props.user.message}/>\n                   </Route>\n                   <Route exact path='/user/sign-in'>\n                       <Signin/>\n                   </Route>\n                   <Route path='/user/account'>\n                       {\n                           this.props.user.status?\n                               <Account />:''\n                       }\n                   </Route>\n                   {this.props.user.status ? <Redirect to={window.location.pathname} /> : <Redirect to='/' />}\n               </Switch>\n                {\n                    this.props.score.score.status?<Redirect to='/score/account' />: ''\n                }\n                {this.props.user.status === undefined?<div className=\"main__load\"> <Loading /> </div>:''}\n            </div>\n        );\n    }\n}\n\nconst MapStateToProps = state => state;\nconst MainUser = connect(MapStateToProps)(User)\nexport default MainUser;\n","/home/nordil/Desktop/V8/src/components/Score/Score.jsx",["422","423","424","425"],"import React,{Component} from 'react';\nimport {connect} from \"react-redux\";\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport Login from \"./Authentication/Login\";\nimport Account from \"./Account\";\nimport Loading from \"../Loading\";\nimport Signin from \"./Authentication/Signin\";\nimport './Score.scss'\nimport {GetScoreList} from \"../../redux/score/action\";\nimport Result from \"../Search/Result\";\nimport {GetMessage, SendMessage} from \"../../redux/message/action\";\n\n\nclass Score extends Component {\n    componentDidMount() {\n        // let data = new FormData();\n        // data.append(\"send_id\", 1604757123);\n        // data.append(\"get_id\", 32);\n        // data.append(\"message\", 'hellowORLD');\n        // data.append(\"score\", 'score');\n        // console.log(Array.from(data))\n\n\n    }\n\n    render() {\n\n        return(\n            <div>\n                <div className=\"User\">\n                    <Switch>\n                    <Route exact path='/score/login'>\n                        <Login/>\n                    </Route>\n                    <Route exact path='/score/sign-in'>\n                        <Signin/>\n                    </Route>\n                    <Route path='/score/account'>\n                        {\n                            this.props.score.score.status?\n                                <Account/>: ''\n                        }\n\n\n                    </Route>\n                        {\n                            this.props.score.score.status ? <Redirect to={window.location.pathname} /> : <Redirect to='/' />\n                        }\n                    </Switch>\n                    {\n                        this.props.user.status?<Redirect to='/user/account' />: ''\n                    }\n                    {\n                        this.props.score.score.status === undefined?<Loading/> : \"\"\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nconst MapStateToProps = state => state;\nconst MainScore = connect(MapStateToProps)(Score);\nexport default MainScore;\n","/home/nordil/Desktop/V8/src/components/spare/SpareParts.jsx",[],"/home/nordil/Desktop/V8/src/components/announcement/Announcement.jsx",["426","427","428","429"],"import React, {Component} from \"react\";\nimport './Announcement.scss';\nimport Header1 from \"../Home/Header\";\nimport Header2 from \"../User/Header\";\nimport Header3 from \"../Score/Header\";\nimport Footer from \"../Footer/Footer\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faDollarSign} from '@fortawesome/free-solid-svg-icons'\nimport DefaultInput from \"../forms/inputs/DefaultInput\";\nimport DefaultBtn from \"../forms/buttons/DefaultBtn\";\nimport DefaultSelect from \"../forms/select/DefaultSelect\";\nimport {connect} from \"react-redux\";\nimport {GetModel} from \"../../redux/auto/action\";\nimport { Redirect, Route} from \"react-router-dom\";\nimport Result from \"./Result\";\nimport Auto from \"./Auto\";\nimport {GetSell, GetSellByID} from \"../../redux/sellauto/action\";\nimport {GetFavorite} from \"../../redux/favorite/action\";\nimport Pagination from \"react-js-pagination\";\nimport {TEST_POST} from \"../config/Requsest\";\n\nclass Announcement extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: 1,\n            activePage: 15\n        }\n    }\n\n    componentDidMount() {\n        this.props.dispatch(GetSell(1))\n            this.props.dispatch(GetFavorite())\n\n        let id = +window.location.pathname.split('/').pop();\n        if (id !== NaN){\n            this.props.dispatch(GetSellByID(id))\n        }\n    }\n\n\n    Count = () =>{\n        let arr = [];\n        if(this.props.sell.data.count !== undefined){\n            if (this.props.sell.data.count % 15 === 0){\n                for (let i = 1; i <= (this.props.sell.data.count / 15); i++){\n\n                    arr.push(i)\n                }\n            }else{\n                for (let i = 1; i <= ((this.props.sell.data.count / 15) + 1); i++){\n                    arr.push(i)\n                }\n\n            }\n\n        }\n        return arr\n    }\n\n    Search = (e) => {\n        this.props.sell.OneAuto = [];\n        e.preventDefault();\n        this.props.dispatch(GetSell(this.state.id,e.target))\n\n    }\n    handlePageChange(pageNumber) {\n        this.setState({activePage: pageNumber});\n        pageNumber === 1 ?pageNumber = pageNumber: pageNumber = (pageNumber - 1) * 15;\n        console.log(this.props.sell.data);\n        this.props.dispatch(GetSell(pageNumber))\n\n    }\n\n    render() {\n        return (\n            <section className=\"Announcement\">\n                {\n                    this.props.user.status? <Header2/>:\n                    this.props.score.score.status?<Header3/>:\n                                            <Header1/>\n                }\n\n                <div className=\"content\">\n                    <div>\n\n                    </div>\n                    <div className=\"container row justify-between\">\n                        <form className=\"Announcement__search\" onSubmit={this.Search}>\n                            <div>\n                                <label >\n                                    <DefaultSelect\n                                        onChange={(e)=>{\n                                            this.props.sell.OneAuto = [];\n                                            this.props.dispatch(GetModel(e))\n                                        }}\n                                        name='mark'\n                                        data={this.props.auto.mark}\n                                    />\n                                </label>\n                                <label >\n                                    <DefaultSelect\n                                        name='model'\n                                        data={this.props.auto.model}\n                                    />\n                                </label>\n                            </div>\n                            <div>\n                                <label >\n                                    <select name=\"year\">\n                                        {\n                                            this.props.auto.year.map((val,id) => {\n                                                return (\n                                                    <option value={val} key={id}>{val}</option>\n                                                )\n                                            })\n                                        }\n                                    </select>\n                                </label>\n                                <label >\n                                    <DefaultSelect\n\n                                        name='royle'\n                                        data={this.props.auto.royle}\n                                    />\n                                </label>\n                            </div>\n                            <div>\n                                <label>\n                                    <div className=\"icon\">\n                                        <FontAwesomeIcon icon={faDollarSign} />\n                                    </div>\n                                    <DefaultInput\n                                        type='number'\n                                        name='min'\n                                        placeholder='Սկսած․․․'\n                                    />\n                                </label>\n                                <label>\n                                    <div className=\"icon\">\n                                        <FontAwesomeIcon icon={faDollarSign} />\n                                    </div>\n                                    <DefaultInput\n                                        type='number'\n                                        name='max'\n                                        placeholder='Մինչև․․․'\n                                    />\n                                </label>\n                            </div>\n                            <div>\n                                <label>\n                                    <DefaultInput\n                                        type='number'\n                                        name='power'\n                                        placeholder='Ձիաուժ․․․'\n                                    />\n                                </label>\n                                <label >\n                                    <DefaultSelect\n\n                                        name='traction'\n                                        data={this.props.auto.traction}\n                                    />\n                                </label>\n                            </div>\n                            <div>\n                                <label >\n                                    <DefaultSelect\n                                        name='transmission'\n                                        data={this.props.auto.transmission}\n                                    />\n                                </label>\n                                <label >\n                                    <DefaultSelect\n                                        name='fuel'\n                                        data={this.props.auto.fuel}\n                                    />\n                                </label>\n                            </div>\n                            <div >\n                                <label style={{width: '100%'}}>\n                                    <DefaultSelect\n\n                                        name='sort'\n                                        data={this.props.auto.sort}\n                                    />\n                                </label>\n                            </div>\n                            <div className=\"btn\">\n                                <DefaultBtn\n                                    type='submit'\n                                    name='Որոնել'\n                                    background='#5b716d'\n\n                                />\n                            </div>\n                        </form>\n\n                        <Route exact path='/announcement'>\n                            <div className='auto_content'>\n                                <Pagination\n                                    activePage={this.state.activePage}\n                                    itemsCountPerPage={15}\n                                    totalItemsCount={this.props.sell.data.count || 1}\n                                    pageRangeDisplayed={5}\n                                    onChange={this.handlePageChange.bind(this)}\n                                />\n                                <Result/>\n                            </div>\n                        </Route>\n                        {\n                            this.props.sell.OneAuto?\n                                <Route exact path={'/announcement/' + this.props.sell.OneAuto.id}>\n                                    <Auto/>\n                                </Route>:''\n                        }\n                    </div>\n                </div>\n                <Footer/>\n            </section>\n        )\n    }\n}\n\nconst MapStateToProps = state => state;\nconst MainAnnouncement = connect(MapStateToProps)(Announcement)\nexport default MainAnnouncement;\n","/home/nordil/Desktop/V8/src/components/Search/Result.jsx",["430","431","432","433","434","435"],"import React, {Component, Fragment} from 'react';\nimport './Search.scss'\nimport Api from \"../config/Api\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faSearch} from \"@fortawesome/free-solid-svg-icons\";\nimport Header from \"../Score/Header\";\nimport Footer from \"../Footer/Footer\";\nimport {connect} from \"react-redux\";\nimport {\n    GetSearchMarkModelLink,\n    SearchMarkModel,\n    SearchResult,\n    SearchResultAnal,\n    SearchResultAnalCount,\n    SearchResultAuto,\n    SearchResultImg, SearchResultProduct\n} from \"../../redux/search/action\";\nimport {Redirect, Route} from \"react-router\";\nimport DetaleLists from \"./DetaeLists\";\nimport ScoreList from \"./ScoreList\";\nimport {Link} from \"react-router-dom\";\nimport StoreInfo from \"../StoreInfo/StoreInfo\";\nimport ScoreListGlobal from \"./ScoreListGlobal\";\n\nclass Result extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: '',\n        }\n    }\n    SearchAll = (e) => {\n        e.preventDefault();\n        Api.get(\"analCount\",{id: e.target.dataset.id}).then( res => {\n            this.props.dispatch(SearchResultAnalCount(res.count))\n        })\n        Api.get(\"anal\",{id: e.target.dataset.id}).then( res => {\n            this.props.dispatch(SearchResultAnal(res.data))\n        })\n        Api.get(\"auto\",{id: e.target.dataset.id}).then( res => {\n            this.props.dispatch(SearchResultAuto(res.data))\n            // console.log(res)\n        })\n        Api.get(\"image\",{id: e.target.dataset.id}).then( res => {\n            this.props.dispatch(SearchResultImg(res.data))\n        })\n        Api.get(\"article\",{id: e.target.dataset.id}).then( res => {\n            this.props.dispatch(SearchResultProduct(res.data))\n        })\n\n        this.setState({\n            id : e.target.dataset.id,\n        })\n\n    }\n    render(){\n\n        return (\n            <Fragment>\n                <Header />\n                <Route exact path={'/search/result/detal/' + window.location.pathname.split('/')[window.location.pathname.split('/').length -1]}>\n                    <DetaleLists />\n                </Route>\n                <Route exact path='/search/result/'>\n                    <div className='Result'>\n                        <table className='result_code'>\n                            <thead>\n                            <tr>\n                                <th>Производитель</th>\n                                <th>Артикул</th>\n                                <th>Наименование детали</th>\n                                <th>Фото</th>\n                                <th>Ориг</th>\n                                <th>Место установки</th>\n                                <th>Назначение</th>\n                            </tr>\n\n                            </thead>\n\n                            <tbody>\n                            {\n                                this.props.result?\n                                    this.props.result.map((res, i) => {\n                                        return (\n                                            <tr data-id={res.ID} data-article={res.DataSupplierArticleNumber} key={i} onClick={this.SearchAll}>\n                                                <td data-id={res.ID} data-article={res.DataSupplierArticleNumber}>{res.ManufacturerDescription}</td>\n                                                <td data-id={res.ID} data-article={res.DataSupplierArticleNumber}><Link to={'/search/result/detal/' + res.ID} data-id={res.ID}>{res.DataSupplierArticleNumber}</Link></td>\n                                                <td data-id={res.ID} data-article={res.DataSupplierArticleNumber}>{res.ProductDescription}</td>\n                                                <td data-id={res.ID} data-article={res.DataSupplierArticleNumber}><img data-id={res.ID} src={res.FileIconFull} alt=\"\" className='image'/></td>\n                                                <td data-id={res.ID} data-article={res.DataSupplierArticleNumber}>{res.Description}</td>\n                                                <td data-id={res.ID} data-article={res.DataSupplierArticleNumber}>{res.AssemblyGroupDescription}</td>\n                                                <td data-id={res.ID} data-article={res.DataSupplierArticleNumber}>{res.UsageDescription}</td>\n                                            </tr>\n                                        )\n                                    }) : ''\n                            }\n                            </tbody>\n                        </table>\n\n                    </div>\n                    <div className=\"container\">\n                        <ScoreList />\n\n                    </div>\n                </Route>\n                <Route path={'/search/result/store/' + this.props.id}>\n                    <StoreInfo />\n                </Route>\n                <Route path={'/search/result/parts/' + this.props.link}>\n                    <ScoreListGlobal />\n                </Route>\n                <Footer />\n            </Fragment>\n        );\n    }\n}\n\nconst MapStateToProps = state => state.search;\nconst MainResult = connect(MapStateToProps)(Result);\nexport default MainResult;\n","/home/nordil/Desktop/V8/src/components/Soon/Soon.jsx",[],"/home/nordil/Desktop/V8/src/redux/user/UserReducer.js",[],"/home/nordil/Desktop/V8/src/redux/location/LocationReducer.js",[],"/home/nordil/Desktop/V8/src/redux/auto/AutoReducer.js",[],"/home/nordil/Desktop/V8/src/redux/score/ScoreReducer.js",[],"/home/nordil/Desktop/V8/src/redux/message/MessageReducer.js",[],"/home/nordil/Desktop/V8/src/components/config/Url.js",[],"/home/nordil/Desktop/V8/src/redux/sellauto/SellReducer.js",[],"/home/nordil/Desktop/V8/src/redux/favorite/FavoriteReducer.js",["436"],"import {ADD_FAVORITE, GET_FAVORITE, GET_USER_FAVORITE} from \"./action\";\n\nconst initialState = {\n    favorite: [],\n    userFavorite: []\n}\nexport default function favoriteReducer(state = initialState, action){\n    switch (action.type){\n        case GET_FAVORITE:\n            return {...state, favorite: action.payload}\n        case ADD_FAVORITE:\n            return {...state, favorite: action.payload}\n        case GET_USER_FAVORITE:\n            return {...state, userFavorite: action.payload}\n\n    }\n    return state;\n\n}\n\n\n","/home/nordil/Desktop/V8/src/redux/tmp/tmpReducer.js",[],"/home/nordil/Desktop/V8/src/redux/search/SearchReducer.js",[],"/home/nordil/Desktop/V8/src/redux/sellauto/action.js",[],"/home/nordil/Desktop/V8/src/redux/favorite/action.js",["437"],"import {GET, POST, TEST_GET} from \"../../components/config/Requsest\";\nimport {Url} from \"../../components/config/Url\";\n\nexport const GET_FAVORITE = 'GET_FAVORITE';\nexport const ADD_FAVORITE = 'ADD_FAVORITE';\nexport const GET_USER_FAVORITE = 'GET_USER_FAVORITE';\n\n\nexport function GetFavorite(){\n    return (dispach) => {\n        GET(Url.getFavorite).then(res => {\n            dispach({\n                type: GET_FAVORITE,\n                payload: res\n            })\n        })\n\n    }\n}\nexport function AddFavorite(data){\n\n    return (dispach) => {\n        POST(Url.addFavorite,data).then(res => {\n            dispach({\n                type: ADD_FAVORITE,\n                payload: res\n            })\n        })\n\n    }\n}\nexport function GetUserFavorite(){\n\n    return (dispach) => {\n        GET(Url.sendFavorite).then(res => {\n            dispach({\n                type: GET_USER_FAVORITE,\n                payload: res\n            })\n        })\n\n    }\n}\n\n\n\n\n\n","/home/nordil/Desktop/V8/src/redux/search/action.js",["438"],"import {POST, TEST_POST} from \"../../components/config/Requsest\";\nimport {Url} from \"../../components/config/Url\";\n\nexport const SEARCH_RESULT = 'SEARCH_RESULT';\nexport const SEARCH_RESULT_ANAL_COUNT = 'SEARCH_RESULT_ANAL_COUNT';\nexport const SEARCH_RESULT_ANAL = 'SEARCH_RESULT_ANAL';\nexport const SEARCH_RESULT_AUTO = 'SEARCH_RESULT_AUTO';\nexport const SEARCH_RESULT_IMG = 'SEARCH_RESULT_IMG';\nexport const SEARCH_RESULT_PRODUCT = 'SEARCH_RESULT_PRODUCT';\nexport const SEARCH_SCORE_LISTS = 'SEARCH_SCORE_LISTS';\nexport const SEARCH_MARK_MODEL = 'SEARCH_MARK_MODEL';\nexport const GET_ID = 'GET_ID';\nexport const GET_SEARCH_MARK_MODEL_LINK = 'GET_SEARCH_MARK_MODEL_LINK';\n\nexport function SearchResult(data){\n    return (dispatch) => {\n        dispatch({\n            type: SEARCH_RESULT,\n            payload: data\n        })\n    }\n}\nexport function SearchResultAnalCount(data){\n    return (dispatch) => {\n        dispatch({\n            type: SEARCH_RESULT_ANAL_COUNT,\n            payload: data\n        })\n    }\n}\nexport function SearchResultAnal(data){\n    return (dispatch) => {\n        dispatch({\n            type: SEARCH_RESULT_ANAL,\n            payload: data\n        })\n    }\n}\nexport function SearchResultAuto(data){\n    return (dispatch) => {\n        dispatch({\n            type: SEARCH_RESULT_AUTO,\n            payload: data\n        })\n    }\n}\nexport function SearchResultImg(data){\n    return (dispatch) => {\n        dispatch({\n            type: SEARCH_RESULT_AUTO,\n            payload: data\n        })\n    }\n}\nexport function SearchResultProduct(data){\n    return (dispatch) => {\n        dispatch({\n            type: SEARCH_RESULT_PRODUCT,\n            payload: data\n        })\n    }\n}\nexport function SearchScoreLists(data){\n    return (dispatch) => {\n        dispatch({\n            type: SEARCH_SCORE_LISTS,\n            payload: data\n        })\n    }\n}\n\nexport function GetStoreID(data){\n    return (dispatch) => {\n        dispatch({\n            type: GET_ID,\n            payload: data\n        })\n    }\n}\n\nexport function SearchMarkModel(data) {\n    return async (dispatch) => {\n        POST(Url.searchmarkmodel, data).then(res=> {\n            dispatch({\n                type: SEARCH_MARK_MODEL,\n                payload: res\n            })\n\n        })\n\n    }\n}\nexport function GetSearchMarkModelLink(link){\n    return (dispatch) => {\n        dispatch({\n            type: GET_SEARCH_MARK_MODEL_LINK,\n            payload: link\n        })\n    }\n}\n","/home/nordil/Desktop/V8/src/components/Home/Header.jsx",[],"/home/nordil/Desktop/V8/src/components/User/Account.jsx",[],"/home/nordil/Desktop/V8/src/components/Score/Account.jsx",["439"],"import React from 'react';\nimport Header from \"./Header\";\nimport Footer from \"../Footer/Footer\";\nimport Profile from \"./Profile/Profile\";\nimport Menu from \"../Menu/Menu\";\nimport {connect} from \"react-redux\";\n\nclass Account extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            search: true,\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"Account\">\n                <Header/>\n                {\n                    this.props.auto.mark != false?\n                        <Menu mark={this.props.auto.mark}/>:''\n\n                }\n                <Profile />\n                <Footer/>\n            </div>\n        );\n    }\n}\n\nconst MapStateToProps = state => state;\nconst MainAccount = connect(MapStateToProps)(Account);\nexport default MainAccount;","/home/nordil/Desktop/V8/src/components/spare/Header.jsx",[],"/home/nordil/Desktop/V8/src/components/User/Header.jsx",[],"/home/nordil/Desktop/V8/src/components/Score/Header.jsx",[],"/home/nordil/Desktop/V8/src/components/announcement/Result.jsx",["440","441","442","443","444","445","446"],"/home/nordil/Desktop/V8/src/components/announcement/Auto.jsx",["447","448","449","450","451","452","453","454","455","456"],"import React, {Component} from \"react\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faCheckCircle, faDollarSign, faCaretSquareDown, faTimesCircle} from '@fortawesome/free-solid-svg-icons'\nimport DefaultBtn from \"../forms/buttons/DefaultBtn\";\nimport {connect} from \"react-redux\";\nimport SliderAuto from \"../SliderAuto/SliderAuto\";\nimport {GetDialogId, GetId, GetMessage, SendMessage} from \"../../redux/message/action\";\nimport Art from \"../Alert\";\n\n\n\nclass Auto extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            message:false\n        }\n    }\n    SendMessage = (e) => {\n        e.preventDefault()\n        let data = new FormData(e.target);\n        this.props.dispatch(SendMessage(data))\n        this.textareaRef.value = '';\n        this.setState({\n            message:true\n        })\n        setTimeout(()=>{\n            this.setState({\n                message:false\n            })\n        },1500)\n    }\n    onEnterPress = (e) => {\n        if(e.keyCode == 13 && e.shiftKey == false) {\n            e.preventDefault();\n            let data = new FormData(this.formRef);\n            if (this.textareaRef.value.trim().length > 0){\n                this.props.dispatch(SendMessage(data))\n            }\n            this.props.dispatch(GetMessage())\n            this.textareaRef.value = ''\n            this.scroll()\n        }\n\n\n    }\n\n    render() {\n\n        let img;\n        if (this.props.sell.OneAuto.img != undefined){\n            img  = JSON.parse(this.props.sell.OneAuto.img)\n        }\n        let auto = this.props.sell.OneAuto;\n        return (\n\n            <div className=\"Auto\">\n                <div>\n                    <div className=\"block\">\n                        <div className='block-left'>\n                            <div className=\"car_name\">\n                                <span>{auto.model}</span>\n                                {/*<span className=\"phone_car_owner\"><FontAwesomeIcon icon={faMobileAlt}/>{auto.phone}</span>*/}\n                            </div>\n                            <div className=\"car_slider\">\n                                {\n                                    img == undefined ? '' : <SliderAuto autoImage={img}/>\n                                }\n                            </div>\n                        </div>\n\n                        <div className='block-right'>\n\n                            <div className=\"car_info\">\n\n                                <table className=\"auto_parapters\">\n                                    <tbody>\n                                    <tr>\n                                        <td style={{color:'red'}}>\n                                            {\n                                                auto.dealer == 1?<h1>Դիլեր</h1>:<h1>Անհատ</h1>\n                                            }\n                                        </td>\n\n                                    </tr>\n                                    <tr style={{color:'green'}}>\n                                        <td>Արժեք</td>\n\n                                        {\n                                            <td >\n                                                {auto.price} <span style={{fontSize:'10px'}}><FontAwesomeIcon icon={faDollarSign}/></span>\n                                            </td>\n                                        }\n                                    </tr>\n                                    <tr>\n                                        <td>Հեռախոսահամար</td>\n                                        <td>{auto.phone}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <FontAwesomeIcon icon={faCaretSquareDown}/>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>Շարժիչը</td>\n                                        <td>{auto.engine}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Ձիաուժը</td>\n                                        <td>{auto.power}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Տարեթիվ</td>\n                                        <td>{auto.year}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Գույն</td>\n                                        <td>{auto.color}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Փոխանցման տուփը</td>\n                                        <td>{auto.transmission}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Ղեկը</td>\n                                        <td>{auto.royle}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Քարշակը</td>\n                                        <td>{auto.traction}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Նույնացման համար (VIN)</td>\n                                        <td>{auto.vin}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Վառելիքը</td>\n                                        <td>{auto.fuel}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Թափքի տեսակը</td>\n                                        <td>{auto.type}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>ՏՄ Տեսակը</td>\n                                        <td>{auto.category}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Վազք</td>\n                                        <td>{auto.mileage} {auto.mesuruments}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Մաս մաս վճարում</td>\n                                        {\n                                            auto.later == 1?<td><FontAwesomeIcon icon={faCheckCircle}/></td>:<td><FontAwesomeIcon icon={faTimesCircle}/></td>\n                                        }\n                                    </tr>\n                                    <tr>\n                                        <td>Մակսազերծված</td>\n                                        {\n                                            auto.сustoms_cleared == 1?<td><FontAwesomeIcon icon={faCheckCircle}/></td>:<td><FontAwesomeIcon icon={faTimesCircle}/></td>\n                                        }\n                                    </tr>\n\n                                    </tbody>\n                                </table>\n                            </div>\n\n                            <div className=\"description_text\">\n                                <p>{auto.desc}</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"message__button\">\n                        {\n                            // this.state.message?<Alert>hax</Alert>:''\n                            this.state.message?<Art width={50} content=\"Հաղորդագրությունը ուղարկված է\"/>:''\n                        }\n\n                        {\n                            this.props.user.id == auto['user_id'] || !this.props.user.id?'':\n                           <form onSubmit={this.SendMessage}>\n                               <textarea name=\"message\" ref={el => this.textareaRef = el} onKeyDown={this.onEnterPress}></textarea>\n                                <input type=\"hidden\" name='get_id' value={auto['user_id']}/>\n                               <input type=\"hidden\" name='send_id' value={this.props.user.id }/>\n                               <input type=\"hidden\" name='state' value='user'/>\n                                <DefaultBtn\n                                    type='submit'\n                                    name='Գրել․․․'\n                                />\n                            </form>\n                        }\n                        {\n                            this.props.score.score.id?\n                                <form onSubmit={this.SendMessage}>\n                                    <textarea name=\"message\" ref={el => this.textareaRef = el} onKeyDown={this.onEnterPress}></textarea>\n                                    <input type=\"hidden\" name='get_id' value={auto['user_id']}/>\n                                    <input type=\"hidden\" name='send_id' value={this.props.score.score.id }/>\n                                    <input type=\"hidden\" name='state' value='users'/>\n                                    <DefaultBtn\n                                        type='submit'\n                                        name='Գրել․․․'\n                                    />\n                                </form>:''\n                        }\n\n                    </div>\n                </div>\n\n            </div>\n        )\n\n\n    }\n}\n\nconst MapStateToProps = state => state;\nconst MainAuto = connect(MapStateToProps)(Auto)\nexport default MainAuto;\n","/home/nordil/Desktop/V8/src/components/Search/ScoreListGlobal.jsx",["457","458"],"import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {Link} from \"react-router-dom\";\nimport {GetStoreID, SearchMarkModel} from \"../../redux/search/action\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faCheckCircle, faTimesCircle} from \"@fortawesome/free-regular-svg-icons\";\n\nclass ScoreListGlobal extends Component{\n    constructor(props) {\n        super(props);\n        this.state ={\n            id: ''\n        }\n    }\n    componentDidMount() {\n        let dataArray = window.location.pathname.match(/(\\w+\\/\\d+)/g).join().split('/'),\n            data = new FormData();\n            data.append('id', dataArray[1])\n            data.append('type', dataArray[0])\n            this.props.dispatch(SearchMarkModel(data))\n    }\n\n\n    render() {\n        console.log()\n        return(\n            <div className=\"score_list\">\n                <div className=\"container\">\n                    <nav className='score_list_info'>\n                        <div className='score_list_info__header table_style_header'>\n                            <ul>\n                                <li>Ապրանքանիշը</li>\n                                <li>Նոր</li>\n                                <li>Օգտ․</li>\n                                <li>Ընկերությունը</li>\n                                <li>Հեռախոսահամրը</li>\n                                <li>Տարածաշրջանը</li>\n                            </ul>\n                        </div>\n                        <div className='score_list_info__body table_style_body'>\n                            {\n                                this.props.MarkModelResult.status?'':\n                                    <div className=\"message\">\n                                        <p>{this.props.MarkModelResult.message}</p>\n                                    </div>\n                            }\n\n\n                            {\n                                this.props.MarkModelResult.status? this.props.MarkModelResult.mark.map((mark,i) => {\n\n                                    let store = this.props.MarkModelResult.score[i];\n                                    if (store !== undefined){\n                                        return (\n                                            <ul>\n                                                <li>{mark.mark}</li>\n                                                <li>\n                                                    {+mark.new?\n                                                        <span style={{color:'green'}}><FontAwesomeIcon icon={faCheckCircle}/></span>:\n                                                        <span style={{color:'red'}}><FontAwesomeIcon icon={faTimesCircle} /></span>\n                                                    }\n                                                </li>\n                                                <li>\n                                                    {+mark.old?\n                                                        <span style={{color:'green'}}><FontAwesomeIcon icon={faCheckCircle}/></span>:\n                                                        <span style={{color:'red'}}><FontAwesomeIcon icon={faTimesCircle} /></span>\n                                                    }\n                                                </li>\n                                                <li ><Link to={'/search/result/store/' + store.id}\n                                                           onClick={() => {\n                                                               this.setState({\n                                                                   id: store.id\n                                                               })\n                                                               this.props.dispatch(GetStoreID(store.id))\n                                                           }}\n                                                >{store.name}</Link></li>\n                                                <li>\n                                                    {\n                                                        store.phone.map(p => {\n                                                            if (p){\n                                                                let tmp = p.split('');\n                                                                let [p1,p2,p3,p4] = [\n                                                                    tmp.splice(0,2).join(''),\n                                                                    tmp.splice(0,3).join(''),\n                                                                    tmp.splice(0,3).join(''),\n                                                                ];\n\n                                                                let phone = '(+374) ' + p1 + ' ' + p2 + '-' + p3;\n                                                                return  <p>{phone}</p>\n                                                            }else {\n                                                                return ''\n                                                            }\n\n\n                                                        })\n                                                    }\n                                                </li>\n                                                <li>{store.sircle}</li>\n                                            </ul>\n                                        )\n                                    }\n\n                                }): ''\n\n                            }\n                        </div>\n                    </nav>\n                </div>\n\n            </div>\n        )\n    }\n}\n\n\nconst MapStateToProps = state => state.search;\nconst MainScoreListGobal = connect(MapStateToProps)(ScoreListGlobal);\nexport default MainScoreListGobal;\n","/home/nordil/Desktop/V8/src/components/Search/DetaeLists.jsx",["459","460","461","462","463","464","465","466","467"],"import React, {Component} from \"react\";\nimport SliderAuto from \"../SliderAuto/SliderAuto\";\nimport {connect} from \"react-redux\";\nimport Api from \"../config/Api\";\nimport {\n    SearchResultAnal,\n    SearchResultAnalCount,\n    SearchResultAuto, SearchResultImg,\n    SearchResultProduct\n} from \"../../redux/search/action\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faTimesCircle} from \"@fortawesome/free-solid-svg-icons\";\nlet data = [\n    'http://web.nirax.ru/cross/image/55/00215160503.jpg',\n    'http://web.nirax.ru/cross/image/29/00215160603.jpg',\n    'http://web.nirax.ru/cross/image/29/00215160703.jpg'\n]\nclass DetaleLists extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            analCount: 0,\n            anal: [],\n            auto: [],\n            product: '',\n            img: [],\n            fullImg: '',\n            openFullImg: false\n        }\n    }\n\n    componentDidMount() {\n        let id = window.location.pathname.split('/')[window.location.pathname.split('/').length -1];\n        Api.get(\"analCount\",{id: id}).then( res => {\n            this.setState({\n                analCount: res.count\n            })\n        })\n        Api.get(\"anal\",{id: id}).then( res => {\n            this.setState({\n                anal: res.data\n            })\n        })\n        Api.get(\"auto\",{id: id}).then( res => {\n            this.setState({\n                auto: res.data\n            })\n        })\n        Api.get(\"article\",{id: id}).then( res => {\n\n            this.setState({\n                product: res\n            })\n        })\n        Api.get(\"image\",{id: id}).then( res => {\n            res.data.map(img => {\n                this.state.img.push(img.FileImage)\n            })\n\n        })\n\n\n    }\n\n    render() {\n\n        let article = this.state.product;\n\n        return(\n            <div className=\"container\">\n                <div className=\"full_img\" style={this.state.openFullImg? {display:\"flex\"}: {display: \"none\"}}>\n                    <img src={this.state.fullImg} alt=\"\"/>\n                    <span className=\"full_img-icon\" onClick={() => this.setState({openFullImg: false})}><FontAwesomeIcon icon={faTimesCircle} /></span>\n                </div>\n                <div className=\"title\">\n                    <p>АВТОЗАПЧАСТИ</p>\n                    <p>Карточка детали: <span>{article?article.DataSupplierArticleNumber:''}</span> {article?article.ProductDescription:''}е</p>\n                </div>\n                <div className='detale_list'>\n\n                    <nav className='articul_list'>\n                        <div className='articul_list__header table_style_header'>\n                            <ul>\n                                <li>Свойство</li>\n                                <li>Значение</li>\n                            </ul>\n                        </div>\n                        <div className='articul_list__body table_style_body'>\n                            <ul>\n                                <li>Артикул</li>\n                                <li>{article?article.DataSupplierArticleNumber:''}</li>\n                            </ul>\n                            <ul>\n                                <li>Производитель</li>\n                                <li>{article?article.ManufacturerDescription:''}</li>\n                            </ul>\n                            <ul>\n                                <li>Наименование</li>\n                                <li>{article?article.ProductDescription:''}</li>\n                            </ul>\n                            <ul>\n                                <li>Код</li>\n                                <li>{article?article.ID:''}</li>\n                            </ul>\n                            <ul>\n                                <li>Вид продукции</li>\n                                <li>{article?article.ProductNormalizedDescription:''}</li>\n                            </ul>\n                            <ul>\n                                <li>Место установки</li>\n                                <li>{article?article.AssemblyGroupDescription:''}</li>\n                            </ul>\n                            <ul>\n                                <li>Назначение</li>\n                                <li>{article?article.UsageDescription:''}</li>\n                            </ul>\n                        </div>\n                    </nav>\n                    <div className='articul_list_image'>\n                        {\n                            this.state.img != false?<SliderAuto autoImage={this.state.img}/>:''\n                        }\n                    </div>\n                </div>\n\n                <div className=\"detale_list_analog\">\n\n                    <nav className='articul_list_analog'>\n                        <div className=\"analog__count\">\n                            <p>{'Аналоги ('+this.state.analCount +')'}</p>\n                        </div>\n                        <div className='articul_list_analog__header table_style_header'>\n                            <ul className='analog__title'>\n                                <li>Производитель</li>\n                                <li>Артикул</li>\n                                <li>Наименование</li>\n                                <li>Фото</li>\n                            </ul>\n                        </div>\n                        <div className='articul_list_analog__body table_style_body'>\n                            {\n                                this.state.anal?\n                                    this.state.anal.map(anal => {\n                                        return (\n                                            <ul key={anal.ID}>\n                                                <li>{anal.ManufacturerDescription}</li>\n                                                <li>{anal.DataSupplierArticleNumber}</li>\n                                                <li>{anal.ProductDescription}</li>\n                                                <li className='anal__img'>\n                                                    <img src={anal.FileIconFull} alt=\"\" onClick={(e) => {\n                                                        this.setState({\n                                                            fullImg: anal.FileImageFull,\n                                                            openFullImg: true\n                                                        })\n                                                    }}/>\n                                                </li>\n\n\n                                            </ul>\n                                        )\n                                    }): ''\n                            }\n\n                        </div>\n                    </nav>\n\n                    <nav className='articul_list_auto'>\n                        <div className=\"auto__title\"><p>Используется в автомобилях ({this.state.auto.length})</p></div>\n                        <div className='articul_list_auto__header table_style_header'>\n                            <ul className='auto__title'>\n                                <li>Модель, комплектация</li>\n                                <li>Период выпуска</li>\n                                <li>Куб.см</li>\n                                <li>Вид сборки</li>\n                            </ul>\n                        </div>\n\n                        <div className='articul_list_auto__body table_style_body'>\n                            {\n                                this.state.auto?\n                                    this.state.auto.map((auto,i) => {\n                                        let fromYear = auto.ConstructionIntervalFrom.split('').slice(0,4).join('');\n                                        let fromMonth = auto.ConstructionIntervalFrom.split('').slice(4, 6).join('');\n                                        let toYear = auto.ConstructionIntervalTo.split('').slice(0,4).join('');\n                                        let toMonth = auto.ConstructionIntervalTo.split('').slice(4, 6).join('');\n\n                                        return(\n                                            <ul key={i}>\n                                                <li>{auto.FullDescription}</li>\n                                                <li>{auto.ConstructionIntervalTo != 0? fromYear + '-' + fromMonth + ' ' + toYear + '-' + toMonth: fromYear + '-' + fromMonth}</li>\n                                                <li>{auto.Ccm}</li>\n                                                <li>{auto.KvBody}</li>\n                                            </ul>\n                                        )\n                                    }):''\n                            }\n                        </div>\n                    </nav>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nconst MapStateToProps = state => state;\nconst MainDetaleLists = connect(MapStateToProps)(DetaleLists);\nexport default MainDetaleLists;","/home/nordil/Desktop/V8/src/components/Search/ScoreList.jsx",["468"],"import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {Link} from \"react-router-dom\";\nimport {GetStoreID} from \"../../redux/search/action\";\n\nclass ScoreList extends Component{\n    constructor(props) {\n        super(props);\n        this.state ={\n            id: ''\n        }\n    }\n    render() {\n        console.log(this.props.scoreList.store)\n        return(\n            <div className=\"score_list\">\n\n                    <nav className='score_list_info'>\n                        <div className='score_list_info__header table_style_header'>\n                            <ul>\n                                <li>Պահեստամասի համարը</li>\n                                <li>Պահեստամասի անվանումը</li>\n                                <li>Արժեքը</li>\n                                <li>Ընկերությունը</li>\n                                <li>Հեռախոսահամրը</li>\n                                <li>Տարածաշրջան</li>\n                            </ul>\n                        </div>\n                        <div className='score_list_info__body table_style_body'>\n                            {\n                                this.props.scoreList.store !== false? this.props.scoreList.detal.map((detal,i) => {\n                                    let store = this.props.scoreList.store[i];\n                                    if (store !== undefined){\n                                        return (\n                                            <ul>\n                                                <li>{detal.code}</li>\n                                                <li>{detal.name}</li>\n                                                <li>{detal.price + 'Դր․'}</li>\n                                                <li ><Link to={'/search/result/store/' + store.id}\n                                                           onClick={() => {\n                                                               this.setState({\n                                                                   id: store.id\n                                                               })\n                                                               this.props.dispatch(GetStoreID(store.id))\n                                                           }}\n                                                >{store.name}</Link></li>\n                                                <li>\n                                                    {\n                                                        store.phone.map(p => {\n                                                            if (p){\n                                                                let tmp = p.split('');\n                                                                let [p1,p2,p3,p4] = [\n                                                                    tmp.splice(0,3).join(''),\n                                                                    tmp.splice(0,2).join(''),\n                                                                    tmp.splice(0,3).join(''),\n                                                                    tmp.splice(0,3).join('')\n                                                                ];\n\n                                                                let phone = '(+' + p1 + ') ' + p2 + '-' + p3 + '-' + p4;\n                                                                return  <p>{phone}</p>\n                                                            }else {\n                                                                return ''\n                                                            }\n\n\n                                                        })\n                                                    }\n                                                </li>\n                                                <li >{store.sircle}</li>\n                                            </ul>\n                                        )\n                                    }\n\n                                }): ''\n\n                            }\n                        </div>\n                    </nav>\n\n            </div>\n        )\n    }\n}\n\n\nconst MapStateToProps = state => state.search;\nconst MainScoreList = connect(MapStateToProps)(ScoreList);\nexport default MainScoreList;\n","/home/nordil/Desktop/V8/src/components/Footer/Footer.jsx",["469","470"],"import React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMapMarkerAlt,faMobileAlt ,faEnvelopeOpenText} from '@fortawesome/free-solid-svg-icons'\nimport './Footer.scss'\nexport default function (){\n    // <i class=\"fas fa-mobile-alt\"></i>\n    const info = [\n\n        {\n            icon:<FontAwesomeIcon icon={faMapMarkerAlt} />,\n            name:<a target='_blank' href=\"https://www.google.com/maps/@40.1742553,44.4522407,20.75z\">Ք․ԵՐԵՎԱՆ Ռաֆու 19</a>\n        },\n        {\n            icon:<FontAwesomeIcon icon={faMobileAlt} />,\n            name:<a href=\"tel:+37441888844\">(+374)-41-88-88-44</a>\n        },\n        {\n            icon:<FontAwesomeIcon icon={faMobileAlt} />,\n            name:<a href=\"tel:+37443888844\">(+374)-43-88-88-44</a>\n        },\n        {\n            icon:<FontAwesomeIcon icon={faMobileAlt} />,\n            name:<a href=\"tel:+37493888044\">(+374)-93-88-80-44</a>\n        },\n        {\n            icon:<FontAwesomeIcon icon={faEnvelopeOpenText} />,\n            name:<a href=\"mailto:'info@v8.am\">info@v8.am</a>\n        },\n    ]\n\n    return (\n        <footer >\n            <div className=\"container row footer_container \">\n                    <nav className=\"Footer_nav\">\n\n                            <h4>Հասցե</h4>\n                               {\n                                   info.map(({icon,name},i)=>(\n                                       <ul key={i}>\n                                           <li>{icon}</li>\n                                           <li>{name}</li>\n                                       </ul>\n                                   ))\n                               }\n\n                    </nav>\n            </div>\n        </footer>\n    )\n}","/home/nordil/Desktop/V8/src/components/Content/Content.jsx",["471"],"import React from \"react\";\nimport './Content.scss'\n\nconst auto = [\n    'https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/p90385570-highres-the-new-bmw-communic-1583423938.jpg',\n    'https://turbologo.ru/blog/wp-content/uploads/2019/12/Mercedes-Benz-logo-cover.jpg',\n    'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTk74yRfKee2ky70VHzQDmdcHeWG8bxCugp5w&usqp=CAU',\n    'https://i.pinimg.com/736x/e6/2d/94/e62d94a95417df5b9168f8eeb0c44ece.jpg',\n    'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcS3o_B7jV-oLzpha_iTKU-6TYguEFe_O7kKTQ&usqp=CAU',\n    'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQpKQ3G9x7fLd5ntlm4EOoId7u6mtnG3rX4cQ&usqp=CAU',\n    'https://s0.rbk.ru/v6_top_pics/media/img/9/68/755868697946689.jpg',\n    'https://www.mercedes-benz.ru/passengercars/mercedes-benz-cars/models/c-class/saloon-w205/explore/highlights/_jcr_content/contentgallerycontainer/par/contentgallery_6cb4/par/contentgallerytile_8/image.MQ6.8.20200213101808.jpeg',\n    'https://turbologo.ru/blog/wp-content/uploads/2019/12/Mercedes-Benz-logo-cover.jpg',\n    'https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/p90385570-highres-the-new-bmw-communic-1583423938.jpg'\n]\nconst st = [\n    {\n        backgroundImage:'url(\"https://bmwband.ru/uploads/M5/E60/BMW-M5-E60.jpg\")'\n    },\n    {\n        backgroundImage:'url(\"https://turbologo.ru/blog/wp-content/uploads/2019/12/Mercedes-Benz-logo-cover.jpg\")'\n    },\n    {\n        backgroundImage:'url(\"https://logos-download.com/wp-content/uploads/2016/02/audi-logo-wallpaper-1920x1080.jpg\")'\n    },\n    {\n        backgroundImage:'url(\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTYT1uu0l948p0cXCy-A9Xl9VgEshL1Bz9S-g&usqp=CAU\")'\n    },\n    {\n        backgroundImage:'url(\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcS3o_B7jV-oLzpha_iTKU-6TYguEFe_O7kKTQ&usqp=CAU\")'\n    },\n    {\n        backgroundImage:'url(\"https://s0.rbk.ru/v6_top_pics/media/img/4/37/755990497054374.jpg\")'\n    },\n    {\n        backgroundImage:'url(\"https://s0.rbk.ru/v6_top_pics/media/img/9/68/755868697946689.jpg\")'\n    },\n    {\n        backgroundImage:'url(\"https://www.mercedes-benz.ru/passengercars/mercedes-benz-cars/models/c-class/saloon-w205/explore/highlights/_jcr_content/contentgallerycontainer/par/contentgallery_6cb4/par/contentgallerytile_8/image.MQ6.8.20200213101808.jpeg\")'\n    },\n    {\n        backgroundImage:'url(\"https://turbologo.ru/blog/wp-content/uploads/2019/12/Mercedes-Benz-logo-cover.jpg\")'\n    },\n    {\n        backgroundImage:'url(\"https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/p90385570-highres-the-new-bmw-communic-1583423938.jpg\")'\n    }\n]\nfunction Content (){\n    return(\n        <div className=\"container content\">\n            <div className='block1'>\n                <div className='justify-center row' style={st[0]}></div>\n                <div className='justify-center row' style={st[1]}></div>\n            </div>\n            <div className='block2'>\n                <div className='justify-center row' style={st[2]}></div>\n                <div className='justify-center row' style={st[3]}></div>\n                <div className='justify-center row' style={st[4]}></div>\n            </div>\n            <div className='block3'>\n                <div className='justify-center row' style={st[5]}></div>\n            </div>\n            {/*<div className='block4'  >*/}\n            {/*    <div className='justify-center row' style={st[6]}></div>*/}\n            {/*    <div className='justify-center row' style={st[7]}></div>*/}\n            {/*    /!*<div className='justify-center row' style={st[8]}></div>*!/*/}\n            {/*    /!*<div className='justify-center row' style={st[9]}></div>*!/*/}\n            {/*</div>*/}\n        </div>\n    )\n}\n\nexport default Content;","/home/nordil/Desktop/V8/src/components/User/Authentication/Login.jsx",[],"/home/nordil/Desktop/V8/src/components/User/Authentication/Signin.jsx",[],"/home/nordil/Desktop/V8/src/components/Menu/Menu.jsx",["472","473","474","475","476","477","478"],"import React, {Component} from \"react\";\nimport './Menu.scss'\nimport {cars, maser, autogruz, service} from './autoObj'\nimport {Link, Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {GetSearchMarkModelLink, SearchMarkModel} from \"../../redux/search/action\";\n\nclass Menu extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state ={\n            mark: [],\n            truck: [],\n            redirect: false\n        }\n    }\n    componentDidMount() {\n       if (this.props.mark){\n           let mark =  this.props.mark.filter(res => {\n               switch (res.name) {\n                   case 'Audi' :\n                       return res;\n                   case 'BMW' :\n                       return res;\n                   case 'Ford' :\n                       return res;\n                   case 'Honda' :\n                       return res;\n                   case 'Hyundai' :\n                       return res;\n                   case 'Mazda' :\n                       return res;\n                   case 'Mercedes-Benz' :\n                       return res;\n                   case 'Mitsubishi' :\n                       return res;\n                   case 'Nissan' :\n                       return res;\n                   case 'Opel' :\n                       return res;\n                   case 'Toyota' :\n                       return res;\n                   case 'Volkswagen':\n                       return res;\n                   case 'Acura' :\n                       return res;\n                   case 'Bentley' :\n                       return res;\n                   case 'Cadillac' :\n                       return res;\n                   case 'Chevrolet' :\n                       return res;\n                   case 'Chrysler' :\n                       return res;\n                   case 'Citroen' :\n                       return res;\n                   case 'Chery' :\n                       return res;\n                   case 'Daewoo' :\n                       return res;\n                   case 'Dodge' :\n                       return res;\n                   case 'Fiat' :\n                       return res;\n                   case 'Infiniti' :\n                       return res;\n                   case 'Isuzu' :\n                       return res;\n                   case 'Jaguar' :\n                       return res;\n                   case 'Jeep' :\n                       return res;\n                   case 'Kia' :\n                       return res;\n                   case 'Land Rover' :\n                       return res;\n                   case 'Lexus' :\n                       return res;\n                   case 'Mini' :\n                       return res;\n                   case 'Peugeot' :\n                       return res;\n                   case 'Porsche' :\n                       return res;\n                   case 'Renault' :\n                       return res;\n                   case 'Samand' :\n                       return res;\n                   case 'Skoda' :\n                       return res;\n                   case 'Subaru' :\n                       return res;\n                   case 'Suzuki' :\n                       return res;\n                   case 'Volvo' :\n                       return res;\n                   case 'ВАЗ LADA' :\n                       return res;\n                   case 'ГАЗ Волга' :\n                       return res;\n                   case 'УАЗ' :\n                       return res;\n               }\n           })\n           let truck = this.props.mark.filter(res => {\n               switch (res.name) {\n                   case 'DAF' :\n                       return res;\n                   case 'HOWO' :\n                       return res;\n                   case 'Iveco' :\n                       return res;\n                   case 'MAN' :\n                       return res;\n                   case 'Mercedes-Benz' :\n                       return res;\n                   case 'Renault' :\n                       return res;\n                   case 'Scania' :\n                       return res;\n                   case 'Volvo' :\n                       return res;\n                   case 'ГАЗ' :\n                       return res;\n                   case 'ЗИЛ' :\n                       return res;\n                   case 'КамАЗ' :\n                       return res;\n                   case 'КрАЗ' :\n                       return res;\n                   case 'МАЗ' :\n                       return res;\n                   case 'УАЗ' :\n                       return res;\n               }\n\n           })\n\n           this.setState({\n               mark:mark,\n               truck: truck\n           })\n\n\n       }\n\n    }\n\n\n    outMenu = e =>{\n\n            this.autoParts.style.display = 'none';\n            this.autoService.style.display = 'none';\n\n    }\n    open = e => {\n        let overley = document.querySelector('.overley')\n\n        if (e.target.dataset.counter !== undefined) {\n            if(e.target.dataset.counter === '1'){\n                this.autoService.style.display = 'none';\n                if(this.autoParts.style.display === 'none' ){\n                    this.autoParts.style.display = 'block';\n                    overley.style.display = 'block'\n                }else{\n                    this.autoParts.style.display = 'none';\n                    overley.style.display = 'none'\n                }\n            }\n\n            if(e.target.dataset.counter === '2'){\n                this.autoParts.style.display = 'none';\n                if(this.autoService.style.display === 'none' ){\n                    this.autoService.style.display = 'block';\n                    overley.style.display = 'block'\n                }else{\n                    this.autoService.style.display = 'none';\n                    overley.style.display = 'none'\n                }\n            }\n        }\n    }\n    GetCarStore = (e) => {\n        let data = new FormData();\n        data.append('id', e.target.dataset.id)\n        data.append('type', e.target.dataset.type)\n        this.props.dispatch(SearchMarkModel(data))\n        this.props.dispatch(GetSearchMarkModelLink(e.target.dataset.id))\n        this.props.dispatch(GetSearchMarkModelLink(`${e.target.dataset.type}/${e.target.dataset.id}`))\n\n        this.setState({\n            redirect: true,\n        })\n        setTimeout(() => {\n            this.props.dispatch(GetSearchMarkModelLink(''))\n            this.setState({\n                redirect: false\n            })\n        },500)\n    }\n\n    render() {\n        return (\n            <div className=\"header_menu\">\n                {\n                    this.state.redirect && this.props.search.link? <Redirect to={'/search/result/parts/' + this.props.search.link}/>:''\n                }\n                <div className='overley' onClick={(e)=>{\n                    this.autoParts.style.display = 'none';\n                    this.autoService.style.display = 'none';\n                    e.target.style.display = 'none'\n\n                }}>\n\n                </div>\n                <div className=\"container row justify-between align-center\">\n                    <nav>\n                        <ul className=\"menu\">\n                            <li className=\"auto_parts\" data-counter={1} onClick={this.open}>\n                                Ավտոմասեր\n                                <div className='parts_on open' data-counter={1} style={{display:'none'}} ref={el => this.autoParts = el}>\n                                <ul className=\"auto_parts_block openX flex\" data-close={1}>\n                                    <li>\n                                        <ul className=\"parts\">\n                                            {\n                                                maser.map(({name}, i) => (\n                                                    <li key={i}>\n                                                        {name}\n                                                    </li>\n                                                ))\n                                            }\n                                        </ul>\n                                    </li>\n                                    <li>\n                                        Մարդատարի պահեստամասեր\n                                        <ul className=\"cars\">\n                                            {\n                                                this.props.auto.mark.map((mark, i) => {\n                                                    if(i !== 0){\n                                                        return (\n                                                            <li key={i} data-mark={mark.name} data-id={mark.id} data-type='car' onClick={this.GetCarStore}>\n                                                                {mark.name}\n                                                            </li>\n                                                        )\n                                                    }\n\n                                                })\n\n                                            }\n                                        </ul>\n                                    </li>\n                                    <li>\n                                        Բեռնատարի պահեստամասեր\n                                        <ul className=\"truck\">\n                                            {\n                                                this.props.auto.truck.map((mark, i) => {\n                                                    return (\n                                                        <li key={i} data-mark={mark.name} data-id={mark.id} data-type='truck' onClick={this.GetCarStore}>\n                                                            {mark.name}\n                                                        </li>\n                                                    )\n                                                })\n\n                                            }\n                                        </ul>\n                                    </li>\n                                </ul>\n                                </div>\n                            </li>\n                            <li className=\"auto_service\" data-counter={2} onClick={this.open}>\n                                Ծառայություններ\n                                <div className=\"service_on open\" style={{display:'none'}} ref={el => this.autoService = el}>\n                                    <ul className=\"service\">\n                                        {\n                                            service.map(({name},i)=>(\n                                                <li key={i}>\n                                                    <Link to='/soon'>\n                                                        {name}\n                                                    </Link>\n                                                </li>\n                                            ))\n                                        }\n                                    </ul>\n                                </div>\n                            </li>\n                            <li>\n                                <Link to='/announcement'>Հայտարարություն</Link>\n                            </li>\n                        </ul>\n                    </nav>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst MapStateToProps = state => state;\nconst MainMenu = connect(MapStateToProps)(Menu);\nexport default MainMenu;\n\n","/home/nordil/Desktop/V8/src/components/Score/Authentication/Login.jsx",[],"/home/nordil/Desktop/V8/src/components/Score/Authentication/Signin.jsx",["479","480","481"],"import React, {Component, createRef} from 'react';\nimport Header from \"./Header\";\nimport Footer from \"../../Footer/Footer\";\nimport DefaultInput from \"../../forms/inputs/DefaultInput\";\nimport DefaultBtn from \"../../forms/buttons/DefaultBtn\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {GetCity} from \"../../../redux/location/action\";\nimport {POST, TEST_POST} from \"../../config/Requsest\";\nimport {Url} from \"../../config/Url\";\nimport Art from \"../../Alert\";\n\n\nclass Signin extends Component {\n    constructor(props) {\n        super(props);\n        this.message = createRef()\n        this.state = {\n            quantity: 1,\n            obj: [\n                {\n                    type: \"tel\",\n                    placeholder: 'Հեռախոսահամար․․․',\n                    name: 'mail',\n                    width: '100%'\n                }\n            ],\n            message: '',\n            status: undefined,\n            scoreCreated: false,\n            redirect: false,\n\n        }\n\n    }\n\n    add = () => {\n        let x = this.state.obj;\n\n        if (this.state.quantity < 3) {\n\n            x.push(this.state.obj[0])\n            this.setState({\n                // quantity:++this.state.quantity\n                obj: x,\n                quantity: ++this.state.quantity\n            })\n        }\n\n    }\n    clear = () => {\n        let x = this.state.obj;\n\n        if (this.state.quantity) {\n            x.pop()\n            this.setState({\n                // quantity:++this.state.quantity\n                obj: x,\n                quantity: --this.state.quantity\n            })\n\n        }\n    }\n\n    componentDidMount() {\n\n        this.props.dispatch(GetCity(1))\n    }\n\n    GetCity(e) {\n        this.props.dispatch(GetCity(e.target.selectedIndex + 1))\n    }\n\n\n    addScore = (e) => {\n\n        e.preventDefault();\n        let data = new FormData(e.target);\n        POST(Url.addscore, data).then(res => {\n            console.log(res)\n            this.setState({\n                message: res.message,\n                status: res.status\n            })\n            if (res.status) {\n                setTimeout(() => {\n                    this.setState({\n                        redirect: true\n                    })\n                }, 1000)\n            } else {\n                this.setState({\n                    redirect: false\n                })\n            }\n        })\n\n    }\n\n    render() {\n\n        return (\n            <div className=\"Signin-score\">\n                {\n                    this.state.redirect ? <Redirect to='/score/login'/> : ''\n                }\n                <Header/>\n                <div className=\"container row align-center justify-center\">\n                    {\n                        this.state.status === undefined ? '' : this.state.status ?\n                            <Art type='success' width={50} content={this.state.message}/> :\n                            <Art type='warning' width={50} content={this.state.message}/>\n\n                    }\n                    <div className=\"Signin-score__score-content score col align-center justify-center\">\n                        <form className=\"col align-center justify-center\" onSubmit={this.addScore}\n                              encType='multipart/form-data'>\n                            <div className=\"div row justify-between\">\n                                <DefaultInput\n                                    type=\"text\"\n                                    placeholder='Անուն․․․'\n                                    name='name'\n                                    width='48%'\n                                    requred\n                                />\n                                <DefaultInput\n                                    type=\"text\"\n                                    placeholder='Ազգանուն․․․'\n                                    name='surname'\n                                    width='48%'\n                                    requred\n\n                                />\n                            </div>\n\n\n                            <DefaultInput\n                                type=\"email\"\n                                placeholder='E-mail․․․'\n                                name='email'\n                                width='100%'\n                                requred\n\n                            />\n\n                            <label className='phone_style'>\n                                <DefaultInput\n                                    type='number'\n                                    placeholder=\"Հեռախոսահամար\"\n                                    name='phone'\n                                    requred\n                                    onChange={\n                                        (e)=>{\n                                            let str = e.target.value.match(/(^\\+374\\d{8})|(^374)\\d{8}|(^0\\d{8})/y);\n                                            if (str){\n                                                let num = str[0].match(/\\d{8}$/)[0];\n                                                e.target.value = num\n                                            }\n                                        }\n                                    }\n                                />\n                            </label>\n\n\n                            <div className=\"div row justify-between\">\n                                <DefaultInput\n                                    type=\"password\"\n                                    placeholder='Գաղտնաբառ․․․'\n                                    name='password'\n                                    width='48%'\n\n                                />\n                                <DefaultInput\n                                    type=\"password\"\n                                    placeholder='Կրկնել Գաղտնաբառը․․․'\n                                    name='password2'\n                                    width='48%'\n\n                                />\n                            </div>\n\n\n                            <label className='file row align-center'>\n                                <span className='file__name'>Ներբեռնել լուսանկար․․․</span>\n                                <DefaultInput\n                                    onChange={(e) => {\n                                        document.querySelector('.file__name').textContent = e.target.value;\n                                    }}\n                                    className=\"file_input\"\n                                    type=\"file\"\n                                    placeholder='Լուսանկար․․․'\n                                    name='image'\n                                    width='100%'\n\n                                />\n                            </label>\n\n\n                            <div className=\"Signin__links row align-end justify-between\">\n                                <Link className='link' to='/score/login'>Մուտք</Link>\n                                <DefaultBtn\n                                    type='submit'\n                                    name='Գրանցվել'\n                                    background='#143645'\n                                    color='#ffffff'\n                                    light={30}\n                                    className='Signin__btn'\n                                />\n                            </div>\n                        </form>\n\n                    </div>\n                </div>\n                <Footer/>\n            </div>\n        );\n    }\n}\n\nconst MapStateToProps = state => state.location;\nconst MainSignin = connect(MapStateToProps)(Signin)\nexport default MainSignin;\n","/home/nordil/Desktop/V8/src/components/StoreInfo/StoreInfo.jsx",["482","483","484","485","486","487"],"import React, {Component} from \"react\";\nimport './StoreInfo.scss';\nimport {\n    faFacebookF,\n    faInstagram,\n    faYoutube,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport {\n    faMapMarkerAlt,\n    faPhoneSquareAlt, faTag, faAt, faClock, faCreditCard,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faEnvelope} from \"@fortawesome/free-solid-svg-icons/faEnvelope\";\nimport SliderAuto from \"../SliderAuto/SliderAuto\";\nimport {connect} from \"react-redux\";\nimport {POST} from \"../config/Requsest\";\nimport {Url} from \"../config/Url\";\nimport DefaultBtn from \"../forms/buttons/DefaultBtn\";\nimport {SendMessage} from \"../../redux/message/action\";\n\n\n\nclass StoreInfo extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: ''\n        }\n    }\n    componentDidMount() {\n        let data = new FormData()\n        data.append('id', this.props.id || window.location.pathname.split('/').pop())\n        POST(Url.getstoreforcustomer,data).then(res => {\n            this.OpenClose(res[0]['work_to'],res[0]['work_from'])\n            this.setState({\n                data: res[0]\n            })\n        })\n\n    }\n    Send = (e) => {\n        e.preventDefault()\n        let data = new FormData(e.target);\n\n        this.props.dispatch(SendMessage(data))\n        this.setState({\n            message:true\n        })\n        setTimeout(()=>{\n            this.setState({\n                message:false\n            })\n        },1500)\n    }\n    OpenClose = (to, from) => {\n        let hourse = new Date().getHours(),\n            minute = new Date().getMinutes(),\n            time = (hourse * 60) + minute,\n            toHourse = +to.split(':')[0],\n            toMinute = +to.split(':')[1],\n            toTime = (toHourse * 60) + toMinute,\n            fromHourse = +from.split(':')[0],\n            fromMinute = +from.split(':')[1],\n            fromTime = (fromHourse * 60) + fromMinute;\n        console.log('time',time)\n        console.log('toTime',toTime)\n        console.log('fromTime',fromTime)\n        if (toHourse < fromHourse){\n            // if (hourse >= toHourse && minute >= toMinute && hourse <= fromHourse && minute  <= fromMinute){\n            //     console.log(fromMinute)\n            //     this.setState({\n            //         open: true\n            //     })\n            // }else{\n            //     this.setState({\n            //         open: false\n            //     })\n            // }\n            if (time >= toTime && time <= fromTime){\n                console.log(fromMinute)\n                this.setState({\n                    open: true\n                })\n            }else{\n                this.setState({\n                    open: false\n                })\n            }\n        }else{\n            \n            if (hourse <= toHourse && minute >= toMinute && hourse >= fromHourse && minute  >= fromMinute){\n                this.setState({\n                    open: true\n                })\n            }else{\n                this.setState({\n                    open: false\n                })\n            }\n        }\n\n\n\n    }\n    render() {\n        console.log(this.state.data)\n        return(\n            <div className=\"container\">\n                {\n                    this.state.data?\n                        <div className='store'>\n\n                            <div className='store__info'>\n                                <div className='store__name'>\n                                    <p>{this.state.data.name}</p>\n                                </div>\n\n                                <nav className=\"store__getInfo\">\n                                    <ul>\n                                        <li><FontAwesomeIcon icon={faMapMarkerAlt} /></li>\n                                        <li style={{fontWeight:'bold'}}>Հասցե:</li>\n                                        <li>{this.state.data.sircle}</li>\n                                        <li>{this.state.data.city}</li>\n                                        <li>{this.state.data.addres}</li>\n                                    </ul>\n                                    <ul className='store_phone'>\n                                        <li><FontAwesomeIcon icon={faPhoneSquareAlt } /></li>\n                                        <li style={{fontWeight:'bold'}}>Հեռախոսահամար:</li>\n                                        <ul>\n                                            {\n                                                this.state.data.phone.map(p => {\n                                                    if (p){\n                                                        return (\n                                                            <li>{p}</li>\n                                                        )\n                                                    }\n                                                })\n                                            }\n\n                                        </ul>\n\n                                    </ul>\n                                    {\n                                        this.state.data.url?\n                                            <ul>\n                                                <li><FontAwesomeIcon icon={faTag} /></li>\n                                                <li style={{fontWeight:'bold'}}>Կայք:</li>\n                                                <li><a href={this.state.data.url} target='_blank'>{this.state.data.url}</a></li>\n                                            </ul>:''\n                                    }\n                                    <ul>\n                                        <li><FontAwesomeIcon icon={faAt} /></li>\n                                        <li style={{fontWeight:'bold'}}>Էլ․ հասցե:</li>\n                                        <li>{this.state.data.email}</li>\n                                    </ul>\n                                    {\n                                        this.state.data.facebook?\n                                            <ul>\n                                                <li><FontAwesomeIcon icon={faFacebookF} /></li>\n                                                <li><a href={this.state.data.facebook} target='_blank'>Facebook</a></li>\n                                            </ul>: ''\n                                    }\n                                    {\n                                        this.state.data.instagram?\n                                            <ul>\n                                                <li><FontAwesomeIcon icon={faInstagram} /></li>\n                                                <li><a href={this.state.data.instagram} target='_blank'>Instagram</a></li>\n                                            </ul>: ''\n                                    }\n                                    {\n                                        this.state.data.youtube?\n                                            <ul>\n                                                <li><FontAwesomeIcon icon={faYoutube} /></li>\n                                                <li><a href={this.state.data.youtube} target='_blank'>Youtube</a></li>\n                                            </ul>: ''\n                                    }\n                                    <ul className='store_phone'>\n                                        <li><FontAwesomeIcon icon={faClock} /></li>\n                                        <li style={{fontWeight:'bold'}}>Աշխ-Ժամերը:</li>\n                                        <ul>\n                                            {\n                                                this.state.data['work_to']?\n                                                    <li>\n                                                        {this.state.data['work_to'] + '-' + this.state.data['work_from']}\n                                                        {\n                                                            this.state.open?\n                                                                <span style={{color:\"green\",margin: \"0px 10px\", fontWeight:\"bold\"}}>Բաց է</span>:\n                                                                <span style={{color:\"red\",margin: \"0px 10px\", fontWeight:\"bold\"}}>Փակ է</span>\n                                                        }\n\n\n                                                    </li>:''\n                                            }\n\n                                        </ul>\n\n                                    </ul>\n                                    {\n                                        +this.state.data.credit?\n                                            <ul className='store_phone'>\n                                                <li><FontAwesomeIcon icon={faCreditCard} /></li>\n                                                <li style={{fontWeight:'bold'}}>Ապառիկ վաճառք․․․</li>\n\n                                            </ul>:''\n                                    }\n\n                                </nav>\n                                <ul className='store_message'>\n                                    <li>\n                                        {\n                                            this.state.data.id && this.props.user.id?\n                                                <form onSubmit={this.Send}>\n                                                    <textarea placeholder='Ուղարկել հաղորդագրություն․․․' name='message'></textarea>\n                                                    <input type=\"hidden\" name='get_id' value={this.state.data.id}/>\n                                                    <input type=\"hidden\" name='send_id' value={this.props.user.id}/>\n                                                    <input type=\"hidden\" name='state' value='score'/>\n                                                    <button type='submit' className='send'>\n                                                        <FontAwesomeIcon icon={faEnvelope} />\n                                                    </button>\n                                                </form>:''\n                                        }\n                                        {\n                                            this.state.data.score_id && this.props.score.score.id?\n                                                <form onSubmit={this.Send}>\n                                                    <textarea placeholder='Ուղարկել հաղորդագրություն․․․' name='message'></textarea>\n                                                    <input type=\"hidden\" name='get_id' value={this.state.data.score_id}/>\n                                                    <input type=\"hidden\" name='send_id' value={this.props.score.score.id}/>\n                                                    <input type=\"hidden\" name='state' value='scores'/>\n                                                    <button type='submit' className='send'>\n                                                        <FontAwesomeIcon icon={faEnvelope} />\n                                                    </button>\n                                                </form>:''\n                                        }\n\n\n                                    </li>\n\n                                </ul>\n                            </div>\n                            <div className=\"store__slider\">\n                                <SliderAuto autoImage={this.state.data.img}/>\n                            </div>\n                        </div>: ''\n                }\n\n            </div>\n        )\n    }\n}\n\nconst MapStateToProps = state => {\n    return {\n        search: state.search,\n        user: state.user,\n        score: state.score\n    }\n};\nconst MainStoreInfo = connect(MapStateToProps)(StoreInfo);\nexport default MainStoreInfo;\n","/home/nordil/Desktop/V8/src/components/forms/inputs/DefaultInput.jsx",["488"],"import React, {Component} from 'react';\nimport '../../../style/_All.scss'\nclass DefaultInput extends Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return (\n            <input\n                onChange={this.props.onChange}\n                onInput={this.props.onInput}\n                placeholder={this.props.placeholder}\n                className={this.props.className}\n                name={this.props.name}\n                defaultValue={this.props.defaultValue}\n                value={this.props.value}\n                type={this.props.type}\n                key={this.props.key}\n                required={this.props.required}\n                defaultChecked={this.props.checked}\n                style={{\n                    transition: '.3s',\n                    width:this.props.width,\n                    height:this.props.height,\n                    backgroundColor: this.props.background,\n                    padding: this.props.padding,\n                    margin: this.props.margin,\n                    borderRadius: this.props.borderRadius,\n                    border:  this.props.border\n                }}\n\n            />\n        )\n    }\n}\n\nexport default DefaultInput;","/home/nordil/Desktop/V8/src/components/forms/buttons/DefaultBtn.jsx",["489","490","491"],"import React, {Component} from 'react';\nimport './Button.scss';\nimport {LightenDarkenColor} from \"lighten-darken-color\";\n\nclass DefaultBtn extends Component {\n    constructor(props) {\n        super(props);\n\n\n    }\n    render() {\n        return (\n            <button\n                onMouseEnter={(e) => {\n                    if (this.props.background != undefined){\n                        e.target.style.backgroundColor = `${LightenDarkenColor(this.props.background, -this.props.dark || this.props.light ||  -30)}`\n                    }\n\n                }}\n                onMouseLeave={(e) => {\n                    if (this.props.background != undefined){\n                        e.target.style.backgroundColor = `${this.props.background}`\n                    }\n\n                }}\n                onClick={this.props.onClick}\n                id={this.props.id}\n                data-id={this.props.dataId}\n                className={this.props.className}\n                type={this.props.type}\n                disabled={this.props.disabled}\n                style={{\n                    backgroundColor: this.props.background,\n                    color:'' || this.props.color,\n                    padding: this.props.padding,\n                    borderRadius: this.props.borderRadius,\n                    fontSize: this.props.fontSize,\n                    fontFamily: this.props.fontFamily,\n                    width: this.props.width\n                }}\n\n            >{this.props.name}</button>\n        )\n    }\n}\n\nexport default DefaultBtn;","/home/nordil/Desktop/V8/src/components/forms/select/DefaultSelect.jsx",[],"/home/nordil/Desktop/V8/src/redux/auto/Values.js",[],"/home/nordil/Desktop/V8/src/redux/tmp/action.js",[],"/home/nordil/Desktop/V8/src/components/Alert.js",[],"/home/nordil/Desktop/V8/src/components/Menu/autoObj.js",[],"/home/nordil/Desktop/V8/src/components/Search/Search.jsx",[],"/home/nordil/Desktop/V8/src/components/announcement/SellCar.jsx",["492","493","494"],"import React, {Component} from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport './SellCar.scss'\nimport {connect} from \"react-redux\";\nimport {faDollarSign, faMapMarkerAlt} from \"@fortawesome/free-solid-svg-icons\";\n\n\n\n\nclass SellCar extends  Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            index:0,\n            isFav: false\n\n        }\n    }\n\n\n    out = (e)=>{\n        let span = document.querySelector('.'+e.target.className + '>span')\n        e.target.childNodes[0].style.background = 'silver'\n    }\n\n    show = (e)=>{\n        this.setState({\n            index:e.target.dataset.src\n        })\n        let span = document.querySelector('.'+e.target.className + '>span')\n        e.target.childNodes[0].style.background = 'blue'\n\n\n    }\n\n\n    render() {\n        let img = JSON.parse(this.props.Auto.img);\n        let navWidth = (100 / img.length) + '%' ;\n        return (\n            <div className=\"getSellCar\" data-id={this.props.Auto.id} data-user={this.props.Auto.user_id}>\n                <div className=\"getSellCar_header\" data-id={this.props.Auto.id} data-user={this.props.Auto.user_id}>\n\n                    <div className=\"getSellCar_header_image\" data-id={this.props.Auto.id} data-user={this.props.Auto.user_id} style={{backgroundImage:`url(${img[this.state.index]})`}}>\n                    </div>\n\n                    <div className=\"getSellCar_header_check\" data-id={this.props.Auto.id} data-user={this.props.Auto.user_id}>\n                        {\n                            img.map((e,i)=>(\n                                img.length > 1?\n                                <div\n                                    className={'block' + i}\n                                    key={i}\n                                    onMouseOut={this.out}\n                                    onMouseOver={this.show}\n                                    data-src={i}\n                                    style={{width:navWidth}}\n                                    data-id={this.props.Auto.id}\n                                >\n                                    <span data-id={this.props.Auto.id} className='getSellCar_block'></span>\n                                </div>:''\n                            ))\n                        }\n                    </div>\n                </div>\n\n                <div className=\"getSellCar_body\" data-id={this.props.Auto.id} >\n                    <div className='getSellCar_body_block1' data-id={this.props.Auto.id} data-user={this.props.Auto.user_id}>\n                        <span data-id={this.props.Auto.id} data-user={this.props.Auto.user_id}>{this.props.Auto.model}</span>\n                    </div>\n                    <div className='getSellCar_body_block2' data-id={this.props.Auto.id} data-user={this.props.Auto.user_id}>\n                        <span data-id={this.props.Auto.id} data-user={this.props.Auto.user_id}>{this.props.Auto.price} <FontAwesomeIcon icon={faDollarSign} /></span>\n                        <span data-id={this.props.Auto.id} data-user={this.props.Auto.user_id}>{this.props.Auto.year}</span>\n                    </div>\n                    <div className='getSellCar_body_block2' data-id={this.props.Auto.id } data-user={this.props.Auto.user_id}>\n                        <span data-id={this.props.Auto.id} data-user={this.props.Auto.user_id}>{this.props.Auto.city}</span>\n                        <span data-id={this.props.Auto.id} data-user={this.props.Auto.user_id}>{this.props.Auto.sircle}</span>\n                    </div>\n                    <div className='getSellCar_body_block2' data-id={this.props.Auto.id} data-user={this.props.Auto.user_id}>\n                        <span data-id={this.props.Auto.id} data-user={this.props.Auto.user_id}>{this.props.Auto.data.split(' ')[0]}</span>\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}\n\n\nconst MapStateToProps = state => state;\nconst MainSellCar = connect(MapStateToProps)(SellCar)\nexport default MainSellCar;","/home/nordil/Desktop/V8/src/components/User/Profile/PersionalData.jsx",["495","496"],"\nimport React from 'react';\nimport {connect} from \"react-redux\";\nimport {Link, Route} from \"react-router-dom\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\n\nimport {\n    faEnvelope,\n    faMapMarkerAlt,\n    faMobileAlt,\n    faCog\n} from \"@fortawesome/free-solid-svg-icons\";\n\n\n\nclass PersionalData extends React.Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    render() {\n    let data = this.props.user.data || this.props.score.score.data;\n        // console.log(data);\n        return (\n            <div className=\"persional__data\">\n\n                {\n                    data === undefined ? '' : (\n                        <div>\n                            <div className=\"persional__header\">\n                                <div className=\"img\" style={{backgroundImage:`url(${data.img})`}}>\n                                </div>\n                                <div className=\"fullname\">\n                                    <span>{data.name}</span>\n                                    <span>{data.surname}</span>\n                                </div>\n                                <div className=\"persional__setings\">\n                                    <Link to='/user/account/setings'><FontAwesomeIcon icon={faCog}/></Link>\n                                </div>\n\n                                {/*{*/}\n                                {/*    this.props*/}\n                                {/*}*/}\n                            </div>\n\n                            <div className=\"persional__body col justify-center align-center\">\n\n                                <nav>\n                                    <ul>\n                                        <li>\n                                            <div className=\"icon\">\n                                                <FontAwesomeIcon icon={faMobileAlt}/>\n                                            </div>\n                                            <div>\n                                                <span>{data.phone}</span>\n                                            </div>\n                                        </li>\n\n                                        <li>\n                                            <div className=\"icon\">\n                                                <FontAwesomeIcon icon={faEnvelope}/>\n                                            </div>\n                                            <div>\n                                                <span>{data.email}</span>\n                                            </div>\n                                        </li>\n\n                                        <li>\n                                            <div className=\"icon\">\n                                                <FontAwesomeIcon icon={faMapMarkerAlt}/>\n                                            </div>\n                                            <div>\n                                                <span>{data.sircle} {data.city}</span>\n                                            </div>\n                                        </li>\n                                    </ul>\n                                </nav>\n\n\n                            </div>\n                        </div>\n                    )\n                }\n\n\n            </div>\n        );\n    }\n}\n\nconst MapStateToProps = state => state;\nconst MainPersionalData = connect(MapStateToProps)(PersionalData)\n\nexport default MainPersionalData;\n","/home/nordil/Desktop/V8/src/components/User/Profile/Profile.jsx",["497","498"],"import React from 'react';\nimport {connect} from \"react-redux\";\nimport './Profile.scss'\nimport {Link, Route, Switch} from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart, faEnvelope, faCar, faPlusCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport ProfilSetings from \"./ProfilSetings\";\nimport UserCars from \"../UserCars/UserCars\";\nimport CarsForm from \"../UserCars/CarsForm\";\nimport '../../announcement/Announcement.scss'\nimport '../../announcement/SellCar.scss'\nimport GeFavorite from \"../../favorite/GeFavorite\";\nimport Message from \"../message/Message\";\n\n\nimport {GetMessage} from \"../../../redux/message/action\";\n\n\nclass Profile extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            link:''\n        }\n    }\n    componentDidMount() {\n        this.setState({\n            link:window.location.pathname\n        })\n    }\n\n    render() {\n        let status = 0;\n        // this.props.message.message.map((data) => {\n        //     if (+this.props.user.id !== +data['send_id']){\n        //         status += +data.status;\n        //     }\n        //\n        // })\n\n        if(this.props.user.id != undefined){\n            return (\n\n                <section className=\"Profile col\">\n                    <div className=\"container\">\n                        <div className=\"Profile__information row justify-between\">\n                            <nav className='Profile__nav'>\n                                <ul >\n                                    <li>\n                                        <Link to='/user/account/persional'>\n                                            <div className=\"icon\">\n                                                <FontAwesomeIcon icon={faEnvelope} color={status? 'red':''}/>\n                                            </div>\n                                            <span>Հաղորդագրություններ</span>\n\n                                        </Link>\n                                    </li>\n                                    <li>\n                                        <Link to='/user/account/cars'>\n                                            <div className=\"icon\">\n                                                <FontAwesomeIcon icon={faCar}/>\n                                            </div>\n                                            <span>Իմ Մեքենաները</span>\n                                        </Link>\n                                    </li>\n                                    <li>\n                                        <Link to='/user/account/favorite'>\n                                            <div className=\"icon\">\n                                                <FontAwesomeIcon icon={faHeart}/>\n                                            </div>\n                                            <span>Նախնտրելի</span>\n\n                                        </Link>\n                                    </li>\n                                    <li>\n                                        <Link to='/user/account/cars/add'>\n                                            <div className=\"icon\">\n                                                <FontAwesomeIcon icon={faPlusCircle}/>\n                                            </div>\n                                            <span>Ավելացնել</span>\n\n                                        </Link>\n                                    </li>\n                                </ul>\n                            </nav>\n\n                            <div className=\"Profile__content\">\n                                <Switch>\n                                    <Route path='/user/account/setings'>\n                                        <ProfilSetings />\n                                    </Route>\n                                    <Route path='/user/account/cars/add'>\n                                        <CarsForm/>\n                                    </Route>\n                                    <Route path='/user/account/cars'>\n                                        {\n                                            this.props.auto.auto.status ? <UserCars/> :this.props.auto.auto.message\n                                        }\n                                    </Route>\n                                    <Route path='/user/account/setings'>\n                                        <ProfilSetings />\n                                    </Route>\n                                    <Route path='/user/account/favorite'>\n                                        <GeFavorite />\n                                    </Route>\n                                    <Route  path='/user/account/persional'>\n                                        <Message id={this.props.user.id}/>\n                                    </Route>\n                                </Switch>\n                            </div>\n                        </div>\n                    </div>\n\n                </section>\n            );\n        }else\n        {\n            return <div></div>\n        }\n\n    }\n}\n\nconst MapStateToProps = state => state;\nconst MainProfile = connect(MapStateToProps)(Profile)\n\nexport default MainProfile;\n","/home/nordil/Desktop/V8/src/components/User/Authentication/Header.jsx",[],"/home/nordil/Desktop/V8/src/components/Score/Authentication/Header.jsx",[],"/home/nordil/Desktop/V8/src/components/Score/Profile/PersionalDataScore.jsx",[],"/home/nordil/Desktop/V8/src/components/Score/Profile/Profile.jsx",["499","500","501"],"import React from 'react';\nimport {connect} from \"react-redux\";\nimport './Profile.scss'\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faEnvelope, faHome, faCarBattery, faQuestionCircle, faHeart} from \"@fortawesome/free-solid-svg-icons\";\nimport {Link,Route, Switch} from \"react-router-dom\";\n\nimport ScoreList from \"../ScoreList/ScoreList\";\n\nimport {GetScoreList, GetScoreListId} from \"../../../redux/score/action\";\n\nimport AutoParts from \"../../AutoParts/AutoParts\";\n\nimport Message from \"../message/Message\";\nimport GeFavorite from \"../../favorite/GeFavorite\";\nimport ProfilSetingsScore from \"./ProfilSetingsScore\";\n\n\n\n\nclass Profile extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: 0\n        }\n    }\n    componentDidMount() {\n        this.props.dispatch(GetScoreList())\n    }\n\n\n\n    render() {\n        let pathId = '';\n        if (this.props.score.scoreList != false){\n             pathId = this.props.score.scoreList[0].id;\n        }\n        return (\n\n            <section className=\"Profile col\">\n                {/*{*/}\n                {/*    window.location.pathname == '/score/account' || '/score/account/' ? <Redirect to={'/score/account/list/' +pathId}/>: ''*/}\n                {/*}*/}\n                <div className=\"container\">\n                    <div className=\"Profile__information row justify-between\">\n                        <nav className='Profile__nav'>\n                            <ul >\n                                <li>\n                                    <Link to={'/score/account'}>\n                                        <div className=\"icon\">\n                                            <FontAwesomeIcon icon={faHome}/>\n                                        </div>\n                                        Իմ էջը\n                                    </Link>\n                                </li>\n                                <li>\n                                    <Link to={'/score/account/message/' + this.props.message.messageId}>\n                                        <div className=\"icon\">\n                                            <FontAwesomeIcon icon={faEnvelope}/>\n                                        </div>\n                                        Հաղորդագրություններ\n                                    </Link>\n                                </li>\n                                <li>\n                                    <Link to='/score/account/favorite'>\n                                        <div className=\"icon\">\n                                            <FontAwesomeIcon icon={faHeart}/>\n                                        </div>\n                                        <span>Նախնտրելի</span>\n                                    </Link>\n                                </li>\n                                <li>\n                                    <Link to='/score/account/cars'>\n                                        <div className=\"icon\">\n                                            <FontAwesomeIcon icon={faCarBattery}/>\n                                        </div>\n                                        Պահեստամասեր\n                                    </Link>\n                                </li>\n                                <li>\n                                    <Link to='/score/account/cars'>\n                                        <div className=\"icon\">\n                                            <FontAwesomeIcon icon={faQuestionCircle}/>\n                                        </div>\n                                        Ծառայություներ\n                                    </Link>\n                                </li>\n                            </ul>\n                        </nav>\n\n                        <div className=\"Profile__content\">\n                            <Switch>\n                                <Route  path='/score/account/cars'>\n                                    <AutoParts />\n                                </Route>\n                                <Route path={'/score/account/message/' + this.props.message.messageId}>\n                                    <Message/>\n                                </Route>\n                                <Route path='/score/account/favorite'>\n                                    <GeFavorite />\n                                </Route>\n                                <Route path='/score/account/setings'>\n                                    <ProfilSetingsScore />\n                                </Route>\n                                <ScoreList />\n                            </Switch>\n                        </div>\n                    </div>\n                </div>\n\n            </section>\n        );\n    }\n}\n\nconst MapStateToProps = state => state;\nconst MainProfile = connect(MapStateToProps)(Profile)\n\nexport default MainProfile;\n","/home/nordil/Desktop/V8/src/components/SliderAuto/SliderAuto.jsx",[],"/home/nordil/Desktop/V8/src/components/User/Profile/ProfilSetings.jsx",[],"/home/nordil/Desktop/V8/src/components/Score/Profile/ProfilSetingsScore.jsx",["502"],"import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport './Profile.scss'\nimport {POST} from \"../../config/Requsest\";\nimport {Url} from \"../../config/Url\";\nimport Art from \"../../Alert\";\nimport {Redirect} from \"react-router\";\nimport {ScoreExist} from \"../../../redux/score/action\";\n\nclass ProfilSetingsScore extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imgName: '',\n            message: '',\n            redirect: false,\n            status: undefined,\n        }\n        this.passwordRef = React.createRef();\n        this.NewPasswordRef = React.createRef();\n        this.NewPassword2Ref = React.createRef();\n    }\n    componentDidMount() {\n    }\n\n    Setings = (e) => {\n        e.preventDefault();\n        let data = new FormData(e.target)\n        POST(Url.scoreSetingsUser,data).then(res => {\n            if (res.status){\n                this.setState({\n                    message: res.message,\n                    status: true,\n                })\n                this.props.dispatch(ScoreExist())\n                setTimeout(() => {\n                    this.setState({\n                        status: undefined,\n                        redirect: true\n                    })\n                    setTimeout(() => {\n                        this.setState({\n                            redirect: false\n                        })\n                    },2000)\n                },2000)\n            }else{\n                this.setState({\n                    message: res.message,\n                    status: false\n                })\n                setTimeout(() => {\n                    this.setState({\n                        status: undefined\n                    })\n                },2000)\n                this.passwordRef.current.value = '';\n                this.NewPasswordRef.current.value = '';\n                this.NewPassword2Ref.current.value = '';\n            }\n        })\n    }\n\n    render() {\n        return (\n            <div className='score__setings'>\n                {\n                    this.state.redirect? <Redirect to='/score/account'/>:''\n                }\n                <form onSubmit={this.Setings} encType='multipart/form-data'>\n                    {\n                        this.state.status != undefined?\n                            this.state.status?\n                            <Art type='success' content={this.state.message}/>:\n                            <Art type='error' content={this.state.message}/>\n                            : ''\n                    }\n                    <label>\n                        <input\n                            type=\"text\"\n                            name='name'\n                            placeholder='Անուն․․․'\n                            defaultValue={this.props.name}\n                        />\n                    </label>\n                    <label>\n                        <input\n                            type=\"text\"\n                            name='surname'\n                            placeholder='Ազգանուն․․․'\n                            defaultValue={this.props.surname}\n                        />\n                    </label>\n                    <label>\n                        <input\n                            type=\"number\"\n                            name='phone'\n                            placeholder='Հեռախոսահամար․․․'\n                            defaultValue={this.props.phone}\n                        />\n                    </label>\n                    <label>\n                        <input\n                            type=\"email\"\n                            name='email'\n                            placeholder='E-mail'\n                            defaultValue={this.props.email}\n                        />\n                    </label>\n                    <label>\n                        <input\n                            type=\"password\"\n                            name='password'\n                            placeholder='Ձեր գաղտնաբառը․․․'\n                            ref={this.passwordRef}\n                        />\n                    </label>\n                    <label>\n                        <input\n                            type=\"password\"\n                            name='new_password'\n                            placeholder='Նոր գաղտնաբառը․․․'\n                            ref={this.NewPasswordRef}\n                        />\n                    </label>\n                    <label>\n                        <input\n                            type=\"password\"\n                            name='new_password2'\n                            placeholder='Կրկնել նոր գաղտնաբառը․․․'\n                            ref={this.NewPassword2Ref}\n                        />\n                    </label>\n                    <label className='file'>\n                        <span>{this.state.imgName ? this.state.imgName.split('\\\\').pop() : 'Ներբեռնել լուսանկար'}</span>\n                        <input\n                            type=\"file\"\n                            name='img'\n                            onChange={(e) => {\n                                this.setState({\n                                    imgName: e.target.value\n                                })\n                            }}\n                        />\n                    </label>\n                    <label>\n                        <button>Send</button>\n                    </label>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst MapStateToProps = state => state.score.score.data;\nconst MainProfilSetingsScore = connect(MapStateToProps)(ProfilSetingsScore);\nexport default MainProfilSetingsScore;","/home/nordil/Desktop/V8/src/components/SliderAuto/Zoom.jsx",["503"],"import React, {Component} from \"react\";\nimport './Zoom.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faChevronLeft,faChevronRight,faWindowClose,faSearchMinus} from '@fortawesome/free-solid-svg-icons'\n\nclass Zoom extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showImg:this.props.autoImage,\n            zoom:false\n        }\n\n    }\n    componentDidMount() {\n\n    }\n\n\n    show = (e)=>{\n        let a = this.state.showImg\n        let save = a[e.target.dataset.src]\n\n        a[e.target.dataset.src] = a[0]\n        a[0] = save\n        this.setState({\n            showImg:a\n        })\n    }\n    next = () =>{\n        let a = this.state.showImg\n        let save = a.shift()\n        a.push(save)\n        this.setState({\n            showImg:a\n        })\n    }\n\n    back = () => {\n        let a = this.state.showImg\n        let save = a.pop()\n        a.unshift(save)\n        this.setState({\n            showImg:a\n        })\n    }\n    render() {\n        return (\n            <div className=\"slider_auto_zoom\">\n                <span className=\"close_zoom\" onClick={this.props.offZoom}>\n                    <FontAwesomeIcon icon={faSearchMinus} />\n                </span>\n                <div className=\"slider_img_header\" onClick={this.onZoom} style={{\n                    backgroundImage:`url(${this.state.showImg[0]})`,\n                    height:this.props.autoImage.length>2?\"60%\":\"100%\"\n                }}>\n                    {\n                        (this.props.autoImage.length>2) ?<div>\n                            <span onClick={this.back}>\n                                <FontAwesomeIcon icon={faChevronLeft} />\n                            </span>\n                            <span onClick={this.next}>\n                                <FontAwesomeIcon icon={faChevronRight} />\n                            </span>\n                        </div>:''\n\n\n                    }\n\n                </div>\n                {this.props.autoImage.length>2?<div className=\"slider_img_body\">\n                    {\n                        this.props.autoImage?this.props.autoImage.map((img,i)=>(\n                            <div\n                                key={i}\n                                onClick={this.show}\n                                data-src={i}\n                                style={{\n                                    backgroundImage:`url(${img})`,\n                                    width:100/this.props.autoImage.length + '%'\n                                }}\n                            >\n                            </div>\n                        )):''\n\n                    }\n                </div>:''}\n            </div>\n        )\n    }\n}\n\nexport default Zoom;","/home/nordil/Desktop/V8/src/components/favorite/GeFavorite.jsx",[],"/home/nordil/Desktop/V8/src/components/User/UserCars/CarsForm.jsx",["504","505","506","507","508","509","510"],"import React, {Component} from \"react\";\nimport './UserCars.scss'\nimport DefaultSelect from \"../../forms/select/DefaultSelect\";\nimport {connect} from \"react-redux\";\nimport {GetAuto, GetModel} from \"../../../redux/auto/action\";\nimport DefaultInput from \"../../forms/inputs/DefaultInput\";\nimport {POST, TEST_POST} from \"../../config/Requsest\";\nimport {Url} from \"../../config/Url\";\nimport ReactAudioPlayer from 'react-audio-player';\nimport DefaultBtn from \"../../forms/buttons/DefaultBtn\";\nimport {Redirect} from \"react-router\";\nimport Loading from \"../../Loading\";\n\n\n\nclass CarsForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state ={\n            img: [],\n            audio: false,\n            message: 'Մուտքագրեք ձեր մեքենայի տվյալները',\n            status: true,\n            isAdd: false,\n            loading: false\n        }\n    }\n\n    componentDidMount() {\n        this.props.dispatch(GetModel())\n    }\n\n    GetImg(e){\n        // document.querySelector('.file__name').textContent = e.target.value;\n        this.setState({\n            img: [...this.state.img,e.target.files]\n        })\n\n    }\n    startAudio = () => {\n        this.setState({\n            audio: false\n        })\n    }\n\n    AddAuto(e) {\n        e.preventDefault();\n        let data = new FormData(e.target)\n        this.setState({\n            audio: true\n        })\n        setTimeout(this.startAudio,2000)\n        this.state.img.map(file => {\n            data.append('image[]', file[0])\n        })\n        POST(Url.addauto,data).then(res => {\n            console.log(res)\n            this.setState({\n                status: res.status,\n                loading: res.status\n            })\n            if (res.status){\n                this.props.dispatch(GetAuto(this.props.user.id))\n               setTimeout(() => {\n                   this.setState({\n                       isAdd: true\n                   })\n               },2000)\n            }else{\n                this.setState({\n                    message: res.message\n                })\n            }\n        })\n    }\n\n    render() {\n\n        const {dispatch} = this.props\n        return (\n                <div className=\"cars_forma\">\n\n                    {\n                        this.state.audio ?\n                            <ReactAudioPlayer\n                            src=\"https://brutal.am/Server/audio/v8.mp3\"\n                            autoPlay />  : ''\n                    }\n                    {this.state.isAdd ? <Redirect to='/user/account/cars' /> : ''}\n                    <h1 style={this.state.status ? {color: 'green'} : {color: 'red'}}>{this.state.message}</h1>\n                    <form id='add__auto' encType='multipart/form-data' onSubmit={this.AddAuto.bind(this)}>\n                        <div className='items'>\n                            <span>*</span>\n                            <DefaultSelect\n                                onChange={(e)=>{\n                                   dispatch(GetModel(e))\n                                }}\n                                name='mark'\n                                data={this.props.auto.mark}\n                            />\n                        </div>\n                        <div className=\"items\">\n                            <span>*</span>\n                            <DefaultSelect\n                                name='model'\n                                data={this.props.auto.model}\n                            />\n                        </div>\n                        <div className=\"items\">\n                            <span>*</span>\n                            <label>\n                                <DefaultInput\n                                    type='text'\n                                    name='vin'\n                                    placeholder='VIN'\n                                />\n                            </label>\n                        </div>\n                        <div className=\"items\">\n                            <span>*</span>\n                            <select name=\"year\">\n                                {\n                                    this.props.auto.year.map((val,id) => {\n                                        return (\n                                            <option value={val} key={id}>{val}</option>\n                                        )\n                                    })\n                                }\n                            </select>\n                        </div>\n                        <DefaultInput\n                            type='hidden'\n                            name='phone'\n                            value={this.props.user.data != undefined ?this.props.user.data.phone: ''}\n                        />\n                        <DefaultInput\n                            type='hidden'\n                            name='sircle'\n                            value={this.props.user.data != undefined ?this.props.user.data.sircle: ''}\n                        />\n                        <DefaultInput\n                            type='hidden'\n                            name='city'\n                            value={this.props.user.data != undefined ?this.props.user.data.city: ''}\n                        />\n                        <div className=\"items\">\n                            <span>*</span>\n                            <select name=\"engine\">\n\n                                {\n                                   this.props.auto.engine.map((val,id) => {\n                                       return (\n                                           <option value={val} key={id}>{val}</option>\n                                       )\n                                   })\n                                }\n                            </select>\n                        </div>\n                        <div className=\"items\">\n                            <label>\n                                <input\n                                    type=\"text\"\n                                    name='power'\n                                    placeholder='Ձիաուժ'\n                                />\n                            </label>\n                        </div>\n                        <div className=\"items\">\n                            <span>*</span>\n                            <DefaultSelect\n                                name='royle'\n                                data={this.props.auto.royle}\n                            />\n                        </div>\n                        <div className=\"items\">\n                            <span>*</span>\n                            <DefaultSelect\n                                name='color'\n                                data={this.props.auto.color}\n                            />\n                        </div>\n                        <div className=\"items\">\n                            <span>*</span>\n                            <DefaultSelect\n                                name='fuel'\n                                data={this.props.auto.fuel}\n                            />\n                        </div>\n                        <div className=\"items\">\n                            <span>*</span>\n                            <DefaultSelect\n                                name='transmission'\n                                data={this.props.auto.transmission}\n                            />\n                        </div>\n                        <div className=\"items\">\n                            <span>*</span>\n                            <DefaultSelect\n                                name='type'\n                                data={this.props.auto.type}\n                            />\n                        </div>\n                        <div className=\"items\">\n                            <span>*</span>\n                            <DefaultSelect\n                                name='category'\n                                data={this.props.auto.category}\n                            />\n                        </div>\n                        <div className=\"items\">\n                            <span>*</span>\n                            <DefaultSelect\n                                name='traction'\n                                data={this.props.auto.traction}\n                            />\n                        </div>\n\n                        <div className=\"items\">\n                            <label className='auto__number'>\n                                <DefaultInput\n                                    type='text'\n                                    name='number'\n                                    placeholder='XX YY XXX'\n                                    onInput={(e) =>{\n                                        switch (e.target.value.length){\n                                            case 2:\n                                                e.target.value += ' '\n                                            case 6:\n                                                e.target.value += ' '\n                                        }\n                                    }}\n                                />\n                            </label>\n                        </div>\n                        <div className=\"items\">\n                            <label className='file row align-center'>\n                                <span className='file__name'>Ներբեռնել...</span>\n                                <DefaultInput\n                                    type='file'\n                                    onChange={this.GetImg.bind(this)}\n                                />\n                            </label>\n                            <div className=\"img_name\" style={this.state.img.length> 0 ?{  display:'flex' }:{display:'none'}}>\n                                {\n                                    this.state.img.map(img =>{\n                                        return (\n                                            <span>{img[0].name}</span>\n                                        )\n                                    })\n                                }\n                            </div>\n                        </div>\n                        <DefaultInput\n                            type='hidden'\n                            name='id'\n                            value={this.props.user.id}\n                        />\n\n                        <label className=\"btn\">\n                            {/*<div className=\"add_loading\"> <Loading type='spinningBubbles' color='#4fffa0' size={150}/> </div>*/}\n\n                                {\n                                    this.state.loading?<div className=\"add_loading\"> <Loading type='spinningBubbles' color='#4fffa0' size={150}/> </div>: ''\n                                }\n\n                            <div className=\"items \">\n                                <DefaultBtn\n                                    type='submit'\n                                />\n                            </div>\n                        </label>\n                    </form>\n\n                </div>\n\n        )\n    }\n}\n\nconst MapStateToProps = state => state;\nconst MainCarsForm = connect(MapStateToProps)(CarsForm)\nexport  default MainCarsForm;\n","/home/nordil/Desktop/V8/src/components/User/message/Message.jsx",["511","512","513","514","515","516","517","518","519","520"],"\nimport React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport './Message.scss';\nimport Respondent from \"./Respondent\";\nimport GetMessageClass from \"./GetMessage\";\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport { GetId, GetMessage} from \"../../../redux/message/action\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faEnvelopeSquare, faMapMarkerAlt, faRedoAlt} from \"@fortawesome/free-solid-svg-icons\";\nimport {POST} from \"../../config/Requsest\";\nimport {Url} from \"../../config/Url\";\n\n\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            link:false,\n            dialog: '',\n            redirect:false,\n            RedirectLink: '',\n            RespondentUser:true,\n            RespondentStore:true\n\n        }\n\n    }\n\n    componentDidMount() {\n\n        let data = new FormData();\n        data.append('id',window.location.pathname.split('/').pop());\n        this.props.dispatch(GetMessage(this.props.id))\n\n    }\n\n    Message = (e) => {\n        this.setState({\n            link:e.target.id,\n            redirect: true\n        })\n        setTimeout(() => {\n            this.setState({\n                redirect: false\n            })\n        },1000)\n        this.props.dispatch(GetId(e.target.dataset.id))\n\n    }\n    openRespondents = (e)=>{\n        if(e.target.dataset.user){\n            this.setState({\n                RespondentUser:!this.state.RespondentUser\n            })\n        }\n        if(e.target.dataset.store){\n            this.setState({\n                RespondentStore:!this.state.RespondentStore\n            })\n        }\n    }\n    openRespondent = ()=>{\n        let block = document.querySelector('.respondent_user')\n        let respondent = document.querySelector('.respondent')\n\n        if(block.style.display === 'none'){\n            block.style.display = 'flex'\n            respondent.style.width = \"88%\"\n        }else{\n            block.style.display = 'none'\n            respondent.style.width = \"0%\"\n        }\n    }\n    Clear = (e)=>{\n        let data = new FormData();\n        data.append('send_id',this.props.user.id);\n        data.append('get_id',e.target.dataset.id);\n        POST(Url.deliteMessage,data).then(res => {\n            if (res.status) {\n                this.props.dispatch(GetMessage(this.props.user.id))\n            }\n        })\n\n    }\n    render() {\n        if(this.props.message.data.message.score){\n            console.log(this.props.message.data.message.score[0].delite)\n            console.log(JSON.parse(this.props.message.data.message.score[0].delite))\n        }\n\n        return(\n            <div className='message_users_component'>\n\n                <div className=\"message_users\">\n                    {\n                        this.state.redirect?<Redirect to={this.state.link?this.state.link:'/user/account/persional/'} />:''\n                    }\n                    <div className=\"respondent\">\n                        <div className='respondent__users' data-user={1} onClick={this.openRespondents}>\n                            <span data-user={1} className={this.state.RespondentUser? 'active user_span' : 'user_span'}>Օգտատեր</span>\n                            {\n                                this.state.RespondentUser  && this.props.message.data.user?this.props.message.data.user.map((data,i) => {\n\n                                    if(data && JSON.parse(this.props.message.data.message.user[i].delite)[0] !== this.props.id){\n\n                                        let active = this.props.message.data.message.user? window.location.href.split('/')[6] == this.props.message.data.message.user[i].dialog_id: ''\n\n                                            return (\n                                                <Respondent\n                                                    Clear={this.Clear}\n                                                    key={i}\n                                                    id={'/user/account/persional/'+this.props.message.data.message.user[i].dialog_id}\n                                                    active={active}\n                                                    data={data}\n                                                    onClick={this.Message}\n                                                    status={this.props.message.data.message.user[i].status}\n                                                    time={this.props.message.data.message.user[i].time}\n                                                    userId={this.props.id}\n                                                    send={this.props.message.data.message.user[i].send_id}\n                                                />\n                                            )\n\n\n                                    }\n                \n                \n                                }): ''\n                            }\n                        </div>\n                \n                        <div className='respondent__stores' data-store={1} onClick={this.openRespondents}>\n                            <span data-store={1} className={this.state.RespondentStore? 'active user_span' : 'user_span'}>Գործնկեր</span>\n                            {\n                                this.state.RespondentStore && this.props.message.data.score?this.props.message.data.score.map((data,i) => {\n\n                \n                                    if (data && JSON.parse(this.props.message.data.message.score[i].delite)[0] !== this.props.id){\n                                        let active = window.location.href.split('/')[6] == this.props.message.data.message.score[i].dialog_id\n\n                                            console.log(this.props.message.data.message.score)\n                                            return (\n                                                <Respondent\n                                                    Clear={this.Clear}\n                                                    key={i}\n                                                    id={'/user/account/persional/'+this.props.message.data.message.score[i].dialog_id}\n                                                    active={active}\n                                                    data={data}\n                                                    onClick={this.Message}\n                                                    status={this.props.message.data.message.score[i].status}\n                                                    time={this.props.message.data.message.score[i].time}\n                                                    userId={this.props.id}\n                                                    send={this.props.message.data.message.score[i].send_id}\n                                                />\n                                            )\n\n\n                                    }\n                \n                \n                                }): ''\n                            }\n                        </div>\n                \n                    </div>\n                \n                    <div className=\"message\">\n                        <div className='message_reload'>\n                            <span onClick={(e)=>{\n                                let aa = e.target\n                                e.target.classList.toggle('message_reload_button')\n                                this.props.dispatch(GetMessage(this.props.id))\n                                setTimeout(()=>{\n                                    aa.classList.toggle('message_reload_button')\n                                },1000)\n                            }}>\n                                <FontAwesomeIcon icon={faRedoAlt} />\n                            </span>\n                        </div>\n                \n                        {\n                            this.props.message.data.message.user?this.props.message.data.message.user.map((data,i) => {\n                                console.log('mess',data)\n                                if(data){\n                                    return (\n                                        data.delite[0] === this.props.id ?'':\n                                            <Switch key={i}>\n                                                <Route exact path={'/user/account/persional/'+data.dialog_id}>\n                                                    <GetMessageClass one_message={data.message} getId={data.send_id != this.props.user.id?data.send_id:data.get_id}/>\n                                                </Route>\n                                            </Switch>\n                                    )\n                                }\n\n                            }):''\n                        }\n                        {\n                            this.props.message.data.message.score?this.props.message.data.message.score.map((data,i) => {\n                                if(data){\n                                    return (\n                                        data.delite[0] === this.props.id ?'':\n                                            <Switch key={i}>\n                                                <Route exact path={'/user/account/persional/'+data.dialog_id}>\n                                                    <GetMessageClass one_message={data.message} getId={data.send_id != this.props.user.id?data.send_id:data.get_id}/>\n                                                </Route>\n                                            </Switch>\n                                    )\n                                }\n                \n                \n                            }):''\n                        }\n                \n                    </div>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nconst MapStateToProps = state => state;\nconst MainMessage = connect(MapStateToProps)(Message)\n\nexport default MainMessage;","/home/nordil/Desktop/V8/src/components/User/UserCars/UserCars.jsx",["521","522","523","524","525","526","527","528","529","530","531","532","533"],"import React, {Component} from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt} from '@fortawesome/free-solid-svg-icons'\nimport {Link, Redirect, Route} from \"react-router-dom\";\nimport CarsForm from \"./CarsForm\";\nimport './UserCars.scss'\nimport {royle} from \"../../../redux/auto/Values\";\nimport SliderAuto from \"../../SliderAuto/SliderAuto\";\nimport engine from './icon/car-engine.svg'\nimport DefaultBtn from \"../../forms/buttons/DefaultBtn\";\nimport DefaultInput from \"../../forms/inputs/DefaultInput\";\nimport {GetAuto, GetModel} from \"../../../redux/auto/action\";\nimport DefaultSelect from \"../../forms/select/DefaultSelect\";\nimport {POST, TEST_POST} from \"../../config/Requsest\";\nimport {Url} from \"../../config/Url\";\nimport {connect} from \"react-redux\";\nconst status = 0\n\n\nclass UserCars extends Component {\n    constructor(props) {\n        super(props);\n        this.state ={\n            message: '',\n            Redirect: false,\n            RedirectSell: false\n\n        }\n    }\n    closeSell = (e)=>{\n        const modal = document.querySelectorAll('.delet_car')\n        modal.forEach((el,i)=>{\n                el.style.display = 'none'\n        })\n    }\n\n    openSell = (e) => {\n\n        if(e.target.innerHTML === 'Վաճառել'){\n            e.target.innerHTML = \"Հրաժարվել վաճառքից\"\n        }else {\n            e.target.innerHTML = \"Վաճառել\"\n        }\n\n        const block = document.querySelectorAll('.' + e.target.className)\n        console.log(block[1])\n        block[1].classList.toggle('sell_user_car_open')\n\n    }\n\n    clear = (e)=>{\n        const modal = document.querySelectorAll('.delet_car')\n        modal.forEach((el,i)=>{\n            if(e.target.dataset.num == el.dataset.num){\n                el.style.display = 'flex'\n            }\n        })\n    }\n\n    SellAuto = (e) =>{\n\n        e.preventDefault();\n        let data = new FormData(e.target);\n        POST(Url.sell,data).then(res => {\n            if (res.status) {\n                this.setState({\n                    RedirectSell: true\n                })\n            }else{\n                this.setState({\n                    message: res.message\n                })\n            }\n\n        })\n    }\n    RefuseSell = (e) => {\n\n        let data = new FormData();\n        data.append('id', e.target.id)\n        POST(Url.refuse,data).then(res => {\n            if (res) {\n                this.props.dispatch(GetAuto(this.props.user.id))\n            }\n\n        })\n    }\n\n    Delite = (e) => {\n\n        let data = new FormData();\n        data.append('id', e.target.dataset.id)\n\n        POST(Url.DeleteUserAuto,data).then(res => {\n            console.log(res)\n            if (res.status){\n                const modal = document.querySelectorAll('.delet_car')\n                modal.forEach((el,i)=>{\n                    el.style.display = 'none'\n                })\n                    this.props.dispatch(GetAuto(this.props.user.id))\n\n            }\n        })\n    }\n    render() {\n        console.log(this.props.auto.auto)\n        return (\n            <div>\n                {/*{this.state.Redirect ? <Redirect to='/user/account/cars' /> : ''}*/}\n                {this.state.RedirectSell ? <Redirect to='/announcement' /> : ''}\n                <div className=\"User__cars\">\n                    {\n\n                        this.props.auto.auto.data.map(({\n                                        id,\n                                        user_id,\n                                        mark,\n                                        model,\n                                        transmission,\n                                        color,\n                                        year,\n                                        fuel,\n                                        engine,\n                                        number,\n                                        vin,\n                                        img,\n                                        power,\n                                        type,\n                                        category,\n                                        traction,\n                                        royle,\n                                        state\n\n                                    }) => (\n                            <div key={id} className='car col'>\n                                <div className='block-left'>\n                                    <div className=\"car_name\">\n                                        <span>{model}</span>\n                                        <span>\n                                            <FontAwesomeIcon data-num={id} icon={faTrashAlt} />\n                                            <span data-num={id} onClick={this.clear}></span>\n                                        </span>\n                                    </div>\n                                    <div className=\"delet_car disp block\" data-num={id}>\n                                        <div>\n                                            <div>\n                                                <h1>Հեռացնել մեքենան՞</h1>\n\n                                            </div>\n                                            <div>\n                                                <DefaultBtn\n                                                    name='Այո'\n                                                    width=\"100%\"\n                                                    type='submit'\n                                                    background='#143645'\n                                                    color='#ffffff'\n                                                    light={30}\n                                                    dataId={id}\n                                                    onClick={this.Delite}\n                                                />\n                                                <DefaultBtn\n                                                    onClick={this.closeSell}\n                                                    name='Ոչ'\n                                                    width=\"100%\"\n                                                    type='submit'\n                                                    background='#143645'\n                                                    color='#ffffff'\n                                                    light={30}\n                                                />\n                                            </div>\n                                        </div>\n\n                                    </div>\n                                    <div className=\"car_slider\">\n                                        <SliderAuto autoImage={JSON.parse(img)}/>\n                                        {/*<SliderAuto autoImage={img}/>*/}\n                                    </div>\n                                </div>\n\n                                <div className='block-right'>\n                                    <div className=\"car_info\">\n                                        <table className=\"auto_parapters\">\n                                            <tbody>\n                                            <tr>\n                                                <td>Շարժիչը</td>\n                                                <td>{engine}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Ձիաուժը</td>\n                                                <td>{power}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Տարեթիվ</td>\n                                                <td>{year}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Գույն</td>\n                                                <td>{color}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Փոխանցման տուփը</td>\n                                                <td>{transmission}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Ղեկը</td>\n                                                <td>{royle}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Քարշակը</td>\n                                                <td>{traction}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Նույնացման համար (VIN)</td>\n                                                <td>{vin}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Վառելիքը</td>\n                                                <td>{fuel}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Թափքի տեսակը</td>\n                                                <td>{type}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>ՏՄ Տեսակը</td>\n                                                <td>{category}</td>\n                                            </tr>\n                                            </tbody>\n                                        </table>\n\n                                        <div className=\"sell_cars\">\n                                            <div className=\"number_cars\">\n                                                <span>{number}</span>\n                                            </div>\n                                            {\n                                                state == 0?\n                                                <DefaultBtn\n                                                    onClick={this.openSell}\n                                                    name='Վաճառել'\n                                                    width=\"200px\"\n                                                    className={'sell_user_car' + id}\n                                                    type='submit'\n                                                    background='#143645'\n                                                    color='#ffffff'\n                                                    light={30}\n                                                />:\n                                                    <DefaultBtn\n                                                        name='Հրաժարվել Վաճառքից'\n                                                        width=\"200px\"\n                                                        type='submit'\n                                                        background='#143645'\n                                                        color='#ffffff'\n                                                        light={30}\n                                                        id={id}\n                                                        onClick={this.RefuseSell}\n                                                    />\n\n                                            }\n\n                                        </div>\n                                        <div className={'sell_user_car sell_user_car' + id + ' sell_user_car_open'}>\n                                            {/*<p style={{color: 'red'}}>{this.state.message}</p>*/}\n                                            <form id=\"sellCar\" onSubmit={this.SellAuto}>\n                                                <div className=\"left_block\">\n                                                    <div className=\"left_block_inp\">\n                                                        <div className=\"left_block_inp_measurements\">\n                                                            <DefaultInput\n                                                                width=\"55%\"\n                                                                height='50px'\n                                                                type='number'\n                                                                name='mileage'\n                                                                placeholder='Վազքը'\n                                                            />\n\n                                                            <DefaultSelect\n                                                                width=\"35%\"\n                                                                height='50px'\n                                                                name='measurements'\n                                                                data={[\n                                                                    {\n                                                                        name:'Kilometer'\n                                                                    },\n                                                                    {\n                                                                        name:'Miles'\n                                                                    }\n                                                                ]}\n                                                            />\n                                                        </div>\n\n                                                        <DefaultInput\n                                                            type='number'\n                                                            name='price'\n                                                            placeholder='Արժեքը'\n                                                            width=\"40%\"\n                                                            height='50px'\n                                                        />\n                                                    </div>\n\n\n                                                    <div className=\"left_block_check\">\n                                                        <label>\n                                                            Մակսազերծված է\n                                                            <DefaultInput\n                                                                type='checkbox'\n                                                                name='сustoms_cleared'\n                                                                value=\"1\"\n                                                            />\n                                                        </label>\n                                                        <DefaultInput\n                                                            type='hidden'\n                                                            name='phone'\n                                                            value={this.props.user.data != undefined ?this.props.user.data.phone: ''}\n                                                        />\n                                                        <DefaultInput\n                                                            type='hidden'\n                                                            name='sircle'\n                                                            value={this.props.user.data != undefined ?this.props.user.data.sircle: ''}\n                                                        />\n                                                        <DefaultInput\n                                                            type='hidden'\n                                                            name='city'\n                                                            value={this.props.user.data != undefined ?this.props.user.data.city: ''}\n                                                        />\n                                                        <label>\n                                                            Մաս մաս վճարում\n                                                            <DefaultInput\n                                                                type='checkbox'\n                                                                name='later'\n                                                                value=\"1\"\n                                                            />\n                                                        </label>\n                                                        <label>\n                                                            Դիլեր\n                                                            <DefaultInput\n                                                                type='checkbox'\n                                                                name='dealer'\n                                                                value=\"1\"\n                                                            />\n                                                        </label>\n                                                    </div>\n                                                </div>\n\n                                                <div className=\"right_block\">\n                                                           <textarea className=\"description_text\"\n                                                                     rows=\"4\"\n                                                                     cols=\"50\"\n                                                                     name=\"desc\"\n                                                                     placeholder=\"Նկարագրություն...\"\n                                                           />\n                                                </div>\n                                                <DefaultInput\n                                                    type='hidden'\n                                                    name='id'\n                                                    value={id}\n                                                />\n                                                <DefaultBtn\n                                                    width=\"100%\"\n                                                    name='Առաջ'\n                                                    type='submit'\n                                                    background='#143645'\n                                                    color='#ffffff'\n                                                    light={30}\n                                                />\n                                            </form>\n                                        </div>\n                                    </div>\n                                </div>\n\n                            </div>\n                        ))\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\n\n\nconst MapStateToProps = state => state;\nconst MainUserCars = connect(MapStateToProps)(UserCars)\nexport  default MainUserCars;\n\n","/home/nordil/Desktop/V8/src/components/AutoParts/AutoParts.jsx",["534","535","536","537"],"import React, {Component} from \"react\";\nimport DefaultSelect from \"../forms/select/DefaultSelect\";\nimport {maser} from \"../Menu/autoObj\";\nimport FormAutoParts from \"./FormAutoParts/FormAutoParts\";\nimport './AutoParts.scss'\nimport {Redirect, Route} from \"react-router\";\nimport MainFormGlobalAutoParts from \"./FormAutoParts/FormGlobalAutoParts\";\nimport FormGlobalAutoParts from \"./FormAutoParts/FormGlobalAutoParts\";\nimport Soon from \"../Soon/Soon\";\n\n\n\nclass AutoParts extends Component{\n    constructor(props) {\n        super(props);\n        this.refSelect = React.createRef()\n        this.state = {\n                category:'0'\n        }\n    }\n\n    componentDidMount() {\n        switch(window.location.pathname){\n            case '/score/account/cars/spare_parts/with_mark':this.select['0'].selected = true;this.setState({category:'0'})\n                break\n            case '/score/account/cars/soon':this.select['1'].selected = true;this.setState({category:'1'})\n                break\n\n        }\n\n\n\n    }\n\n    getCategory = (e) =>{\n        this.setState({\n            category:e.target.selectedOptions[0].dataset.count\n        })\n        console.log(this.state)\n    }\n    render() {\n        return (\n            <div className='Auto_parts'>\n                <div className=\"parts_form\">\n                    <div className=\"parts_category\">\n                        <select\n                            ref = {el => this.select = el}\n                            onChange={this.getCategory}\n\n                        >\n                            {\n                                maser.map((el,i)=>{\n                                    return (\n                                        <option\n                                            value={el.name}\n                                            key={i}\n                                            data-count={i}\n                                        >\n                                            {el.name}\n                                        </option>\n                                    )\n                                })\n                            }\n                        </select>\n                        {/*<h1 ref = {el => this.select = el} ></h1>*/}\n                    </div>\n                    <div className=\"get_parts_category\">\n                        {\n                            this.state.category === '0' ?<Redirect to='/score/account/cars/spare_parts'/>:''\n                        }\n\n                        {\n                            this.state.category === '1' ?<Redirect to='/score/account/cars/soon'/>:''\n                        }\n\n                        {\n                            +this.state.category >= 2 ?<Redirect to='/score/account/cars/soon'/>:''\n                        }\n                        <Route path='/score/account/cars/spare_parts'>\n                            <FormAutoParts />\n                        </Route>\n                        <Route path='/score/account/cars/soon'>\n                            <Soon />\n                        </Route>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AutoParts;","/home/nordil/Desktop/V8/src/components/Score/message/Message.jsx",["538","539","540","541","542","543","544"],"import React, {Component, Fragment} from 'react';\nimport {connect} from \"react-redux\";\nimport './Message.scss';\nimport Respondent from \"./Respondent\";\nimport GetMessageClass from \"./GetMessage\";\nimport {NavLink, Redirect, Route, Switch} from \"react-router-dom\";\nimport {\n    GetDialogId,\n    GetId,\n    GetMessage,\n    GetMessageDialogId,\n    GetMessageId,\n    GetStatus\n} from \"../../../redux/message/action\";\nimport {POST} from \"../../config/Requsest\";\nimport {Url} from \"../../config/Url\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faRedoAlt} from \"@fortawesome/free-solid-svg-icons\";\n\n\n\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            link:false,\n            dialog: '',\n            redirect:false,\n            RedirectLink: ''\n        }\n\n    }\n\n    componentDidMount() {\n        // this.props.dispatch(GetMessage(this.props.message.id || this.props.message.messageId || window.location.pathname.split('/').pop()))\n        // this.props.dispatch(GetDialogId(this.props.message.id || this.props.message.messageId || window.location.pathname.split('/').pop()))\n        this.setState({\n            changeMessage: true\n        })\n        setTimeout(() => {\n            this.setState({\n                changeMessage: false\n            })\n        },0)\n        // let data = new FormData();\n        // let dialog_id = window.location.pathname.match(/V8.+/g);\n        // if (dialog_id){\n        //     dialog_id = dialog_id.join()\n        // }\n        // let id  = window.location.pathname.match(/\\/\\d{2}\\//g);\n        // if (id){\n        //     id = id.join('').replace(/\\//g,'')\n        // }\n        // data.append('id', dialog_id);\n        // data.append('dialog_id', dialog_id);\n        // this.props.dispatch(GetMessageDialogId(id,dialog_id))\n\n    }\n\n    Message = (e) => {\n        this.setState({\n            link:e.target.dataset.id,\n            redirect: true\n        })\n        setTimeout(() => {\n            this.setState({\n                redirect: false,\n                changeMessage: false,\n                link: ''\n            })\n        },1000)\n        this.props.dispatch(GetStatus(this.props.message.dialog))\n        this.props.dispatch(GetDialogId(e.target.dataset.dialogId))\n    }\n\n    openRespondent = ()=>{\n        let block = document.querySelector('.respondent_user')\n        let respondent = document.querySelector('.respondent')\n\n        if(block.style.display === 'none'){\n            block.style.display = 'flex'\n            respondent.style.width = \"88%\"\n        }else{\n            block.style.display = 'none'\n            respondent.style.width = \"0%\"\n        }\n\n    }\n\n    GetIdScoreList = (e) => {\n        this.props.dispatch(GetMessageId(e.target.id))\n        this.props.dispatch(GetMessage(e.target.id))\n        let li = document.querySelectorAll(\".dialog_list > li\");\n\n        li.forEach(l => {\n            l.classList.remove(\"active\")\n        })\n        e.target.classList.add('active')\n        this.setState({\n            changeMessage: true,\n            link:'/score/account/message/' + e.target.id\n        })\n        setTimeout(() => {\n            this.setState({\n                changeMessage: false,\n                link: ''\n            })\n        },0)\n    }\n\n    render() {\n        let myId =  this.props.message.messageId;\n        console.log(this.props)\n        return(\n            <Fragment>\n                {\n                    this.state.changeMessage && this.state.link? <Redirect to={this.state.link} />: ''\n                }\n                <ul className='dialog_list'>\n                    {\n                        this.props.score.score.id?\n                            <li id={this.props.score.score.id} onClick={this.GetIdScoreList}>{this.props.score.score.data.name}</li>:''\n                    }\n                    {\n                        this.props.score.scoreList.map((res,i) => {\n                            return (\n                                <li key={res.id} id={res.id} onClick={this.GetIdScoreList}>\n                                    {res.name}\n                                </li>\n                            )\n                        })\n                    }\n                </ul>\n\n                <div className='message_users_component'>\n\n                    <div className=\"message_users\">\n                        {\n                            this.state.redirect?<Redirect to={this.state.link?this.state.link:''} />:''\n                        }\n                        <div className=\"respondent\">\n                            {\n                                this.props.message.data.score?\n                                    this.props.message.data.score.map((res,i) => {\n                                        let active = this.props.message.data.message.score? window.location.href.split('/')[7] == this.props.message.data.message.score[i].dialog_id: ''\n                                        return(\n                                            <Respondent\n                                                Clear={this.Clear}\n                                                key={i}\n                                                id={'/score/account/message/' + this.props.message.messageId + '/' + this.props.message.data.message.score[i].dialog_id}\n                                                data={res}\n                                                active={active}\n                                                dialogId={this.props.message.data.message.score[i].dialog_id}\n                                                onClick={this.Message}\n                                                status={this.props.message.data.message.score[0].status}\n                                                time={this.props.message.data.message.score[0].time}\n                                                userId={this.props.message.id}\n                                                send={this.props.message.data.score[i].id}\n                                            />\n                                        )\n\n                                    })\n                                    :''\n                            }\n\n                        </div>\n\n                        <div className=\"message\">\n                            <div className='message_reload'>\n                                <span onClick={(e)=>{\n                                    let aa = e.target\n                                    e.target.classList.toggle('message_reload_button')\n                                    this.props.dispatch(GetStatus(this.props.message.dialog))\n                                    this.props.dispatch(GetMessage(this.props.message.messageId))\n                                    setTimeout(()=>{\n                                        aa.classList.toggle('message_reload_button')\n                                    },1000)\n                                }}>\n                                    <FontAwesomeIcon icon={faRedoAlt} />\n                                </span>\n                            </div>\n                            {\n                                this.props.message.data.message.score?this.props.message.data.message.score.map((data,i) => {\n                                    return (\n                                        <Switch key={i}>\n                                            <Route path={'/score/account/message/' + this.props.message.messageId + '/' + data['dialog_id']}>\n                                                <GetMessageClass one_message={data.message} id={myId} id1={myId == data['send_id']?data['get_id']:data['send_id']} i/>\n                                            </Route>\n                                        </Switch>\n                                    )\n                                }):''\n                            }\n\n                        </div>\n                    </div>\n                </div>\n\n            </Fragment>\n        )\n    }\n}\n\nconst MapStateToProps = state => state;\nconst MainMessage = connect(MapStateToProps)(Message)\n\nexport default MainMessage;","/home/nordil/Desktop/V8/src/components/Score/ScoreList/ScoreList.jsx",["545","546","547","548","549","550"],"import React from 'react';\nimport {connect} from 'react-redux';\nimport  './ScoreList.scss'\nimport DefaultInput from \"../../forms/inputs/DefaultInput\";\nimport DefaultBtn from \"../../forms/buttons/DefaultBtn\";\nimport DefaultSelect from \"../../forms/select/DefaultSelect\";\nimport {GetCity} from \"../../../redux/location/action\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus,faMinus } from '@fortawesome/free-solid-svg-icons'\nimport {POST, TEST_POST} from \"../../config/Requsest\";\nimport {Url} from \"../../config/Url\";\nimport {TmpImg,ClearImg} from \"../../../redux/tmp/action\";\nimport Loading from \"../../Loading\";\nimport ScorePage from \"../ScorePage/ScorePage\";\nimport {Route, NavLink, Redirect} from \"react-router-dom\";\nimport {GetScoreList, GetScoreListId} from \"../../../redux/score/action\";\nimport {GetMessageId} from \"../../../redux/message/action\";\n\n\n\nclass ScoreList extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            showForm:false,\n            phone2: false,\n            phone3: false,\n            img: [],\n            showTmpImg: false,\n            loading: false\n\n        }\n    }\n    componentDidMount() {\n        this.props.dispatch(GetCity(1))\n\n\n    }\n\n\n    ShowAddScoreForm = (e) => {\n        if (this.state.showForm){\n            this.setState({\n                showForm:false\n            })\n        }else{\n            this.setState({\n                showForm:true\n            })\n        }\n    }\n    GetCity = (e) => {\n        this.props.dispatch(GetCity(e.target.selectedIndex + 1))\n    }\n    ShowPhone = (e) => {\n        if (this.state.phone2 === false){\n            this.setState({\n                phone2: true\n            })\n        }\n        if (this.state.phone2 === true && this.state.phone3 === false){\n            this.setState({\n                phone3: true\n            })\n        }\n    }\n    GetImg = (e) => {\n        let data = new FormData()\n        let tmpImg = this.state.img;\n        Object.values(e.target.files).map(img => {\n            data.append('img[]',img)\n            tmpImg.push(img)\n        })\n        this.setState({\n            img: tmpImg,\n            showTmpImg: true\n        })\n        this.props.dispatch(TmpImg(data))\n    }\n    AddScoreList = (e) => {\n        e.preventDefault();\n        let data = new FormData(e.target)\n\n        this.state.img.map(img => {\n            data.append('img[]',img)\n        })\n        this.setState({\n            loading:undefined\n        })\n\n        POST(Url.addscorelist,data).then(res => {\n            console.log(res)\n           if (res.status) {\n               this.props.dispatch(GetScoreList())\n               this.setState({\n                   showForm:false,\n                   showTmpImg: false,\n                   // loading:res.status\n               })\n               this.props.dispatch(ClearImg())\n           }else {\n               // this.setState({\n               //     loading:res.status\n               // })\n           }\n        })\n\n    }\n    render() {\n        // console.log(this.props.score.scoreList[0])\n        return (\n            <div className=\"ScoreList\">\n                <div className=\"score__list-links\">\n                   <ul>\n                       <li onClick={this.ShowAddScoreForm}><div className='show__form'>+</div></li>\n                       {\n                           this.props.score.scoreList.map((list,i) =>{\n\n                               return <li key={list.id}>\n                                   <div onClick={(e) => {\n                                       this.props.dispatch(GetScoreListId(list.id))\n                                   }}>\n                                       <NavLink\n                                       to={'/score/account/list/'+list.id}\n                                       activeClassName=\"selected\"\n\n                                       >\n                                       {list.name}\n                                       </NavLink>\n                                   </div>\n                               </li>\n                           })\n                       }\n\n                   </ul>\n               </div>\n                <div className='add_score_list'>\n                    <form onSubmit={this.AddScoreList} style={this.state.showForm?{transform:'scaleY(1)'}:{transform:'scaleY(0)'}} encType='multipart/form-data'>\n                        <div>\n                            <DefaultInput\n                                type='text'\n                                name='score_name'\n                                placeholder='Խանութի անունը․․․'\n                                required\n                            />\n\n                            <DefaultInput\n                                type='email'\n                                name='email'\n                                placeholder='E-mail․․․'\n                                required\n                            />\n                            <DefaultSelect required name='sircle' data={this.props.location.sircle} onChange={this.GetCity}/>\n                            <DefaultSelect required name='city' data={this.props.location.city}/>\n                            <DefaultInput\n                                type='text'\n                                name='addres'\n                                placeholder='Խանութի Հասցեն․․․'\n                                required\n                            />\n                            <label className='working_interval'>\n                                <DefaultInput\n                                    type='time'\n                                    name='work_to'\n                                    // placeholder='09'\n                                />\n                                <DefaultInput\n                                    type='time'\n                                    name='work_from'\n                                />\n                            </label>\n                            <label className='credit-style'>\n                                <DefaultInput\n                                    type='checkbox'\n                                    name='credit'\n                                    value={1}\n                                />\n                            </label>\n                            <div className=\"phone phone1\">\n                                <span className='plus__phone'\n                                      onClick={this.ShowPhone}\n                                      style={this.state.phone2 && this.state.phone3? {display: 'none'}: {display: 'block'}}\n                                ><FontAwesomeIcon icon={faPlus} /></span>\n                                <label className='phone_style'>\n                                    <DefaultInput\n                                        type='number'\n                                        placeholder=\"Հեռախոսահամար\"\n                                        name='phone[]'\n                                        requred\n                                        onChange={\n                                            (e)=>{\n                                                let str = e.target.value.match(/(^\\+374\\d{8})|(^374)\\d{8}|(^0\\d{8})/y);\n                                                if (str){\n                                                    let num = str[0].match(/\\d{8}$/)[0];\n                                                    e.target.value = num\n                                                }\n                                            }\n                                        }\n                                    />\n                                </label>\n                            </div>\n                            <div className=\"phone phone2\" style={this.state.phone2?{display: 'flex'}: {display:'none'}}>\n                                <span className='minus__phone' onClick={() => this.setState({phone2:false})}><FontAwesomeIcon icon={faMinus} /></span>\n                                <label className='phone_style'>\n                                    <DefaultInput\n                                        type='number'\n                                        placeholder=\"Հեռախոսահամար\"\n                                        name='phone[]'\n                                        requred\n                                        onChange={\n                                            (e)=>{\n                                                let str = e.target.value.match(/(^\\+374\\d{8})|(^374)\\d{8}|(^0\\d{8})/y);\n                                                if (str){\n                                                    let num = str[0].match(/\\d{8}$/)[0];\n                                                    e.target.value = num\n                                                }\n                                            }\n                                        }\n                                    />\n                                </label>\n                            </div>\n                            <div className=\"phone phone3\" style={this.state.phone3?{display: 'flex'}: {display:'none'}}>\n                                <span className='minus__phone' onClick={() => this.setState({phone3:false})}><FontAwesomeIcon icon={faMinus} /></span>\n                                <label className='phone_style'>\n                                    <DefaultInput\n                                        type='number'\n                                        placeholder=\"Հեռախոսահամար\"\n                                        name='phone[]'\n                                        requred\n                                        onChange={\n                                            (e)=>{\n                                                let str = e.target.value.match(/(^\\+374\\d{8})|(^374)\\d{8}|(^0\\d{8})/y);\n                                                if (str){\n                                                    let num = str[0].match(/\\d{8}$/)[0];\n                                                    e.target.value = num\n                                                }\n                                            }\n                                        }\n                                    />\n                                </label>\n                            </div>\n                            <DefaultInput\n                                type='url'\n                                name='url'\n                                placeholder='https:/v8.am'\n                            />\n                            <DefaultInput\n                                type='url'\n                                name='f_url'\n                                placeholder='https://facebook.com'\n                            />\n                            <DefaultInput\n                                type='url'\n                                name='i_url'\n                                placeholder='https://instagrem.com'\n                            />\n                            <DefaultInput\n                                type='url'\n                                name='y_url'\n                                placeholder='https://youtube.com'\n                            />\n                            <label className='file'>\n                                <span>Ներբեռնել․․․</span>`\n                                <input\n                                    type='file'\n                                    multiple\n                                    onChange={this.GetImg}\n                                />\n                            </label>\n                            {\n                                this.state.showTmpImg?\n                                    <div className='tmp__img' >\n                                        {\n                                            !this.props.tmp.tmpImg.status?<div className=\"add_loading\"> <Loading type='bars' color='#143645' size={50}/> </div>:\n                                                this.props.tmp.tmpImg.data.map(img => {\n                                                    return <img key={img.url} src={img.url}/>\n                                                })\n                                        }\n                                    </div>\n                                :''\n                            }\n                        </div>\n\n                            <div className=\"btn\">\n                                {\n                                    // this.state.loading != undefined? '': <div className=\"loading_btn\"> <Loading type='spin' color='#1c8080' size={40}/> </div>\n                                }\n                                <DefaultBtn\n                                    type='submit'\n                                    name='add'\n                                    background='#101423'\n                                    color='#ffffff'\n                                    width='50%'\n                                    light={30}\n                                />\n                            </div>\n                    </form>\n                </div>\n                {\n                    this.props.score.scoreList.map(list =>{\n                        return (<Route  key={list.id} exact path={'/score/account/list/' + list.id}><ScorePage data={list}/></Route>)\n                    })\n                }\n\n            </div>\n\n        );\n    }\n}\n\nconst MapStateToProps = state => state;\nconst MainScoreList = connect(MapStateToProps)(ScoreList);\nexport default MainScoreList;\n","/home/nordil/Desktop/V8/src/components/favorite/Favorite.jsx",["551"],"/home/nordil/Desktop/V8/src/components/User/message/Respondent.jsx",[],"/home/nordil/Desktop/V8/src/components/User/message/GetMessage.jsx",["552","553","554","555","556","557","558","559","560","561"],"import React, {Component} from \"react\";\nimport DefaultBtn from \"../../forms/buttons/DefaultBtn\";\nimport {connect} from \"react-redux\";\nimport {SendMessage, GetMessage, GetId, GetStatus} from \"../../../redux/message/action\";\nimport {POST} from \"../../config/Requsest\";\nimport {Url} from \"../../config/Url\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faSync} from \"@fortawesome/free-solid-svg-icons\";\n\nclass GetMessageClass extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            ticking:false,\n            position:0,\n            count:this.props.one_message.length - 1\n        }\n    }\n    componentDidMount() {\n        let data = new FormData();\n        data.append('id',window.location.pathname.split('/').pop());\n        // this.props.dispatch(GetMessage(32))\n        this.setState({\n            count:this.props.one_message.length - 1\n        })\n        POST(Url.messageId,data).then(res => {\n            this.props.dispatch(GetStatus(res))\n            if (res.id != res.send_id){\n                this.props.dispatch(GetId(res.send_id))\n            }\n            if (res.id != res.get_id){\n                this.props.dispatch(GetId(res.get_id))\n            }\n        })\n        this.scrollRef.scrollTop = this.scrollRef.scrollHeight;\n        setTimeout(()=>{\n            console.log('score',this.props.score.scoreList)\n        },1000)\n\n\n\n        this.scrollRef.scrollTop = this.scrollRef.scrollHeight;\n        // document.addEventListener('scroll', (e) => {\n        //    let reload = document.querySelector(\".reload\");\n        //    let top = 100;\n        //    if(window.pageYOffset > 50){\n        //        reload.style.top =  0;\n        //    }else{\n        //        reload.style.top =  '110px';\n        //    }\n        // })\n    }\n\n    Message = (e) => {\n        e.preventDefault();\n        this.props.dispatch(GetStatus(this.props.message.dialog))\n        let data = new FormData(e.target);\n        console.log(Array.from(data))\n        if (this.textareaRef.value.trim().length > 0){\n\n            this.props.dispatch(SendMessage(data))\n        }\n        this.textareaRef.value = '';\n\n        this.scroll()\n\n\n    }\n    onEnterPress = (e) => {\n        this.props.dispatch(GetStatus(this.props.message.dialog))\n        if(e.keyCode == 13 && e.shiftKey == false) {\n            e.preventDefault();\n            let data = new FormData(this.formRef);\n            if (this.textareaRef.value.trim().length > 0){\n                this.props.dispatch(SendMessage(data))\n            }\n\n            this.textareaRef.value = ''\n            this.scroll()\n        }\n    }\n\n    scroll = (e)=>{\n        let scrol = setInterval(()=>{\n            if(this.props.one_message.length != this.state.count){\n                this.scrollRef.scrollTop = this.scrollRef.scrollHeight;\n                this.setState({\n                    count:this.props.one_message.length\n                })\n            }else{\n                clearInterval(scrol)\n            }\n        },400)\n    }\n\n    render() {\n\n        let meso = document.querySelectorAll('.meso')\n        meso.forEach(elem => {\n            elem.innerHTML = elem.innerText\n        })\n        return (\n            <div className=\"getMessage__user\">\n                <div className=\"getMessage_users\" ref={el => this.scrollRef = el} >\n                    {\n                        this.props.one_message.map((elem,i)=>{\n\n                            return(\n                                <div key={i} className={elem[0].id == this.props.user.id?'block_message block_message_user2':'block_message block_message_user1'} >\n                                    {\n                                        elem[0].message == \"\"? '':\n                                            <div>\n                                                <span>{elem[0].time}</span>\n                                                <span className='meso'>{elem[0].message}</span>\n                                            </div>\n                                    }\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n                <div className=\"smaylik\">\n\n                </div>\n                <div className=\"send_message\">\n                    <form onSubmit={this.Message} ref={el => this.formRef = el}>\n                        <textarea className=\"message_text\" onKeyDown={this.onEnterPress} name=\"message\" ref={el => this.textareaRef = el}></textarea>\n                        <input type=\"hidden\" name='send_id' value={this.props.user.id }/>\n                        <input type=\"hidden\" name='get_id' value={this.props.getId}/>\n                        <div className=\"message_send_button\">\n                            <DefaultBtn\n                                type='submit'\n                                name='Ուղարկել'\n                                background='#143645'\n                                color='#ffffff'\n                                light={30}\n                            />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst MapStateToProps = state => state;\nconst MainGetMessage = connect(MapStateToProps)(GetMessageClass)\n\nexport default MainGetMessage;","/home/nordil/Desktop/V8/src/components/Score/message/Respondent.jsx",["562","563","564"],"import React, {Component} from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faTrashAlt} from \"@fortawesome/free-solid-svg-icons/faTrashAlt\";\nimport {POST, TEST_POST} from \"../../config/Requsest\";\nimport {Url} from \"../../config/Url\";\n\n\n\nclass Respondent extends Component {\n    render() {\n        return (\n\n            <div className={this.props.active?\"respondent_user respondent_user_active\":\"respondent_user\"}>\n                <div className=\"click\" onClick={this.props.onClick} id={this.props.id} data-id={this.props.data?this.props.id:''} data-dialog-id={this.props.dialogId}></div>\n\n                <div className=\"respondent_user_image\" style={{backgroundImage:`url(${this.props.data?this.props.data.img:''})`}}>\n\n                </div>\n                <div className=\"respondent_user_name\">\n                    <div>\n                        <span>{this.props.data? this.props.data.name: ''}</span>\n                        <span>{this.props.data?this.props.data.surname: ''}</span>\n                    </div>\n                    <div>\n                        <span >{this.props.time.split(' ')[1].slice(0,5)}</span>\n                        {\n                            +this.props.status > 0?\n                                <span className='status'></span>:''\n                        }\n\n                    </div>\n                </div>\n                <div className=\"respondent_user_clear\" onClick={this.clear} data-id={this.props.data?this.props.data.id: ''}>\n                    <div className=\"click\"></div>\n                    <span ><FontAwesomeIcon icon={faTrashAlt} /></span>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Respondent","/home/nordil/Desktop/V8/src/components/Score/message/GetMessage.jsx",["565","566","567","568","569","570","571","572","573","574","575","576"],"import React, {Component} from \"react\";\nimport DefaultBtn from \"../../forms/buttons/DefaultBtn\";\nimport {connect} from \"react-redux\";\nimport {SendMessage, GetMessage, GetId, GetStatus} from \"../../../redux/message/action\";\nimport {POST} from \"../../config/Requsest\";\nimport {Url} from \"../../config/Url\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faRedoAlt, faSync} from \"@fortawesome/free-solid-svg-icons\";\n\nclass GetMessageClass extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            ticking:false,\n            position:0,\n            scroll: true,\n            cou:0\n        }\n        this.scrollRef = React.createRef();\n    }\n    componentDidMount() {\n        let data = new FormData();\n        data.append('id',window.location.pathname.split('/').pop());\n        this.setState({\n            count:this.props.one_message.length - 1\n        })\n        POST(Url.messageId,data).then(res => {\n            this.props.dispatch(GetStatus(res))\n            if (res.id != res.send_id){\n                this.props.dispatch(GetId(res.send_id))\n            }\n            if (res.id != res.get_id){\n                this.props.dispatch(GetId(res.get_id))\n            }\n        })\n        setTimeout(()=>{\n            console.log('score',this.props.score.scoreList)\n        },1000)\n        this.scroll()\n\n    }\n\n    scroll = () => {\n        this.scrollRef.current.scrollTop = this.scrollRef.current.scrollHeight;\n        if(this.state.cou != 2){\n            console.log(this.state.cou)\n            setTimeout(()=>{\n\n                this.setState({\n                    cou:++this.state.cou\n                })\n                this.scroll()\n            },40)\n        }else{\n            this.setState({\n                cou:0\n            })\n        }\n\n\n    }\n\n    Message = (e) => {\n        e.preventDefault();\n        this.props.dispatch(GetStatus(this.props.message.dialog))\n        let data = new FormData(e.target);\n        console.log(Array.from(data))\n        if (this.textareaRef.value.trim().length > 0){\n\n            this.props.dispatch(SendMessage(data))\n\n        }\n        this.textareaRef.value = '';\n        this.scroll()\n    }\n    onEnterPress = (e) => {\n        this.props.dispatch(GetStatus(this.props.message.dialog))\n        if(e.keyCode == 13 && e.shiftKey == false) {\n            e.preventDefault();\n            let data = new FormData(this.formRef);\n            if (this.textareaRef.value.trim().length > 0){\n                this.props.dispatch(SendMessage(data))\n            }\n\n            this.textareaRef.value = ''\n            this.scroll()\n        }\n\n    }\n\n\n    render() {\n        console.log(this.props)\n        let meso = document.querySelectorAll('.meso')\n        meso.forEach(elem => {\n            elem.innerHTML = elem.innerText\n        })\n        return (\n            <div className=\"getMessage\">\n                {/*<div className=\"reload\">*/}\n                {/*        <span style={this.state.styleRotate?{transform:\"rotate(360deg)\"}:{transform:\"rotate(0deg)\",transition: '0s'}}*/}\n                {/*            onClick={(e) => {*/}\n                {/*                this.props.dispatch(GetStatus(this.props.message.dialog))*/}\n                {/*            this.props.dispatch(GetMessage(this.props.message.messageId))*/}\n\n                {/*            this.setState({*/}\n                {/*                styleRotate: true*/}\n                {/*            })*/}\n                {/*            setTimeout(() => {*/}\n                {/*                this.setState({*/}\n                {/*                    styleRotate: false*/}\n                {/*                })*/}\n                {/*            },1500)*/}\n                {/*            this.scroll()*/}\n                {/*        }}>*/}\n                {/*            <FontAwesomeIcon icon={faSync} />*/}\n                {/*        </span>*/}\n                {/*</div>*/}\n\n                <div className=\"getMessage_users\" ref={this.scrollRef} >\n                    {\n                        this.props.one_message.map((elem,i)=>{\n\n                            return(\n                                <div key={i} className={elem[0].id != this.props.id?'block_message block_message_user2':'block_message block_message_user1'} >\n                                    {\n                                        elem[0].message == \"\"? '':\n                                            <div>\n                                                <span>{elem[0].time}</span>\n                                                <span className='meso'>{elem[0].message}</span>\n                                            </div>\n                                    }\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n\n                <div className=\"send_message\">\n                    <form onSubmit={this.Message} ref={el => this.formRef = el}>\n                        <textarea className=\"message_text\" onKeyDown={this.onEnterPress} name=\"message\" ref={el => this.textareaRef = el}></textarea>\n                        <input type=\"hidden\" name='send_id' value={this.props.id}/>\n                        <input type=\"hidden\" name='get_id' value={this.props.id1}/>\n\n                        <div className=\"message_send_button\">\n                            <DefaultBtn\n                                type='submit'\n                                name='Ուղարկել'\n                                background='#143645'\n                                color='#ffffff'\n                                light={30}\n                            />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst MapStateToProps = state => state;\nconst MainGetMessage = connect(MapStateToProps)(GetMessageClass)\n\nexport default MainGetMessage;","/home/nordil/Desktop/V8/src/components/AutoParts/FormAutoParts/FormAutoParts.jsx",["577","578","579","580","581","582","583","584","585","586"],"import React, {Component, Fragment} from \"react\";\nimport DefaultInput from \"../../forms/inputs/DefaultInput\";\nimport DefaultBtn from \"../../forms/buttons/DefaultBtn\";\nimport {connect} from \"react-redux\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faMapMarkerAlt, faPen} from \"@fortawesome/free-solid-svg-icons\";\nimport {faTimesCircle, faTrashAlt} from \"@fortawesome/free-regular-svg-icons\";\nimport {POST, TEST_POST} from \"../../config/Requsest\";\nimport {Url} from \"../../config/Url\";\nimport Api from \"../../config/Api\";\nimport {GetProduct} from \"../../../redux/score/action\";\nimport Loading from \"../../Loading\";\nimport DefaultSelect from \"../../forms/select/DefaultSelect\";\nimport {maser} from \"../../Menu/autoObj\";\nimport FormGlobalAutoParts from \"./FormGlobalAutoParts\";\nimport TypeCars from \"../TypeCars\";\nimport {Redirect, Route} from \"react-router\";\n\n\nclass FormAutoParts extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            scoreId: 0,\n            search: '',\n            loading: false,\n            message: \"\",\n            edit: false,\n            id: '',\n            price: '',\n            count: '',\n            top: 0,\n            zoomImg: '',\n            SelectStore: '',\n            allParts: true,\n            redirect:true\n        }\n    }\n\n    componentDidMount() {\n        this.props.dispatch(GetProduct())\n        setTimeout(() => {\n            this.props.score.scoreList.map((el, i) => {\n                if (i === 0) {\n                    this.setState({\n                        SelectStore: el.name\n                    })\n                }\n            })\n        }, 500)\n        if(window.location.pathname == '/score/account/cars/spare_parts/with_code'){\n            this.setState({\n                allParts:true,\n                redirect:false\n            })\n            this.checked.checked = true\n            this.categoryParts.innerText = 'Ըստ դետալի կոդի'\n\n        }else{\n            this.setState({\n                allParts:false,\n                redirect:false\n            })\n            this.checked.checked = false\n            this.categoryParts.innerText = 'Ըստ մեքենայի ապրանքանիշի'\n        }\n\n    }\n\n    closeImage = e => {\n        let img = document.querySelector('.pars_image_open')\n        img.style.display = 'none'\n    }\n\n    openImage = e => {\n        if (e.target.dataset.img) {\n            this.setState({\n                zoomImg: e.target.dataset.img\n            })\n            let img = document.querySelector('.pars_image_open')\n            img.style.display = 'block'\n        }\n    }\n\n    search = e => {\n        let el = document.getElementById(e.target.value);\n        if (el) {\n            el.scrollIntoView();\n        }\n\n        this.setState({\n            search: e.target.value\n        })\n    }\n\n    AddProduct = (e) => {\n        e.preventDefault();\n        let data = new FormData(e.target);\n        let code = '';\n\n        Array.from(data).forEach(res => {\n            if (res[0] === 'code') {\n                code = res[1]\n            }\n        })\n        Api.get(\"num\", {searchNumber: code}).then(res => {\n            this.setState({\n                loading: true\n            })\n            let name = '';\n\n            if (res.data) {\n                res.data.forEach(res => {\n                    name = res.ProductDescription;\n                })\n            }\n            if (res.result) {\n                data.append('name', name)\n                POST(Url.addproduct, data).then(res => {\n                    console.log(res)\n                    if (res) {\n                        this.setState({\n                            loading: false\n                        })\n                        if (res.status) {\n                            this.setState({\n                                message: \"\"\n                            })\n                            this.props.dispatch(GetProduct())\n                        } else {\n                            this.setState({\n                                message: res.message\n                            })\n                        }\n                    }\n                })\n            }\n        })\n\n    }\n    UpdateProductData = (e) => {\n        e.preventDefault();\n        let data = new FormData(e.target)\n        POST(Url.setingsproduct, data).then(res => {\n            if (res.status) {\n                this.setState({\n                    edit: false,\n                })\n                this.props.dispatch(GetProduct())\n            }\n        })\n    }\n    DeliteProduct = (e) => {\n        e.preventDefault();\n        let data = new FormData()\n        data.append('id', e.target.dataset.id);\n        data.append('delite', true);\n        POST(Url.setingsproduct, data).then(res => {\n            if (res.status) {\n                this.props.dispatch(GetProduct())\n            }\n        })\n    }\n    getSelectStore = (e) => {\n        e.target.selected = true\n        this.setState({\n            SelectStore: e.target.value\n        })\n    }\n\n    checkParts = (e) => {\n        this.setState({\n            allParts: e.target.checked\n        })\n        if (this.state.allParts) {\n            this.categoryParts.innerText = 'Ըստ մեքենայի ապրանքանիշի'\n        } else {\n            this.categoryParts.innerText = 'Ըստ դետալի կոդի'\n        }\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <div className='category-parts'>\n                    <label className=\"switch\">\n                        <input ref={el => this.checked = el} defaultChecked type=\"checkbox\" onChange={this.checkParts}/>\n                        <span className=\"slider round\"></span>\n                    </label>\n                    <span ref={el => this.categoryParts = el}>Ըստ դետալի համարի</span>\n                </div>\n                {\n                    this.state.redirect?<Redirect to={window.location.pathname}/>:''\n                }\n                {\n                    !this.state.redirect?\n                    this.state.allParts ? <Redirect to='/score/account/cars/spare_parts/with_code'/>\n                                            :\n                                            <Redirect to='/score/account/cars/spare_parts/with_mark'/>:''\n                }\n\n\n                        <Route path='/score/account/cars/spare_parts/with_code'>\n                            <div className=\"---\">\n                                <div className=\"add_auto_parts\">\n                                    {this.state.message ? <p className=\"message\">{this.state.message}</p> : ''}\n                                    <form encType='multipart/form-data' onSubmit={this.AddProduct}>\n                                        <div className=\"score_list\">\n                                            {\n                                                this.props.score.scoreList.map((el, i) => (\n                                                    <label key={i}>\n                                                        {el.name}\n                                                        <DefaultInput\n                                                            type='checkbox'\n                                                            value={el.name + '/' + el.id}\n                                                            name='score[]'\n                                                            // width=\"5%\"\n                                                            checked\n                                                        />\n                                                    </label>\n                                                ))\n                                            }\n                                        </div>\n\n                                        <div className=\"score_parts_form\">\n                                            <DefaultInput\n                                                name='code'\n                                                placeholder=\"Պահեստամասի համարը / CODE\"\n                                                width=\"25%\"\n                                            />\n                                            <DefaultInput\n                                                type='number'\n                                                name='price'\n                                                placeholder=\"Արժեքը(Դրամ)\"\n                                                width=\"15%\"\n                                            />\n                                            <DefaultInput\n                                                type='number'\n                                                name='count'\n                                                placeholder=\"Առկա քանակը\"\n                                                width=\"15%\"\n                                            />\n                                            <DefaultInput\n                                                name='comments'\n                                                placeholder=\"Լրացուցիչ ինֆորմացիյա\"\n                                                width=\"30%\"\n                                            />\n\n                                        </div>\n\n                                        <div className='score_parts_view'>\n                                            <label>\n                                                Նոր\n                                                <DefaultInput\n                                                    type='radio'\n                                                    value=\"new\"\n                                                    name=\"state\"\n                                                    width=\"5%\"\n                                                    checked\n                                                />\n                                            </label>\n\n                                            <label>\n                                                Օգտագործված\n                                                <DefaultInput\n                                                    type='radio'\n                                                    value=\"old\"\n                                                    name='state'\n                                                    width=\"5%\"\n                                                />\n                                            </label>\n                                            <div className='parts_image'>\n                                                <label className='file row align-center' style={{width: '106%'}}>\n                                                    <span className='file__name'>Ներբեռնել լուսանկար․․․</span>\n                                                    <DefaultInput\n                                                        className=\"file_input\"\n                                                        type=\"file\"\n                                                        placeholder='Լուսանկար․․․'\n\n                                                        name='img'\n                                                    />\n                                                </label>\n                                            </div>\n                                        </div>\n                                        <div className=\"add__product-btn\">\n                                            {\n                                                this.state.loading ?\n                                                    <div className=\"loading_btn\"><Loading type='spin' color='#ff0000'\n                                                                                          size={30}/></div> : ''\n                                            }\n                                            <DefaultBtn\n                                                type=\"submit\"\n                                                name='Առաջ'\n                                                color=\"#fff\"\n                                                width='15%'\n                                                background=\"rgb(74 141 210)\"\n                                            />\n                                        </div>\n                                    </form>\n                                </div>\n\n                                <div className='pars_image_open'>\n                                    <div>\n                                        <span onClick={this.closeImage}><FontAwesomeIcon icon={faTimesCircle}/></span>\n                                        <img\n                                            alt=\"\"\n                                            src={this.state.zoomImg}\n                                        />\n                                    </div>\n                                </div>\n                                {/*<DefaultSelect*/}\n                                {/*    // onChange={this.getCategory}*/}\n                                {/*    data={maser}*/}\n                                {/*    width= '20%'*/}\n                                {/*    name='stores'*/}\n                                {/*/>*/}\n                                <div className=\"select_store\">\n                                    <div>\n                                        <p>Ընտրել խանութը</p>\n                                        <select\n                                            ref={el => this.getStore = el}\n                                            onChange={this.getSelectStore}\n                                        >\n                                            {\n                                                this.props.score.scoreList.map((el, i) => (\n                                                    <option key={i} value={el.name}>\n                                                        {el.name}\n                                                    </option>\n                                                ))\n                                            }\n                                        </select>\n                                    </div>\n                                    <div className='search'>\n                                        <p>Գտնել դետալը ըստ համարի</p>\n                                        <input type=\"text\" onChange={this.search} placeholder='Ոորոնում․․․'/>\n                                    </div>\n                                </div>\n\n                                <div className=\"get_list_auto_parts\">\n                                    <div className='list_header'>\n                                        <ul>\n                                            <li style={{width: '15%'}}>Սրահը</li>\n                                            <li style={{width: '15%'}}>Համարը/CODE</li>\n                                            <li style={{width: '15%'}}>Անվանումը</li>\n                                            <li style={{width: '12%'}}>Արժեքը(Դ․)</li>\n                                            <li style={{width: '12%'}}>Քանակը</li>\n                                            <li style={{width: '12%'}}>Մուտքը</li>\n                                            <li style={{width: '12%'}}>Լուսանկարը</li>\n                                            <li style={{width: '10%'}}>Նոր կամ Օգտագործ</li>\n                                            <li style={{width: '10%'}}>Կարգավորում</li>\n                                        </ul>\n                                    </div>\n\n                                    <div className=\"list_body\">\n                                        {\n                                            this.state.edit ?\n                                                <form className=\"edit\" style={{top: this.state.top + 'px'}}\n                                                      onSubmit={this.UpdateProductData}>\n                                                    <input type=\"number\" name='price' defaultValue={this.state.price}/>\n                                                    <input type=\"number\" name='count' defaultValue={this.state.count}/>\n                                                    <input type=\"hidden\" value={this.state.id} name='id'/>\n                                                    <button type='submit'>Հաստատել․</button>\n                                                </form> : ''\n                                        }\n\n\n                                        {\n                                            this.props.score.product.data ? this.props.score.product.data.map((el, i) => {\n\n                                                if (el.store_name === this.state.SelectStore) {\n                                                    return (\n                                                        <ul\n                                                            key={i}\n                                                            id={el.code}\n                                                            data-code={el}\n                                                            style={{\n                                                                background: el.code.replace(/\\s/g, '').toUpperCase() == this.state.search.replace(/\\s/g, '').toUpperCase() ?\n                                                                    'rgba(0,128,0,0.39)' : ''\n                                                            }}\n                                                        >\n                                                            <li style={{width: '15%'}} className='store_name'>\n                                                                {el.store_name}\n                                                            </li>\n                                                            <li style={{width: '15%'}}>{el.code}</li>\n                                                            <li style={{width: '15%'}}>{el.name}</li>\n                                                            <li style={{width: '12%'}}>{el.price + ' Դր․'}</li>\n                                                            <li style={{width: '12%'}}>{el.count + ' հ.'}</li>\n                                                            <li style={{width: '12%'}}>{el.data.split(' ')[0]}</li>\n                                                            <li style={{width: '12%'}}\n                                                                onClick={this.openImage}\n                                                                data-img={el.img ? el.img : ''}\n                                                            >\n                                                                {el.img ? <img data-img={el.img ? el.img : ''} src={el.img}\n                                                                               alt=\"\"/> : ''}\n                                                            </li>\n                                                            <li style={{width: '10%'}}>{el.new == 1 ? 'Նոր' : 'Օգտ.'}</li>\n                                                            <li className='buttons' style={{width: '10%'}}>\n                                                            <span data-id={el.id} data-price={el.price} data-count={el.count}\n                                                                  onClick={(e) => {\n                                                                      this.setState({\n                                                                          edit: true,\n                                                                          id: e.target.dataset.id,\n                                                                          price: e.target.dataset.price,\n                                                                          count: e.target.dataset.count,\n                                                                          top: e.pageY - (window.scrollY + 25)\n                                                                      })\n                                                                  }}>\n                                                                <FontAwesomeIcon icon={faPen}/>\n                                                            </span>\n                                                                <span onClick={this.DeliteProduct} data-id={el.id}>\n                                                                <FontAwesomeIcon icon={faTrashAlt}/>\n                                                            </span>\n                                                            </li>\n                                                        </ul>\n\n                                                    )\n                                                }\n\n                                            }) : ''\n\n\n                                        }\n                                    </div>\n                                </div>\n                            </div>\n                        </Route>\n                        <Route path='/score/account/cars/spare_parts/with_mark'>\n                            <TypeCars />\n                        </Route>\n\n\n\n\n            </Fragment>\n        )\n    }\n}\n\nconst MapStateToProps = state => {\n    return {\n        score: state.score,\n        location: state.location\n    }\n}\n\nconst MainFormAutoParts = connect(MapStateToProps)(FormAutoParts);\nexport default MainFormAutoParts;","/home/nordil/Desktop/V8/src/components/AutoParts/FormAutoParts/FormGlobalAutoParts.jsx",["587"],"import React, {Component} from \"react\";\nimport DefaultInput from \"../../forms/inputs/DefaultInput\";\nimport Loading from \"../../Loading\";\nimport DefaultBtn from \"../../forms/buttons/DefaultBtn\";\nimport {connect} from \"react-redux\";\n\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faArrowDown} from \"@fortawesome/free-solid-svg-icons\";\nimport {POST} from \"../../config/Requsest\";\nimport {Url} from \"../../config/Url\";\nimport {GetAllModel} from \"../../../redux/auto/action\";\n\nimport {GetMarkModelAutoParts} from \"../../../redux/score/action\";\n\nimport {NavLink, Redirect, Route} from \"react-router-dom\";\nimport MainListGlobalAutoParts from \"./ListGlobalAutoParts\";\nimport TypeCars from \"../TypeCars\";\n\n\n\nclass FormGlobalAutoParts extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: '',\n            openMarker: false,\n            loading:false,\n            redirect: false\n        }\n\n    }\n\n    componentDidMount() {\n        this.props.dispatch(GetAllModel())\n        this.props.dispatch(GetMarkModelAutoParts())\n    }\n\n    openModels = e => {\n        let el = document.querySelectorAll('.' + e.target.className.split(' ')[1])\n        this.setState({\n            openMarker: !this.state.openMarker,\n        })\n        if (el[1].style.display === 'block') {\n            el[1].style.display = 'none'\n        } else {\n            el[1].style.display = 'block'\n        }\n    }\n\n    AddScorPartsLists = (e) => {\n        e.preventDefault();\n        let data = new FormData(e.target)\n        POST(Url.addMarkModelAutoParts, data).then(res => {\n            if (res.status) {\n                this.props.dispatch(GetMarkModelAutoParts())\n                this.setState({\n                    loading: false,\n                    message: \"\",\n                    redirect: true\n\n                })\n            }else {\n                this.setState({\n                    loading: false,\n                    message: res.message\n                })\n                setTimeout(() => {\n                    this.setState({\n                        loading: false,\n                        message: ''\n                    })\n                },2500)\n            }\n        })\n    }\n\n    getChecked = (e) => {\n        let lists = document.querySelectorAll('.' + e.target.className)\n        if (e.target.checked) {\n            lists[0].childNodes[2].children[0].disabled = false\n            lists[0].childNodes[2].children[0].checked = true\n            lists[0].childNodes[3].children[0].disabled = false\n            lists[0].childNodes[3].children[0].checked = true\n            if(lists[0].childNodes[5]){\n                lists[0].childNodes[5].children[0].checked = true\n            }\n\n        } else {\n            lists[0].childNodes[2].children[0].disabled = true\n            lists[0].childNodes[2].children[0].checked = false\n            lists[0].childNodes[3].children[0].disabled = true\n            lists[0].childNodes[3].children[0].checked = false\n            if(lists[0].childNodes[5]){\n                lists[0].childNodes[5].children[0].checked = false\n            }\n\n        }\n    }\n\n    render() {\n        console.log(window.location.pathname)\n        return (\n            <div className=\"add_auto_parts\">\n                {\n                    this.state.redirect? <Redirect to='/score/account/cars/spare_parts/with_mark/cars/lists'/>:''\n                }\n                <div className=\"add_auto_parts-links\">\n\n                    <NavLink to='/score/account/cars/spare_parts/with_mark/cars/add' >Ավելացնել...</NavLink>\n                    <NavLink to='/score/account/cars/spare_parts/with_mark/cars/lists' >Ցանկ...</NavLink>\n                </div>\n                    {\n                        this.state.message?\n                            <div className=\"message\" style={{\n                                position: \"fixed\",\n                                top: \"15px\",\n                                background: \"#ffffff\"\n\n                            }}>\n                                {this.state.message}\n                            </div>:''\n                    }\n                <Route path='/score/account/cars/spare_parts/with_mark/cars/add'>\n                    <form onSubmit={this.AddScorPartsLists}>\n                        <input type=\"hidden\" name='type' value='car'/>\n                        <div className=\"score_list\">\n                            {\n                                this.props.score.scoreList.map((el, i) => (\n                                    <label key={i}>\n                                        {el.name}\n                                        <DefaultInput\n                                            type='checkbox'\n                                            value={el.id}\n                                            name='score[]'\n                                            checked\n                                        />\n                                    </label>\n                                ))\n                            }\n                        </div>\n\n                        <div className=\"score_parts_form\">\n                            <nav className=\"auto_mark\">\n                                <ul className='all_check'>\n                                    {\n                                        this.props.auto.mark.map((el, i) => {\n                                            if (i !== 0) {\n                                                return (\n\n                                                    <li key={i} className='all_check'>\n                                                        <ul className={\"li_mark li_mark\" + i}>\n                                                            <li>{el.name}</li>\n                                                            <li><input className={\"li_mark\" + i} data-id={el.id}\n                                                                       name='mark[]' value={el.name}\n                                                                       onChange={this.getChecked} type='checkbox'/>\n                                                            </li>\n\n                                                            <li>\n                                                                <input className='checkbox new_mark'\n                                                                       name='mark_new'\n                                                                       value={1} disabled type='checkbox'\n                                                                />\n                                                                Նոր\n                                                            </li>\n                                                            <li> <input name='mark_old' value={1} disabled\n                                                                        type='checkbox'/>օգտ.</li>\n                                                            <li style={{width: \"5%\"}}\n                                                                className={\"open_models open_models\" + el.name}\n                                                                data-count={i} data-id={el.id} onClick={this.openModels}>\n                                                                {\n                                                                    <FontAwesomeIcon icon={faArrowDown}/>\n                                                                }\n                                                            </li>\n                                                            <li style={{display: \"none\"}}>\n                                                                <input type=\"checkbox\" name='mark_id[]' value={el.id}/>\n                                                            </li>\n                                                        </ul>\n\n                                                        <ul className={`open_models${el.name}`} style={{display: \"none\"}}\n                                                            data-count={i} ref={el => this.getModels = el}>\n                                                            {\n                                                                this.props.auto.allModels.map((model, i) => {\n                                                                    if (el.id === model['id_mark']) {\n                                                                        return (\n                                                                            <li key={i}>\n                                                                                <ul className={`li_model${i}`}>\n                                                                                    <li className='model__li'>{model.name}</li>\n                                                                                    <li>\n                                                                                        <input data-check={2}\n                                                                                               className={'li_model' + i}\n                                                                                               onChange={this.getChecked}\n                                                                                               type=\"checkbox\"\n                                                                                               name='model[]'\n                                                                                               value={model.name + '/' + model['id_mark']}/>\n                                                                                    </li>\n                                                                                    <li>\n                                                                                        <input type=\"checkbox\" disabled\n                                                                                               name='model_new' value={1}/>\n                                                                                        Նոր\n                                                                                    </li>\n                                                                                    <li>\n                                                                                        <input type=\"checkbox\" disabled\n                                                                                               name='model_old' value={1}/>\n                                                                                        Օգտ.\n                                                                                    </li>\n                                                                                </ul>\n                                                                            </li>\n                                                                        )\n                                                                    } else return false;\n                                                                })\n                                                            }\n\n                                                        </ul>\n                                                    </li>\n                                                )\n                                            } else return false;\n                                        })\n                                    }\n                                </ul>\n                            </nav>\n                        </div>\n\n\n                        <div className=\"add_auto_parts-btn\">\n                            {\n                                this.state.loading ?\n                                    <div className=\"loading_btn\"><Loading type='spin' color='#ff0000' size={30}/></div> : ''\n                            }\n                            <DefaultBtn\n                                type=\"submit\"\n                                name='Առաջ'\n                                color=\"#fff\"\n                                width='15%'\n                                background=\"rgb(74 141 210)\"\n                            />\n                        </div>\n                    </form>\n                </Route>\n                <Route path='/score/account/cars/spare_parts/with_mark/cars/lists'>\n                    <MainListGlobalAutoParts />\n                </Route>\n\n            </div>\n\n\n        )\n    }\n}\n\n\nconst MapStateToProps = state => {\n    return {\n        score: state.score,\n        location: state.location,\n        auto: state.auto\n    }\n}\n\nconst MainFormGlobalAutoParts = connect(MapStateToProps)(FormGlobalAutoParts);\nexport default MainFormGlobalAutoParts;\n","/home/nordil/Desktop/V8/src/components/Score/ScorePage/ScorePage.jsx",["588","589","590","591","592","593","594","595","596","597"],"import React, {Component} from \"react\";\nimport './ScorePage.scss'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faFacebookSquare, faInstagram, faYoutubeSquare} from \"@fortawesome/free-brands-svg-icons\";\nimport {\n    faCog,\n    faExternalLinkAlt,\n    faMapMarkerAlt,\n    faPhoneSquareAlt,\n    faShareAltSquare,\n    faPencilAlt, faAngleDoubleRight, faMailBulk, faEnvelopeSquare, faLink, faCreditCard,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport SliderAuto from \"../../SliderAuto/SliderAuto\";\nimport DefaultBtn from \"../../forms/buttons/DefaultBtn\";\nimport {POST, TEST_POST} from \"../../config/Requsest\";\nimport {Url} from \"../../config/Url\";\nimport {connect} from \"react-redux\";\nimport {GetScoreList, GetScoreListId} from \"../../../redux/score/action\";\nimport DefaultSelect from \"../../forms/select/DefaultSelect\";\nimport {GetCity} from \"../../../redux/location/action\";\nimport Loading from \"../../Loading\";\nimport ScoreAddImg from \"./AddImg\";\nimport {faClock} from \"@fortawesome/free-regular-svg-icons\";\n\n\n\nclass ScorePage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: '',\n            img: [],\n            NameForm: false,\n            LocationForm: false,\n            PhoneForm: false,\n            UrlForm: false,\n            EmailForm: false,\n            FacebookForm: false,\n            InstagramForm: false,\n            YoutubeForm: false,\n            SircleValue: '',\n            CityValue: '',\n            loading: false,\n            loadingSlider: false,\n            TimeForm: false,\n            CreditForm: false\n        }\n        this.NameRef = React.createRef()\n        this.SircleRef = React.createRef()\n        this.CityRef = React.createRef()\n        this.AddresRef = React.createRef()\n        this.PhoneRef1 = React.createRef()\n        this.PhoneRef2 = React.createRef()\n        this.PhoneRef3 = React.createRef()\n        this.UrlRef = React.createRef()\n        this.EmailRef = React.createRef()\n        this.FacebookRef = React.createRef()\n        this.InstagramRef = React.createRef()\n        this.YoutubeRef = React.createRef()\n        this.WorRef = React.createRef()\n        this.YoutubeRef = React.createRef()\n        this.WorkToRef = React.createRef()\n        this.WorkFromRef = React.createRef()\n        this.CreditRef = React.createRef()\n    }\n\n\n    Setings = (e) => {\n        this.setState({loading: true})\n        let data = new FormData();\n        data.append('id', this.props.data.id)\n        data.append('name', this.NameRef.current.value)\n        data.append('sircle', this.state.SircleValue ? this.state.SircleValue : this.SircleRef.current.props.selected)\n        data.append('city', this.state.CityValue ? this.state.CityValue : this.CityRef.current.props.selected)\n        data.append('addres', this.AddresRef.current.value)\n        data.append('phone[]', this.PhoneRef1.current.value)\n        data.append('phone[]', this.PhoneRef2.current.value)\n        data.append('phone[]', this.PhoneRef3.current.value)\n        data.append('url', this.UrlRef.current.value)\n        data.append('email', this.EmailRef.current.value)\n        data.append('facebook', this.FacebookRef.current.value)\n        data.append('instagram', this.InstagramRef.current.value)\n        data.append('youtube', this.YoutubeRef.current.value)\n        data.append('work_to', this.WorkToRef.current.value)\n        data.append('work_from', this.WorkFromRef.current.value)\n\n        if (this.CreditRef.current.checked){\n            data.append('credit', 1)\n        }else{\n            data.append('credit', 0)\n        }\n        POST(Url.scoreSetings, data).then(res => {\n            if (res) {\n                console.log(res)\n                this.setState({loading: false})\n            }\n            this.props.dispatch(GetScoreList())\n            this.setState({\n                NameForm: false,\n                LocationForm: false,\n                PhoneForm: false,\n                UrlForm: false,\n                EmailForm: false,\n                FacebookForm: false,\n                InstagramForm: false,\n                YoutubeForm: false,\n                TimeForm: false,\n                CreditForm: false\n            })\n        })\n    }\n    componentDidMount() {\n        this.props.dispatch(GetScoreListId(window.location.pathname.split('/').pop()))\n\n    }\n\n    UbdateImg = (e) => {\n        this.setState({\n            loadingSlider: true\n        })\n        let data = new FormData();\n        data.append('id', this.props.data.id)\n        data.append('img_url', e.target.dataset.url)\n        data.append('img', this.props.data.img)\n        if (e.target.dataset.url != undefined || e.target.dataset.img != undefined){\n            POST(Url.scoreSetings, data).then(res => {\n\n                if (res){\n                    this.props.dispatch(GetScoreList())\n                    this.setState({\n                        loadingSlider: false\n                    })\n                }\n            })\n        }else {\n            this.setState({\n                loadingSlider: false\n            })\n        }\n\n    }\n    AddSliderImg = (e) => {\n        this.setState({loadingSlider: true})\n        let data = new FormData()\n        let tmpImg = this.state.img;\n\n        Object.values(e.target.files).map(img => {\n            data.append('file[]', img);\n            tmpImg.push(img);\n        })\n        data.append('id', this.props.data.id);\n\n        this.setState({\n            img: tmpImg,\n        })\n        if ((this.props.data.img.length + Array.from(data).length) <= 11) {\n            POST(Url.scoreSetings, data).then(res => {\n                if (res) {\n                    this.props.dispatch(GetScoreList())\n                    this.setState({loadingSlider: false})\n                }\n            })\n        } else {\n            alert('Chi kareli' + (this.props.data.img.length + Array.from(data).length) + 'nkar gcel')\n            this.setState({loadingSlider: false})\n        }\n\n    }\n\n\n\n    render() {\n        let data = this.props.data;\n\n        return (\n            <div className=\"score_page\" style={\n                this.state.NameForm ||\n                this.state.LocationForm ||\n                this.state.PhoneForm ||\n                this.state.UrlForm ||\n                this.state.EmailForm ||\n                this.state.FacebookForm ||\n                this.state.InstagramForm ||\n                this.state.YoutubeForm ||\n                    this.state.TimeForm ||\n                    this.state.CreditForm\n                    ? {background: '#00000050'} : {background: 'none'}}\n            >\n                <div className=\"score_page_info\">\n                    {\n                        this.state.loading ?\n                            <div className=\"loading_score_setings\"><Loading type='spokes' color='#1c8080' size={150}/>\n                            </div> : ''\n\n                    }\n                    <div className='info__container' style={this.state.NameForm ? {margin: '10px 0'} : {margin: '0'}}>\n                        <h3 style={{color: \"brown\"}}>{data.name}</h3>\n                        <div className=\"edit\" onClick={() => this.setState({NameForm: true})}>\n                            <FontAwesomeIcon icon={faPencilAlt}/>\n                        </div>\n                        <div className=\"form\" style={this.state.NameForm ? {display: 'flex'} : {display: 'none'}}>\n                            <input\n\n                                type='text'\n                                name='name'\n                                defaultValue={data.name}\n                                ref={this.NameRef}\n                            />\n                        </div>\n                    </div>\n\n                    <div className='info__container'>\n                        <ul className='working_interval_style'>\n                            <li>{data.work_to}</li>\n\n                            <li>{data.work_from}</li>\n                            <div className=\"form\" style={this.state.TimeForm ? {display: 'flex'} : {display: 'none'}}>\n                                <input\n                                    type='time'\n                                    name='work_to'\n                                    defaultValue={data.work_to}\n                                    ref={this.WorkToRef}\n                                />\n                                <input\n                                    type='time'\n                                    name='work_from'\n                                    defaultValue={data.work_from}\n                                    ref={this.WorkFromRef}\n                                />\n                            </div>\n                            <div className=\"edit\" onClick={() => this.setState({TimeForm: true})}>\n                                <FontAwesomeIcon icon={faPencilAlt}/>\n                            </div>\n\n                        </ul>\n\n                    </div>\n                    <nav>\n                        <ul>\n                            <li>\n                                <FontAwesomeIcon icon={faMapMarkerAlt}/>\n                            </li>\n                            <div className='info__container'\n                                 style={this.state.LocationForm ? {margin: '10px 0'} : {margin: '0'}}>\n                                <ul className=\"addres\">\n                                    <li>{data.sircle}</li>\n                                    <li>{data.city}</li>\n                                    <li>{data.addres}</li>\n                                </ul>\n                                <div className=\"edit\" onClick={() => {\n                                    this.props.dispatch(GetCity(this.SircleRef.current.state.optId || 1))\n                                    this.setState({LocationForm: true})\n                                }}>\n                                    <FontAwesomeIcon icon={faPencilAlt}/>\n                                </div>\n                                <div className=\"form\"\n                                     style={this.state.LocationForm ? {display: 'flex'} : {display: 'none'}}>\n                                    <DefaultSelect\n                                        ref={this.SircleRef}\n                                        data={this.props.location.sircle}\n                                        onChange={(e) => {\n                                            this.props.dispatch(GetCity(e.target.selectedIndex + 1))\n                                            this.setState({\n                                                SircleValue: e.target.value\n                                            })\n                                        }}\n\n                                    />\n                                    <DefaultSelect\n                                        data={this.props.location.city}\n                                        width='48%'\n                                        ref={this.CityRef}\n                                        onChange={(e) => {\n                                            this.setState({\n                                                CityValue: e.target.value\n                                            })\n                                        }}\n                                    />\n                                    <input\n                                        type='text'\n                                        id='addres'\n                                        ref={this.AddresRef}\n                                        defaultValue={data.addres}\n                                    />\n                                </div>\n                            </div>\n                        </ul>\n\n                        <ul className=\"phone\">\n                            <ul>\n                                <div className='info__container' style={this.state.PhoneForm?{margin:'10px 0'}:{margin:'0'}}>\n                                    <li>\n                                        <div className=\"icon\">\n                                            <FontAwesomeIcon icon={faPhoneSquareAlt}/>\n                                        </div>\n                                        {data.phone[0].replace(/374/g, '(+374)')}\n                                    </li>\n                                    <div className=\"edit\" onClick={() => this.setState({PhoneForm: true})}>\n                                        <FontAwesomeIcon icon={faPencilAlt}/>\n                                    </div>\n                                    <div className=\"form\"\n                                         style={this.state.PhoneForm ? {display: 'flex'} : {display: 'none'}}>\n                                        <input\n                                            className='phone'\n                                            type='text'\n                                            defaultValue={data.phone[0]}\n                                            ref={this.PhoneRef1}\n                                        />\n                                    </div>\n                                </div>\n\n                                <div className='info__container' style={this.state.PhoneForm?{margin:'10px 0'}:{margin:'0'}}>\n                                    <li>\n                                        <div className=\"icon\">\n                                            <FontAwesomeIcon icon={faPhoneSquareAlt}/>\n                                        </div>\n                                        {data.phone[1].replace(/374/g, '(+374)')}\n                                    </li>\n                                    <div className=\"edit\" onClick={() => this.setState({PhoneForm: true})}>\n                                        <FontAwesomeIcon icon={faPencilAlt}/>\n                                    </div>\n                                    <div className=\"form\"\n                                         style={this.state.PhoneForm ? {display: 'flex'} : {display: 'none'}}>\n                                        <input\n                                            className='phone'\n                                            type='text'\n                                            defaultValue={data.phone[1]}\n                                            ref={this.PhoneRef2}\n                                        />\n                                    </div>\n                                </div>\n                                <div className='info__container' style={this.state.PhoneForm?{margin:'10px 0'}:{margin:'0'}}>\n                                    <li>\n                                        <div className=\"icon\">\n                                            <FontAwesomeIcon icon={faPhoneSquareAlt}/>\n                                        </div>\n                                        {data.phone[2].replace(/374/g, '(+374)')}\n                                    </li>\n                                    <div className=\"edit\" onClick={() => this.setState({PhoneForm: true})}>\n                                        <FontAwesomeIcon icon={faPencilAlt}/>\n                                    </div>\n                                    <div className=\"form\"\n                                         style={this.state.PhoneForm ? {display: 'flex'} : {display: 'none'}}>\n                                        <input\n                                            className='phone'\n                                            type='text'\n                                            defaultValue={data.phone[2]}\n                                            ref={this.PhoneRef3}\n                                        />\n                                    </div>\n                                </div>\n\n                            </ul>\n\n                        </ul>\n\n                        <ul>\n                            <li>\n                                <FontAwesomeIcon icon={faExternalLinkAlt}/>\n                            </li>\n                            <ul className=\"site_network\">\n\n                                <div className='info__container' style={this.state.UrlForm?{margin:'10px 0'}:{margin:'0'}}>\n                                    <li>\n                                        <div className=\"icon\">\n                                            <FontAwesomeIcon icon={faLink}/>\n                                        </div>\n                                        <a href={data.url} target='_blank'>\n                                            {data.url}\n                                        </a>\n                                    </li>\n                                    <div className=\"edit\" onClick={() => this.setState({UrlForm: true})}>\n                                        <FontAwesomeIcon icon={faPencilAlt}/>\n                                    </div>\n                                    <div className=\"form\"\n                                         style={this.state.UrlForm ? {display: 'flex'} : {display: 'none'}}>\n                                        <input\n                                            className='url'\n                                            type='text'\n                                            defaultValue={data.url}\n                                            ref={this.UrlRef}\n                                        />\n                                    </div>\n                                </div>\n\n                                <div className='info__container'>\n\n                                    <li>\n                                        <div className=\"icon\">\n                                            <FontAwesomeIcon icon={faEnvelopeSquare}/>\n                                        </div>\n                                        {data.email}\n                                    </li>\n                                    <div className=\"edit\" onClick={() => this.setState({EmailForm: true})}>\n                                        <FontAwesomeIcon icon={faPencilAlt}/>\n                                    </div>\n                                    <div className=\"form\"\n                                         style={this.state.EmailForm ? {display: 'flex'} : {display: 'none'}}>\n                                        <input\n                                            className='url'\n                                            type='text'\n                                            defaultValue={data.email}\n                                            ref={this.EmailRef}\n                                        />\n                                    </div>\n                                </div>\n                            </ul>\n\n                        </ul>\n\n                        <ul>\n                            {\n                                data.facebook || data.instagram ? <li>\n                                    <FontAwesomeIcon icon={faShareAltSquare}/>\n                                </li> : ''\n                            }\n                            <ul className=\"social_network links\">\n                                <div className='info__container urls'>\n                                    <li>\n                                        <a className=\"facebook\" href={data.facebook}>\n                                            <FontAwesomeIcon icon={faFacebookSquare} style={{marginRight: '10px'}}/>\n                                            Facebook\n                                        </a>\n                                    </li>\n                                    <div className=\"edit\" onClick={() => this.setState({FacebookForm: true})}>\n                                        <FontAwesomeIcon icon={faPencilAlt}/>\n                                    </div>\n                                    <div className=\"form\"\n                                         style={this.state.FacebookForm ? {display: 'flex'} : {display: 'none'}}>\n                                        <input\n                                            className='url'\n                                            type='text'\n                                            defaultValue={data.facebook}\n                                            ref={this.FacebookRef}\n                                        />\n                                    </div>\n                                </div>\n                                <div className='info__container urls'>\n                                    <li>\n                                        <a className=\"instagram\" href={data.instagram}>\n                                            <FontAwesomeIcon icon={faInstagram} style={{marginRight: '10px'}}/>\n                                            Instagram\n                                        </a>\n\n                                    </li>\n                                    <div className=\"edit\" onClick={() => this.setState({InstagramForm: true})}>\n                                        <FontAwesomeIcon icon={faPencilAlt}/>\n                                    </div>\n                                    <div className=\"form\"\n                                         style={this.state.InstagramForm ? {display: 'flex'} : {display: 'none'}}>\n                                        <input\n                                            className='url'\n                                            type='text'\n                                            defaultValue={data.instagram}\n                                            ref={this.InstagramRef}\n                                        />\n                                    </div>\n                                </div>\n                                <div className='info__container urls'>\n                                    <li>\n                                        <a className=\"youtube\" href={data.youtube}>\n                                            <FontAwesomeIcon icon={faYoutubeSquare} style={{marginRight: '10px'}}/>\n                                            Youtube\n                                        </a>\n\n                                    </li>\n                                    <div className=\"edit\" onClick={() => this.setState({YoutubeForm: true})}>\n                                        <FontAwesomeIcon icon={faPencilAlt}/>\n                                    </div>\n                                    <div className=\"form\"\n                                         style={this.state.YoutubeForm ? {display: 'flex'} : {display: 'none'}}>\n                                        <input\n                                            className='url'\n                                            type='text'\n                                            defaultValue={data.youtube}\n                                            ref={this.YoutubeRef}\n                                        />\n                                    </div>\n                                </div>\n\n                            </ul>\n                            <div className='info__container credit'>\n                                <li>\n                                    <FontAwesomeIcon icon={faCreditCard} style={{marginRight: '10px'}}/>\n                                    Ապառիկ վաճառք։\n                                </li>\n                                    <input\n                                        style={{boxShadow:\"none\"}}\n                                        className='credit'\n                                        value={1}\n                                        type='checkbox'\n                                        defaultChecked={+data.credit?'checked': ''}\n                                        ref={this.CreditRef}\n                                        onChange={() => this.setState({CreditForm: true})}\n                                    />\n\n                            </div>\n                        </ul>\n\n                    </nav>\n                    {\n                        this.state.NameForm ||\n                        this.state.LocationForm ||\n                        this.state.PhoneForm ||\n                        this.state.UrlForm ||\n                        this.state.EmailForm ||\n                        this.state.FacebookForm ||\n                        this.state.InstagramForm ||\n                        this.state.YoutubeForm ||\n                            this.state.TimeForm ||\n                            this.state.CreditForm\n                            ?\n                            <div className='btns'>\n                                <div className=\"send\">\n                                    <DefaultBtn\n                                        name='Պահպանել․․․'\n                                        color='#ffffff'\n                                        background='#434455'\n                                        onClick={this.Setings}\n                                    />\n                                </div>\n                                <div className=\"send\">\n                                    <DefaultBtn\n                                        name='Չեղարկել․․․'\n                                        color='#ffffff'\n                                        background='#434455'\n                                        onClick={() => {\n                                            this.setState({\n                                                NameForm: false,\n                                                LocationForm: false,\n                                                PhoneForm: false,\n                                                UrlForm: false,\n                                                EmailForm: false,\n                                                FacebookForm: false,\n                                                InstagramForm: false,\n                                                YoutubeForm: false,\n                                                TimeForm: false,\n                                                CreditForm: false\n                                            })\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                            : ''\n                    }\n                </div>\n\n                <div className=\"slider__container\">\n                    {\n                        data.img != false?\n                            <SliderAuto autoImage={data.img} edit={true} onClick={this.UbdateImg} id={data.id} loading={this.state.loadingSlider} AddImg={this.AddSliderImg}/>:\n                            <ScoreAddImg autoImage={data.img} id={data.id} onChange={this.AddSliderImg} loading={this.state.loadingSlider}/>\n                    }\n\n                </div>\n            </div>\n        )\n    }\n}\n\n\nconst MapStateToProps = state => {\n    return {\n        score: state.score,\n        location: state.location\n    }\n}\n\nconst MainScorePage = connect(MapStateToProps)(ScorePage);\nexport default MainScorePage;","/home/nordil/Desktop/V8/src/components/AutoParts/TypeCars.jsx",["598","599"],"import React, {Component, Fragment} from \"react\";\nimport {Link, NavLink, Route} from \"react-router-dom\";\nimport FromGlobalAutoParts from  './FormAutoParts/FormGlobalAutoParts'\nimport FromGlobalTruckParts from  './FormAutoParts/FormGlobalTruckParts'\nimport {Redirect} from \"react-router\";\n\nclass TypeCars extends  Component {\n    render() {\n        // console.log(window.location.pathname)\n        return(\n            <Fragment>\n                {/*<Redirect to={window.location.pathname}/>*/}\n                <div className=\"add_auto_parts-links\">\n                    <NavLink to='/score/account/cars/spare_parts/with_mark/cars' >Մարդատար</NavLink>\n                    <NavLink to='/score/account/cars/spare_parts/with_mark/truck' >Բեռնատար</NavLink>\n                </div>\n                <Route path='/score/account/cars/spare_parts/with_mark/cars'>\n                    <FromGlobalAutoParts />\n                </Route>\n                <Route path='/score/account/cars/spare_parts/with_mark/truck'>\n                    <FromGlobalTruckParts />\n                </Route>\n            </Fragment>\n\n        )\n    }\n}\n\nexport default TypeCars","/home/nordil/Desktop/V8/src/components/Score/ScorePage/AddImg.jsx",["600","601","602","603","604"],"import React, {Component, Fragment} from \"react\";\n// import './SliderAuto.scss';\nimport Loading from \"../../Loading\";\nimport {connect} from \"react-redux\";\nimport {POST} from \"../../config/Requsest\";\nimport {Url} from \"../../config/Url\";\nimport {GetScoreList} from \"../../../redux/score/action\";\n\nclass ScoreAddImg extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n            return (\n\n                <label className='add__img-big'>\n                    {\n                        this.props.loading ?\n                            <div className=\"loading_slider-img\"><Loading type='spokes' color='#00FF3F' size={200}/>\n                            </div> : ''\n                    }\n                    <div className=\"bg\" style={{width: '100%', height: '100%'}}></div>\n                    <input\n                        type='file'\n                        multiple\n                        onChange={this.props.onChange}\n                    />\n                    <span style={{fontSize: '150px'}}>+</span>\n                </label>\n            )\n\n    }\n}\n\n\n\nconst MapStateToProps = state => state;\n\nconst MainScoreAddImg = connect(MapStateToProps)(ScoreAddImg);\nexport default MainScoreAddImg;","/home/nordil/Desktop/V8/src/components/AutoParts/FormAutoParts/ListGlobalAutoParts.jsx",["605","606","607","608","609","610","611","612","613","614","615"],"import React, {Component, Fragment} from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faArrowDown, faFolderOpen, faPen} from \"@fortawesome/free-solid-svg-icons\";\nimport {faFolder, faTrashAlt} from \"@fortawesome/free-regular-svg-icons\";\nimport {connect} from \"react-redux\";\nimport ButtonView from \"../../ButtonView/ButtonView\";\n\n\n\nclass ListGlobalAutoParts extends  Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            store: ''\n        }\n    }\n    componentDidMount() {\n        let st;\n        this.props.score.scoreList.map((el,i)=>{\n            if(i===0){\n                st = el.id\n            }\n        })\n        this.setState({\n            store:st\n        })\n    }\n\n    getStore = e =>{\n        this.setState({\n            store:e.target.value\n        })\n    }\n\n    openModel = e =>{\n        if(e.target.dataset.title == 1){\n            console.log(e.target.className.split(' ')[1].toString())\n            let block = document.querySelectorAll('.'+e.target.className.split(' ')[1].toString())\n            console.log(block)\n            block.forEach(el=>{\n                // console.log(el)\n                if(el.tagName != \"LI\"){\n                    console.log(el.style.display)\n                    if(el.style.display == 'none'){\n                        el.style.display = 'flex'\n                    }else{\n                        el.style.display = 'none'\n                    }\n                }\n            })\n            e.target.childNodes[0].click()\n        }\n    }\n    render() {\n        let {carMark,carModel} = this.props.score.MarkModelParts\n        // console.log(mark,model)\n        console.log(this.props.score)\n        return(\n                <div className=\"get_list_auto_parts\">\n\n                    <div>\n                        <select onChange={this.getStore}>\n                            {\n                                this.props.score.scoreList.map((el,i)=>{\n                                    return(\n                                        <option key={i} value={el.id}>\n                                            {el.name}\n                                        </option>\n                                    )\n                                })\n                            }\n                        </select>\n                    </div>\n                    <div className='list_header'>\n                        <ul>\n                            <li>Ապրանքանիշը</li>\n                            <li>Նոր</li>\n                            <li>Օգտագործ.</li>\n                            <li></li>\n                        </ul>\n                    </div>\n                    <div className=\"list_body\">\n                        {\n                            carMark?carMark.map((mark,i) => {\n                               if(this.state.store == mark.score_id){\n                                   return(\n                                       // <div className=\"list_body\">\n                                       <Fragment key={i}>\n                                           <ul >\n                                               <li>{mark.mark}</li>\n                                               {\n                                                   mark.new?<li>նոր</li>:''\n                                               }\n                                               {\n                                                   mark.old?<li>օգտ</li>:''\n                                               }\n                                               <li data-bul={false} onClick={this.openModel} className={\"open_list open_list\"+mark.id} data-title={1}>\n                                                   <ButtonView\n                                                       button1={<FontAwesomeIcon  icon={faFolder}/>}\n                                                       button2={<FontAwesomeIcon  icon={faFolderOpen}/>}\n                                                   />\n                                               </li>\n                                           </ul>\n                                           {\n                                               carModel.map((model,i)=>{\n\n                                                   if(mark.mark_id === model.mark_id && this.state.store == model.score_id){\n                                                       return (\n                                                           <ul\n                                                               key={model.id}\n                                                               className={\"open_list\"+mark.id}\n                                                               style={\n                                                                   {\n                                                                       display:\"none\",\n                                                                       background:'#282838',\n                                                                       color:'#ffffff'\n                                                                   }\n                                                               }\n                                                           >\n                                                               <li>{model.model}</li>\n                                                               {\n                                                                   model.new?<li>նոր</li>:''\n                                                               }\n                                                               {\n                                                                   model.old?<li>օգտ</li>:''\n                                                               }\n                                                               <li></li>\n                                                           </ul>\n                                                       )\n                                                   }\n                                               })\n                                           }\n                                       </Fragment>\n\n                                   )\n                               }\n\n\n                            }):''\n                        }\n                    </div>\n\n                {/*</div>*/}\n            </div>\n        )\n    }\n}\n\n\nconst MapStateToProps = state => {\n    return {\n        score: state.score,\n        location: state.location,\n        auto: state.auto\n    }\n}\n\nconst MainListGlobalAutoParts = connect(MapStateToProps)(ListGlobalAutoParts);\nexport default MainListGlobalAutoParts;","/home/nordil/Desktop/V8/src/components/AutoParts/FormAutoParts/FormGlobalTruckParts.jsx",["616","617"],"import React, {Component} from \"react\";\nimport DefaultInput from \"../../forms/inputs/DefaultInput\";\nimport Loading from \"../../Loading\";\nimport DefaultBtn from \"../../forms/buttons/DefaultBtn\";\nimport {connect} from \"react-redux\";\n\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faArrowDown} from \"@fortawesome/free-solid-svg-icons\";\nimport {POST} from \"../../config/Requsest\";\nimport {Url} from \"../../config/Url\";\nimport {GetAllModel} from \"../../../redux/auto/action\";\n\nimport {GetMarkModelAutoParts} from \"../../../redux/score/action\";\n\nimport {NavLink, Redirect, Route} from \"react-router-dom\";\nimport MainListGlobalAutoParts from \"./ListGlobalAutoParts\";\nimport TypeCars from \"../TypeCars\";\nimport ListGlobalTruckParts from \"./ListGlobalTruckParts\";\n\n\nclass FormGlobalTruckParts extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: '',\n            openMarker: false,\n            loading:false,\n            redirect: false\n        }\n\n    }\n\n    componentDidMount() {\n        this.props.dispatch(GetAllModel())\n        this.props.dispatch(GetMarkModelAutoParts())\n    }\n\n    openModels = e => {\n        let el = document.querySelectorAll('.' + e.target.className.split(' ')[1])\n        this.setState({\n            openMarker: !this.state.openMarker,\n        })\n        if (el[1].style.display === 'block') {\n            el[1].style.display = 'none'\n        } else {\n            el[1].style.display = 'block'\n        }\n    }\n\n    AddScorPartsLists = (e) => {\n        e.preventDefault();\n        let data = new FormData(e.target)\n        POST(Url.addMarkModelAutoParts, data).then(res => {\n            if (res.status) {\n                this.props.dispatch(GetMarkModelAutoParts())\n                this.setState({\n                    loading: false,\n                    message: \"\",\n                    redirect: true\n\n                })\n            }else {\n                this.setState({\n                    loading: false,\n                    message: res.message\n                })\n                setTimeout(() => {\n                    this.setState({\n                        loading: false,\n                        message: ''\n                    })\n                },2500)\n            }\n        })\n    }\n\n    getChecked = (e) => {\n        let lists = document.querySelectorAll('.' + e.target.className)\n        if (e.target.checked) {\n            lists[0].childNodes[2].children[0].disabled = false\n            lists[0].childNodes[2].children[0].checked = true\n            lists[0].childNodes[3].children[0].disabled = false\n            lists[0].childNodes[3].children[0].checked = true\n            if(lists[0].childNodes[5]){\n                lists[0].childNodes[5].children[0].checked = true\n            }\n\n        } else {\n            lists[0].childNodes[2].children[0].disabled = true\n            lists[0].childNodes[2].children[0].checked = false\n            lists[0].childNodes[3].children[0].disabled = true\n            lists[0].childNodes[3].children[0].checked = false\n            if(lists[0].childNodes[5]){\n                lists[0].childNodes[5].children[0].checked = false\n            }\n\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"add_auto_parts\">\n                {\n                    this.state.redirect? <Redirect to='/score/account/cars/spare_parts/with_mark/truck/lists'/>:''\n                }\n\n                <div className=\"add_auto_parts-links\">\n                    <NavLink to='/score/account/cars/spare_parts/with_mark/truck/add' >Ավելացնել...</NavLink>\n                    <NavLink to='/score/account/cars/spare_parts/with_mark/truck/lists' >Ցանկ...</NavLink>\n                </div>\n                {\n                    this.state.message?\n                        <div className=\"message\" style={{\n                            position: \"fixed\",\n                            top: \"15px\",\n                            background: \"#ffffff\"\n\n                        }}>\n                            {this.state.message}\n                        </div>:''\n                }\n                <Route path='/score/account/cars/spare_parts/with_mark/truck/add'>\n                    <form onSubmit={this.AddScorPartsLists}>\n                        <input type=\"hidden\" name='type' value='truck'/>\n                        <div className=\"score_list\">\n                            {\n                                this.props.score.scoreList.map((el, i) => (\n                                    <label key={i}>\n                                        {el.name}\n                                        <DefaultInput\n                                            type='checkbox'\n                                            value={el.id}\n                                            name='score[]'\n                                            checked\n                                        />\n                                    </label>\n                                ))\n                            }\n                        </div>\n\n                        <div className=\"score_parts_form\">\n                            <nav className=\"auto_mark\">\n                                <ul className='all_check'>\n                                    {\n                                        this.props.auto.truck.map((el, i) => {\n                                            if (i !== 0) {\n                                                return (\n\n                                                    <li key={i} className='all_check'>\n                                                        <ul className={\"li_mark li_mark\" + i}>\n                                                            <li>{el.name}</li>\n                                                            <li><input className={\"li_mark\" + i} data-id={el.id}\n                                                                       name='mark[]' value={el.name}\n                                                                       onChange={this.getChecked} type='checkbox'/>\n                                                            </li>\n\n                                                            <li>\n                                                                <input className='checkbox new_mark'\n                                                                       name='mark_new'\n                                                                       value={1} disabled type='checkbox'\n                                                                />\n                                                                Նոր\n                                                            </li>\n                                                            <li> <input name='mark_old' value={1} disabled\n                                                                        type='checkbox'/>օգտ.</li>\n                                                            <li style={{width: \"5%\"}}\n                                                                className={\"open_models open_models\" + el.name}\n                                                                data-count={i} data-id={el.id} onClick={this.openModels}>\n                                                                {\n                                                                    <FontAwesomeIcon icon={faArrowDown}/>\n                                                                }\n                                                            </li>\n                                                            <li style={{display: \"none\"}}>\n                                                                <input type=\"checkbox\" name='mark_id[]' value={el.id}/>\n                                                            </li>\n                                                        </ul>\n\n                                                        <ul className={`open_models${el.name}`} style={{display: \"none\"}}\n                                                            data-count={i} ref={el => this.getModels = el}>\n                                                            {\n                                                                this.props.auto.truckModels.map((model, i) => {\n                                                                    if (el.id === model['id_mark']) {\n                                                                        return (\n                                                                            <li key={i}>\n                                                                                <ul className={`li_model${i}`}>\n                                                                                    <li className='model__li'>{model.name}</li>\n                                                                                    <li>\n                                                                                        <input data-check={2}\n                                                                                               className={'li_model' + i}\n                                                                                               onChange={this.getChecked}\n                                                                                               type=\"checkbox\"\n                                                                                               name='model[]'\n                                                                                               value={model.name + '/' + model['id_mark']}/>\n                                                                                    </li>\n                                                                                    <li>\n                                                                                        <input type=\"checkbox\" disabled\n                                                                                               name='model_new' value={1}/>\n                                                                                        Նոր\n                                                                                    </li>\n                                                                                    <li>\n                                                                                        <input type=\"checkbox\" disabled\n                                                                                               name='model_old' value={1}/>\n                                                                                        Օգտ.\n                                                                                    </li>\n                                                                                </ul>\n                                                                            </li>\n                                                                        )\n                                                                    } else return false;\n                                                                })\n                                                            }\n\n                                                        </ul>\n                                                    </li>\n                                                )\n                                            } else return false;\n                                        })\n                                    }\n                                </ul>\n                            </nav>\n                        </div>\n\n\n                        <div className=\"add_auto_parts-btn\">\n                            {\n                                this.state.loading ?\n                                    <div className=\"loading_btn\"><Loading type='spin' color='#ff0000' size={30}/></div> : ''\n                            }\n                            <DefaultBtn\n                                type=\"submit\"\n                                name='Առաջ'\n                                color=\"#fff\"\n                                width='15%'\n                                background=\"rgb(74 141 210)\"\n                            />\n                        </div>\n                    </form>\n                </Route>\n                {/*/score/account/cars/with_mark/cars*/}\n                <Route path='/score/account/cars/spare_parts/with_mark/truck/lists'>\n                    <ListGlobalTruckParts />\n                </Route>\n\n            </div>\n\n\n        )\n    }\n}\n\n\nconst MapStateToProps = state => {\n    return {\n        score: state.score,\n        location: state.location,\n        auto: state.auto\n    }\n}\n\nconst MainFormGlobalTruckParts = connect(MapStateToProps)(FormGlobalTruckParts);\nexport default MainFormGlobalTruckParts;\n","/home/nordil/Desktop/V8/src/components/ButtonView/ButtonView.jsx",[],"/home/nordil/Desktop/V8/src/components/AutoParts/FormAutoParts/ListGlobalTruckParts.jsx",["618","619","620","621","622","623","624","625","626","627","628"],"import React, {Component, Fragment} from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faArrowDown, faFolderOpen, faPen} from \"@fortawesome/free-solid-svg-icons\";\nimport {faFolder, faTrashAlt} from \"@fortawesome/free-regular-svg-icons\";\nimport {connect} from \"react-redux\";\nimport ButtonView from \"../../ButtonView/ButtonView\";\n\n\n\nclass ListGlobalAutoParts extends  Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            store: ''\n        }\n    }\n    componentDidMount() {\n        let st;\n        this.props.score.scoreList.map((el,i)=>{\n            if(i===0){\n                st = el.id\n            }\n        })\n        this.setState({\n            store:st\n        })\n    }\n\n    getStore = e =>{\n        this.setState({\n            store:e.target.value\n        })\n    }\n\n    openModel = e =>{\n        if(e.target.dataset.title == 1){\n            console.log(e.target.className.split(' ')[1].toString())\n            let block = document.querySelectorAll('.'+e.target.className.split(' ')[1].toString())\n            block.forEach(el=>{\n                if(el.tagName != \"LI\"){\n\n                    if(el.style.display == 'none'){\n                        el.style.display = 'flex'\n                    }else{\n                        el.style.display = 'none'\n                    }\n                }\n            })\n            e.target.childNodes[0].click()\n        }\n    }\n    render() {\n        let {truckMark,truckModel} = this.props.score.MarkModelParts\n        console.log('ssss',this.props.score.MarkModelParts)\n        return(\n            <div className=\"get_list_auto_parts\">\n                <div>\n                    <select onChange={this.getStore}>\n                        {\n                            this.props.score.scoreList.map((el,i)=>{\n                                return(\n                                    <option key={i} value={el.id}>\n                                        {el.name}\n                                    </option>\n                                )\n                            })\n                        }\n                    </select>\n                </div>\n                <div className='list_header'>\n                    <ul>\n                        <li>Ապրանքանիշը</li>\n                        <li>Նոր</li>\n                        <li>Օգտագործ.</li>\n                        <li></li>\n                    </ul>\n                </div>\n                <div className=\"list_body\">\n                    {\n                        truckMark?truckMark.map((mark,i) => {\n                            if(this.state.store == mark.score_id){\n                                return(\n                                    // <div className=\"list_body\">\n                                    <Fragment key={i}>\n                                        <ul >\n                                            <li>{mark.mark}</li>\n                                            {\n                                                mark.new?<li>նոր</li>:''\n                                            }\n                                            {\n                                                mark.old?<li>օգտ</li>:''\n                                            }\n                                            <li data-bul={false} onClick={this.openModel} className={\"open_list open_list\"+mark.id} data-title={1}>\n                                                <ButtonView\n                                                    button1={<FontAwesomeIcon  icon={faFolder}/>}\n                                                    button2={<FontAwesomeIcon  icon={faFolderOpen}/>}\n                                                />\n                                            </li>\n                                        </ul>\n                                        {\n                                            truckModel.map((model,i)=>{\n\n                                                if(mark.mark_id === model.mark_id && this.state.store == model.score_id){\n                                                    return (\n                                                        <ul\n                                                            key={model.id}\n                                                            className={\"open_list\"+mark.id}\n                                                            style={\n                                                                {\n                                                                    display:\"none\",\n                                                                    background:'#282838',\n                                                                    color:'#ffffff'\n                                                                }\n                                                            }\n                                                        >\n                                                            <li>{model.model}</li>\n                                                            {\n                                                                model.new?<li>նոր</li>:''\n                                                            }\n                                                            {\n                                                                model.old?<li>օգտ</li>:''\n                                                            }\n                                                            <li></li>\n                                                        </ul>\n                                                    )\n                                                }\n                                            })\n                                        }\n                                    </Fragment>\n\n                                )\n                            }\n\n\n                        }):''\n                    }\n                </div>\n\n                {/*</div>*/}\n            </div>\n\n        )\n    }\n}\n\n\nconst MapStateToProps = state => {\n    return {\n        score: state.score,\n        location: state.location,\n        auto: state.auto\n    }\n}\n\nconst MainListGlobalAutoParts = connect(MapStateToProps)(ListGlobalAutoParts);\nexport default MainListGlobalAutoParts;",{"ruleId":"629","replacedBy":"630"},{"ruleId":"631","replacedBy":"632"},{"ruleId":"633","severity":1,"message":"634","line":9,"column":28,"nodeType":"635","messageId":"636","endLine":9,"endColumn":41},{"ruleId":"633","severity":1,"message":"637","line":15,"column":9,"nodeType":"635","messageId":"636","endLine":15,"endColumn":19},{"ruleId":"633","severity":1,"message":"638","line":17,"column":8,"nodeType":"635","messageId":"636","endLine":17,"endColumn":11},{"ruleId":"633","severity":1,"message":"639","line":18,"column":9,"nodeType":"635","messageId":"636","endLine":18,"endColumn":12},{"ruleId":"633","severity":1,"message":"640","line":8,"column":9,"nodeType":"635","messageId":"636","endLine":8,"endColumn":16},{"ruleId":"633","severity":1,"message":"637","line":9,"column":9,"nodeType":"635","messageId":"636","endLine":9,"endColumn":19},{"ruleId":"633","severity":1,"message":"641","line":9,"column":9,"nodeType":"635","messageId":"636","endLine":9,"endColumn":21},{"ruleId":"633","severity":1,"message":"642","line":10,"column":8,"nodeType":"635","messageId":"636","endLine":10,"endColumn":14},{"ruleId":"633","severity":1,"message":"637","line":11,"column":9,"nodeType":"635","messageId":"636","endLine":11,"endColumn":19},{"ruleId":"633","severity":1,"message":"643","line":11,"column":21,"nodeType":"635","messageId":"636","endLine":11,"endColumn":32},{"ruleId":"633","severity":1,"message":"644","line":14,"column":10,"nodeType":"635","messageId":"636","endLine":14,"endColumn":18},{"ruleId":"633","severity":1,"message":"645","line":20,"column":9,"nodeType":"635","messageId":"636","endLine":20,"endColumn":18},{"ruleId":"646","severity":1,"message":"647","line":36,"column":13,"nodeType":"648","messageId":"649","endLine":36,"endColumn":23},{"ruleId":"650","severity":1,"message":"651","line":69,"column":40,"nodeType":"635","messageId":"652","endLine":69,"endColumn":50},{"ruleId":"633","severity":1,"message":"653","line":4,"column":9,"nodeType":"635","messageId":"636","endLine":4,"endColumn":24},{"ruleId":"633","severity":1,"message":"654","line":5,"column":9,"nodeType":"635","messageId":"636","endLine":5,"endColumn":17},{"ruleId":"633","severity":1,"message":"655","line":10,"column":5,"nodeType":"635","messageId":"636","endLine":10,"endColumn":27},{"ruleId":"633","severity":1,"message":"656","line":11,"column":5,"nodeType":"635","messageId":"636","endLine":11,"endColumn":20},{"ruleId":"633","severity":1,"message":"657","line":12,"column":5,"nodeType":"635","messageId":"636","endLine":12,"endColumn":17},{"ruleId":"633","severity":1,"message":"644","line":18,"column":9,"nodeType":"635","messageId":"636","endLine":18,"endColumn":17},{"ruleId":"658","severity":1,"message":"659","line":8,"column":5,"nodeType":"660","messageId":"661","endLine":16,"endColumn":6},{"ruleId":"633","severity":1,"message":"662","line":1,"column":20,"nodeType":"635","messageId":"636","endLine":1,"endColumn":28},{"ruleId":"633","severity":1,"message":"645","line":1,"column":15,"nodeType":"635","messageId":"636","endLine":1,"endColumn":24},{"ruleId":"663","severity":1,"message":"664","line":21,"column":42,"nodeType":"648","messageId":"665","endLine":21,"endColumn":44},{"ruleId":"633","severity":1,"message":"666","line":9,"column":22,"nodeType":"635","messageId":"636","endLine":9,"endColumn":33},{"ruleId":"633","severity":1,"message":"667","line":9,"column":35,"nodeType":"635","messageId":"636","endLine":9,"endColumn":50},{"ruleId":"633","severity":1,"message":"668","line":10,"column":9,"nodeType":"635","messageId":"636","endLine":10,"endColumn":20},{"ruleId":"633","severity":1,"message":"637","line":10,"column":29,"nodeType":"635","messageId":"636","endLine":10,"endColumn":39},{"ruleId":"669","severity":1,"message":"670","line":49,"column":61,"nodeType":"671","messageId":"672","endLine":49,"endColumn":63},{"ruleId":"663","severity":1,"message":"673","line":50,"column":33,"nodeType":"648","messageId":"665","endLine":50,"endColumn":35},{"ruleId":"633","severity":1,"message":"674","line":55,"column":29,"nodeType":"635","messageId":"636","endLine":55,"endColumn":32},{"ruleId":"633","severity":1,"message":"668","line":7,"column":9,"nodeType":"635","messageId":"636","endLine":7,"endColumn":20},{"ruleId":"633","severity":1,"message":"675","line":7,"column":22,"nodeType":"635","messageId":"636","endLine":7,"endColumn":27},{"ruleId":"663","severity":1,"message":"673","line":34,"column":22,"nodeType":"648","messageId":"665","endLine":34,"endColumn":24},{"ruleId":"663","severity":1,"message":"673","line":34,"column":42,"nodeType":"648","messageId":"665","endLine":34,"endColumn":44},{"ruleId":"663","severity":1,"message":"664","line":51,"column":41,"nodeType":"648","messageId":"665","endLine":51,"endColumn":43},{"ruleId":"663","severity":1,"message":"673","line":67,"column":41,"nodeType":"648","messageId":"665","endLine":67,"endColumn":43},{"ruleId":"663","severity":1,"message":"673","line":81,"column":61,"nodeType":"648","messageId":"665","endLine":81,"endColumn":63},{"ruleId":"663","severity":1,"message":"673","line":155,"column":56,"nodeType":"648","messageId":"665","endLine":155,"endColumn":58},{"ruleId":"663","severity":1,"message":"673","line":161,"column":66,"nodeType":"648","messageId":"665","endLine":161,"endColumn":68},{"ruleId":"663","severity":1,"message":"673","line":181,"column":48,"nodeType":"648","messageId":"665","endLine":181,"endColumn":50},{"ruleId":"669","severity":1,"message":"676","line":50,"column":113,"nodeType":"671","messageId":"677","endLine":50,"endColumn":115},{"ruleId":"633","severity":1,"message":"678","line":82,"column":79,"nodeType":"635","messageId":"636","endLine":82,"endColumn":81},{"ruleId":"633","severity":1,"message":"679","line":6,"column":5,"nodeType":"635","messageId":"636","endLine":6,"endColumn":21},{"ruleId":"633","severity":1,"message":"680","line":7,"column":5,"nodeType":"635","messageId":"636","endLine":7,"endColumn":26},{"ruleId":"633","severity":1,"message":"681","line":8,"column":5,"nodeType":"635","messageId":"636","endLine":8,"endColumn":21},{"ruleId":"633","severity":1,"message":"682","line":8,"column":23,"nodeType":"635","messageId":"636","endLine":8,"endColumn":38},{"ruleId":"633","severity":1,"message":"683","line":9,"column":5,"nodeType":"635","messageId":"636","endLine":9,"endColumn":24},{"ruleId":"633","severity":1,"message":"684","line":13,"column":5,"nodeType":"635","messageId":"636","endLine":13,"endColumn":9},{"ruleId":"669","severity":1,"message":"670","line":56,"column":30,"nodeType":"671","messageId":"672","endLine":56,"endColumn":32},{"ruleId":"663","severity":1,"message":"664","line":121,"column":44,"nodeType":"648","messageId":"665","endLine":121,"endColumn":46},{"ruleId":"663","severity":1,"message":"664","line":190,"column":82,"nodeType":"648","messageId":"665","endLine":190,"endColumn":84},{"ruleId":"669","severity":1,"message":"676","line":31,"column":112,"nodeType":"671","messageId":"677","endLine":31,"endColumn":114},{"ruleId":"685","severity":1,"message":"686","line":5,"column":1,"nodeType":"687","endLine":50,"endColumn":2},{"ruleId":"688","severity":1,"message":"689","line":11,"column":21,"nodeType":"690","endLine":11,"endColumn":36},{"ruleId":"633","severity":1,"message":"691","line":4,"column":7,"nodeType":"635","messageId":"636","endLine":4,"endColumn":11},{"ruleId":"633","severity":1,"message":"692","line":3,"column":9,"nodeType":"635","messageId":"636","endLine":3,"endColumn":13},{"ruleId":"633","severity":1,"message":"693","line":3,"column":22,"nodeType":"635","messageId":"636","endLine":3,"endColumn":30},{"ruleId":"669","severity":1,"message":"694","line":21,"column":51,"nodeType":"671","messageId":"677","endLine":21,"endColumn":53},{"ruleId":"658","severity":1,"message":"659","line":22,"column":16,"nodeType":"660","messageId":"661","endLine":105,"endColumn":17},{"ruleId":"669","severity":1,"message":"694","line":107,"column":51,"nodeType":"671","messageId":"677","endLine":107,"endColumn":53},{"ruleId":"658","severity":1,"message":"659","line":108,"column":16,"nodeType":"660","messageId":"661","endLine":137,"endColumn":17},{"ruleId":"669","severity":1,"message":"676","line":240,"column":84,"nodeType":"671","messageId":"677","endLine":240,"endColumn":86},{"ruleId":"633","severity":1,"message":"645","line":9,"column":15,"nodeType":"635","messageId":"636","endLine":9,"endColumn":24},{"ruleId":"695","severity":1,"message":"696","line":46,"column":29,"nodeType":"697","endLine":46,"endColumn":39},{"ruleId":"695","severity":1,"message":"696","line":59,"column":29,"nodeType":"697","endLine":59,"endColumn":39},{"ruleId":"633","severity":1,"message":"698","line":18,"column":8,"nodeType":"635","messageId":"636","endLine":18,"endColumn":18},{"ruleId":"669","severity":1,"message":"676","line":132,"column":77,"nodeType":"671","messageId":"677","endLine":132,"endColumn":79},{"ruleId":"688","severity":1,"message":"689","line":149,"column":83,"nodeType":"690","endLine":149,"endColumn":98},{"ruleId":"688","severity":1,"message":"689","line":161,"column":88,"nodeType":"690","endLine":161,"endColumn":103},{"ruleId":"688","severity":1,"message":"689","line":168,"column":89,"nodeType":"690","endLine":168,"endColumn":104},{"ruleId":"688","severity":1,"message":"689","line":175,"column":87,"nodeType":"690","endLine":175,"endColumn":102},{"ruleId":"699","severity":1,"message":"700","line":4,"column":5,"nodeType":"701","messageId":"702","endLine":6,"endColumn":6},{"ruleId":"699","severity":1,"message":"700","line":6,"column":5,"nodeType":"701","messageId":"702","endLine":10,"endColumn":6},{"ruleId":"663","severity":1,"message":"664","line":15,"column":47,"nodeType":"648","messageId":"665","endLine":15,"endColumn":49},{"ruleId":"663","severity":1,"message":"664","line":21,"column":47,"nodeType":"648","messageId":"665","endLine":21,"endColumn":49},{"ruleId":"633","severity":1,"message":"703","line":6,"column":23,"nodeType":"635","messageId":"636","endLine":6,"endColumn":37},{"ruleId":"633","severity":1,"message":"704","line":23,"column":13,"nodeType":"635","messageId":"636","endLine":23,"endColumn":17},{"ruleId":"633","severity":1,"message":"704","line":31,"column":13,"nodeType":"635","messageId":"636","endLine":31,"endColumn":17},{"ruleId":"633","severity":1,"message":"705","line":4,"column":15,"nodeType":"635","messageId":"636","endLine":4,"endColumn":20},{"ruleId":"699","severity":1,"message":"700","line":17,"column":5,"nodeType":"701","messageId":"702","endLine":20,"endColumn":6},{"ruleId":"633","severity":1,"message":"637","line":16,"column":9,"nodeType":"635","messageId":"636","endLine":16,"endColumn":19},{"ruleId":"663","severity":1,"message":"664","line":41,"column":31,"nodeType":"648","messageId":"665","endLine":41,"endColumn":33},{"ruleId":"633","severity":1,"message":"706","line":10,"column":23,"nodeType":"635","messageId":"636","endLine":10,"endColumn":37},{"ruleId":"663","severity":1,"message":"664","line":36,"column":40,"nodeType":"648","messageId":"665","endLine":36,"endColumn":42},{"ruleId":"633","severity":1,"message":"707","line":37,"column":14,"nodeType":"635","messageId":"636","endLine":37,"endColumn":20},{"ruleId":"663","severity":1,"message":"664","line":72,"column":43,"nodeType":"648","messageId":"665","endLine":72,"endColumn":45},{"ruleId":"633","severity":1,"message":"708","line":4,"column":38,"nodeType":"635","messageId":"636","endLine":4,"endColumn":51},{"ruleId":"633","severity":1,"message":"645","line":7,"column":15,"nodeType":"635","messageId":"636","endLine":7,"endColumn":24},{"ruleId":"669","severity":1,"message":"670","line":53,"column":33,"nodeType":"671","messageId":"672","endLine":53,"endColumn":35},{"ruleId":"663","severity":1,"message":"664","line":134,"column":57,"nodeType":"648","messageId":"665","endLine":134,"endColumn":59},{"ruleId":"663","severity":1,"message":"664","line":139,"column":57,"nodeType":"648","messageId":"665","endLine":139,"endColumn":59},{"ruleId":"663","severity":1,"message":"664","line":144,"column":57,"nodeType":"648","messageId":"665","endLine":144,"endColumn":59},{"ruleId":"658","severity":1,"message":"659","line":225,"column":41,"nodeType":"660","messageId":"661","endLine":230,"endColumn":42},{"ruleId":"709","severity":1,"message":"710","line":228,"column":45,"nodeType":"711","messageId":"712","endLine":229,"endColumn":70},{"ruleId":"633","severity":1,"message":"713","line":10,"column":9,"nodeType":"635","messageId":"636","endLine":10,"endColumn":25},{"ruleId":"633","severity":1,"message":"703","line":10,"column":27,"nodeType":"635","messageId":"636","endLine":10,"endColumn":41},{"ruleId":"669","severity":1,"message":"676","line":104,"column":134,"nodeType":"671","messageId":"677","endLine":104,"endColumn":136},{"ruleId":"663","severity":1,"message":"673","line":108,"column":127,"nodeType":"648","messageId":"665","endLine":108,"endColumn":129},{"ruleId":"669","severity":1,"message":"676","line":136,"column":136,"nodeType":"671","messageId":"677","endLine":136,"endColumn":138},{"ruleId":"663","severity":1,"message":"673","line":140,"column":89,"nodeType":"648","messageId":"665","endLine":140,"endColumn":91},{"ruleId":"669","severity":1,"message":"676","line":183,"column":116,"nodeType":"671","messageId":"677","endLine":183,"endColumn":118},{"ruleId":"663","severity":1,"message":"664","line":190,"column":117,"nodeType":"648","messageId":"665","endLine":190,"endColumn":119},{"ruleId":"669","severity":1,"message":"676","line":199,"column":118,"nodeType":"671","messageId":"677","endLine":199,"endColumn":120},{"ruleId":"663","severity":1,"message":"664","line":205,"column":117,"nodeType":"648","messageId":"665","endLine":205,"endColumn":119},{"ruleId":"633","severity":1,"message":"714","line":4,"column":9,"nodeType":"635","messageId":"636","endLine":4,"endColumn":13},{"ruleId":"633","severity":1,"message":"705","line":4,"column":25,"nodeType":"635","messageId":"636","endLine":4,"endColumn":30},{"ruleId":"633","severity":1,"message":"715","line":5,"column":8,"nodeType":"635","messageId":"636","endLine":5,"endColumn":16},{"ruleId":"633","severity":1,"message":"716","line":7,"column":9,"nodeType":"635","messageId":"636","endLine":7,"endColumn":14},{"ruleId":"633","severity":1,"message":"717","line":9,"column":8,"nodeType":"635","messageId":"636","endLine":9,"endColumn":14},{"ruleId":"633","severity":1,"message":"718","line":12,"column":18,"nodeType":"635","messageId":"636","endLine":12,"endColumn":26},{"ruleId":"633","severity":1,"message":"645","line":14,"column":15,"nodeType":"635","messageId":"636","endLine":14,"endColumn":24},{"ruleId":"633","severity":1,"message":"719","line":17,"column":7,"nodeType":"635","messageId":"636","endLine":17,"endColumn":13},{"ruleId":"663","severity":1,"message":"673","line":54,"column":37,"nodeType":"648","messageId":"665","endLine":54,"endColumn":39},{"ruleId":"663","severity":1,"message":"673","line":237,"column":55,"nodeType":"648","messageId":"665","endLine":237,"endColumn":57},{"ruleId":"663","severity":1,"message":"664","line":313,"column":89,"nodeType":"648","messageId":"665","endLine":313,"endColumn":91},{"ruleId":"663","severity":1,"message":"664","line":318,"column":89,"nodeType":"648","messageId":"665","endLine":318,"endColumn":91},{"ruleId":"663","severity":1,"message":"664","line":323,"column":89,"nodeType":"648","messageId":"665","endLine":323,"endColumn":91},{"ruleId":"633","severity":1,"message":"720","line":2,"column":8,"nodeType":"635","messageId":"636","endLine":2,"endColumn":21},{"ruleId":"633","severity":1,"message":"721","line":7,"column":8,"nodeType":"635","messageId":"636","endLine":7,"endColumn":31},{"ruleId":"633","severity":1,"message":"722","line":8,"column":8,"nodeType":"635","messageId":"636","endLine":8,"endColumn":27},{"ruleId":"658","severity":1,"message":"659","line":23,"column":9,"nodeType":"660","messageId":"661","endLine":29,"endColumn":10},{"ruleId":"633","severity":1,"message":"723","line":6,"column":9,"nodeType":"635","messageId":"636","endLine":6,"endColumn":16},{"ruleId":"633","severity":1,"message":"675","line":9,"column":5,"nodeType":"635","messageId":"636","endLine":9,"endColumn":10},{"ruleId":"633","severity":1,"message":"724","line":11,"column":5,"nodeType":"635","messageId":"636","endLine":11,"endColumn":23},{"ruleId":"633","severity":1,"message":"725","line":15,"column":9,"nodeType":"635","messageId":"636","endLine":15,"endColumn":13},{"ruleId":"633","severity":1,"message":"726","line":16,"column":9,"nodeType":"635","messageId":"636","endLine":16,"endColumn":12},{"ruleId":"663","severity":1,"message":"673","line":146,"column":128,"nodeType":"648","messageId":"665","endLine":146,"endColumn":130},{"ruleId":"663","severity":1,"message":"673","line":188,"column":113,"nodeType":"648","messageId":"665","endLine":188,"endColumn":115},{"ruleId":"633","severity":1,"message":"645","line":10,"column":15,"nodeType":"635","messageId":"636","endLine":10,"endColumn":24},{"ruleId":"633","severity":1,"message":"644","line":15,"column":25,"nodeType":"635","messageId":"636","endLine":15,"endColumn":33},{"ruleId":"633","severity":1,"message":"727","line":17,"column":9,"nodeType":"635","messageId":"636","endLine":17,"endColumn":21},{"ruleId":"669","severity":1,"message":"670","line":70,"column":47,"nodeType":"671","messageId":"672","endLine":70,"endColumn":49},{"ruleId":"669","severity":1,"message":"670","line":84,"column":32,"nodeType":"671","messageId":"672","endLine":84,"endColumn":34},{"ruleId":"728","severity":1,"message":"729","line":276,"column":60,"nodeType":"730","endLine":276,"endColumn":94},{"ruleId":"633","severity":1,"message":"731","line":5,"column":20,"nodeType":"635","messageId":"636","endLine":5,"endColumn":23},{"ruleId":"633","severity":1,"message":"637","line":4,"column":22,"nodeType":"635","messageId":"636","endLine":4,"endColumn":32},{"ruleId":"633","severity":1,"message":"653","line":7,"column":9,"nodeType":"635","messageId":"636","endLine":7,"endColumn":24},{"ruleId":"633","severity":1,"message":"732","line":8,"column":9,"nodeType":"635","messageId":"636","endLine":8,"endColumn":15},{"ruleId":"663","severity":1,"message":"664","line":28,"column":24,"nodeType":"648","messageId":"665","endLine":28,"endColumn":26},{"ruleId":"663","severity":1,"message":"664","line":31,"column":24,"nodeType":"648","messageId":"665","endLine":31,"endColumn":26},{"ruleId":"663","severity":1,"message":"673","line":71,"column":22,"nodeType":"648","messageId":"665","endLine":71,"endColumn":24},{"ruleId":"663","severity":1,"message":"673","line":71,"column":42,"nodeType":"648","messageId":"665","endLine":71,"endColumn":44},{"ruleId":"663","severity":1,"message":"664","line":85,"column":46,"nodeType":"648","messageId":"665","endLine":85,"endColumn":48},{"ruleId":"663","severity":1,"message":"673","line":109,"column":68,"nodeType":"648","messageId":"665","endLine":109,"endColumn":70},{"ruleId":"663","severity":1,"message":"673","line":111,"column":57,"nodeType":"648","messageId":"665","endLine":111,"endColumn":59},{"ruleId":"633","severity":1,"message":"725","line":4,"column":9,"nodeType":"635","messageId":"636","endLine":4,"endColumn":13},{"ruleId":"633","severity":1,"message":"645","line":4,"column":15,"nodeType":"635","messageId":"636","endLine":4,"endColumn":24},{"ruleId":"633","severity":1,"message":"726","line":5,"column":9,"nodeType":"635","messageId":"636","endLine":5,"endColumn":12},{"ruleId":"633","severity":1,"message":"637","line":4,"column":22,"nodeType":"635","messageId":"636","endLine":4,"endColumn":32},{"ruleId":"633","severity":1,"message":"653","line":7,"column":9,"nodeType":"635","messageId":"636","endLine":7,"endColumn":24},{"ruleId":"633","severity":1,"message":"733","line":8,"column":9,"nodeType":"635","messageId":"636","endLine":8,"endColumn":18},{"ruleId":"633","severity":1,"message":"732","line":8,"column":20,"nodeType":"635","messageId":"636","endLine":8,"endColumn":26},{"ruleId":"663","severity":1,"message":"664","line":29,"column":24,"nodeType":"648","messageId":"665","endLine":29,"endColumn":26},{"ruleId":"663","severity":1,"message":"664","line":32,"column":24,"nodeType":"648","messageId":"665","endLine":32,"endColumn":26},{"ruleId":"663","severity":1,"message":"664","line":45,"column":27,"nodeType":"648","messageId":"665","endLine":45,"endColumn":29},{"ruleId":"695","severity":1,"message":"696","line":50,"column":27,"nodeType":"697","endLine":50,"endColumn":37},{"ruleId":"663","severity":1,"message":"673","line":78,"column":22,"nodeType":"648","messageId":"665","endLine":78,"endColumn":24},{"ruleId":"663","severity":1,"message":"673","line":78,"column":42,"nodeType":"648","messageId":"665","endLine":78,"endColumn":44},{"ruleId":"663","severity":1,"message":"664","line":125,"column":68,"nodeType":"648","messageId":"665","endLine":125,"endColumn":70},{"ruleId":"663","severity":1,"message":"673","line":127,"column":57,"nodeType":"648","messageId":"665","endLine":127,"endColumn":59},{"ruleId":"633","severity":1,"message":"703","line":6,"column":9,"nodeType":"635","messageId":"636","endLine":6,"endColumn":23},{"ruleId":"633","severity":1,"message":"645","line":8,"column":15,"nodeType":"635","messageId":"636","endLine":8,"endColumn":24},{"ruleId":"633","severity":1,"message":"720","line":13,"column":8,"nodeType":"635","messageId":"636","endLine":13,"endColumn":21},{"ruleId":"633","severity":1,"message":"734","line":14,"column":9,"nodeType":"635","messageId":"636","endLine":14,"endColumn":14},{"ruleId":"633","severity":1,"message":"722","line":15,"column":8,"nodeType":"635","messageId":"636","endLine":15,"endColumn":27},{"ruleId":"669","severity":1,"message":"670","line":43,"column":52,"nodeType":"671","messageId":"672","endLine":43,"endColumn":54},{"ruleId":"663","severity":1,"message":"673","line":51,"column":37,"nodeType":"648","messageId":"665","endLine":51,"endColumn":39},{"ruleId":"669","severity":1,"message":"676","line":368,"column":119,"nodeType":"671","messageId":"677","endLine":368,"endColumn":121},{"ruleId":"663","severity":1,"message":"673","line":377,"column":118,"nodeType":"648","messageId":"665","endLine":377,"endColumn":120},{"ruleId":"663","severity":1,"message":"673","line":396,"column":96,"nodeType":"648","messageId":"665","endLine":396,"endColumn":98},{"ruleId":"633","severity":1,"message":"735","line":17,"column":8,"nodeType":"635","messageId":"636","endLine":17,"endColumn":16},{"ruleId":"633","severity":1,"message":"736","line":6,"column":5,"nodeType":"635","messageId":"636","endLine":6,"endColumn":10},{"ruleId":"633","severity":1,"message":"737","line":11,"column":18,"nodeType":"635","messageId":"636","endLine":11,"endColumn":36},{"ruleId":"633","severity":1,"message":"738","line":11,"column":38,"nodeType":"635","messageId":"636","endLine":11,"endColumn":48},{"ruleId":"633","severity":1,"message":"645","line":15,"column":15,"nodeType":"635","messageId":"636","endLine":15,"endColumn":24},{"ruleId":"633","severity":1,"message":"739","line":23,"column":9,"nodeType":"635","messageId":"636","endLine":23,"endColumn":16},{"ruleId":"663","severity":1,"message":"664","line":125,"column":34,"nodeType":"648","messageId":"665","endLine":125,"endColumn":36},{"ruleId":"663","severity":1,"message":"664","line":125,"column":71,"nodeType":"648","messageId":"665","endLine":125,"endColumn":73},{"ruleId":"669","severity":1,"message":"670","line":147,"column":47,"nodeType":"671","messageId":"672","endLine":147,"endColumn":49},{"ruleId":"688","severity":1,"message":"689","line":368,"column":60,"nodeType":"690","endLine":368,"endColumn":75},{"ruleId":"663","severity":1,"message":"664","line":550,"column":34,"nodeType":"648","messageId":"665","endLine":550,"endColumn":36},{"ruleId":"633","severity":1,"message":"714","line":2,"column":9,"nodeType":"635","messageId":"636","endLine":2,"endColumn":13},{"ruleId":"633","severity":1,"message":"644","line":5,"column":9,"nodeType":"635","messageId":"636","endLine":5,"endColumn":17},{"ruleId":"633","severity":1,"message":"740","line":1,"column":27,"nodeType":"635","messageId":"636","endLine":1,"endColumn":35},{"ruleId":"633","severity":1,"message":"725","line":5,"column":9,"nodeType":"635","messageId":"636","endLine":5,"endColumn":13},{"ruleId":"633","severity":1,"message":"726","line":6,"column":9,"nodeType":"635","messageId":"636","endLine":6,"endColumn":12},{"ruleId":"633","severity":1,"message":"641","line":7,"column":9,"nodeType":"635","messageId":"636","endLine":7,"endColumn":21},{"ruleId":"699","severity":1,"message":"700","line":10,"column":5,"nodeType":"701","messageId":"702","endLine":12,"endColumn":6},{"ruleId":"633","severity":1,"message":"741","line":3,"column":9,"nodeType":"635","messageId":"636","endLine":3,"endColumn":20},{"ruleId":"633","severity":1,"message":"742","line":3,"column":36,"nodeType":"635","messageId":"636","endLine":3,"endColumn":41},{"ruleId":"633","severity":1,"message":"743","line":4,"column":19,"nodeType":"635","messageId":"636","endLine":4,"endColumn":29},{"ruleId":"669","severity":1,"message":"670","line":19,"column":46,"nodeType":"671","messageId":"672","endLine":19,"endColumn":48},{"ruleId":"663","severity":1,"message":"673","line":36,"column":35,"nodeType":"648","messageId":"665","endLine":36,"endColumn":37},{"ruleId":"663","severity":1,"message":"664","line":42,"column":31,"nodeType":"648","messageId":"665","endLine":42,"endColumn":33},{"ruleId":"663","severity":1,"message":"673","line":44,"column":41,"nodeType":"648","messageId":"665","endLine":44,"endColumn":43},{"ruleId":"669","severity":1,"message":"676","line":84,"column":58,"nodeType":"671","messageId":"677","endLine":84,"endColumn":60},{"ruleId":"663","severity":1,"message":"673","line":85,"column":52,"nodeType":"648","messageId":"665","endLine":85,"endColumn":54},{"ruleId":"669","severity":1,"message":"676","line":105,"column":70,"nodeType":"671","messageId":"677","endLine":105,"endColumn":72},{"ruleId":"663","severity":1,"message":"673","line":107,"column":106,"nodeType":"648","messageId":"665","endLine":107,"endColumn":108},{"ruleId":"633","severity":1,"message":"744","line":16,"column":8,"nodeType":"635","messageId":"636","endLine":16,"endColumn":31},{"ruleId":"633","severity":1,"message":"735","line":17,"column":8,"nodeType":"635","messageId":"636","endLine":17,"endColumn":16},{"ruleId":"633","severity":1,"message":"741","line":3,"column":9,"nodeType":"635","messageId":"636","endLine":3,"endColumn":20},{"ruleId":"633","severity":1,"message":"742","line":3,"column":36,"nodeType":"635","messageId":"636","endLine":3,"endColumn":41},{"ruleId":"633","severity":1,"message":"743","line":4,"column":19,"nodeType":"635","messageId":"636","endLine":4,"endColumn":29},{"ruleId":"669","severity":1,"message":"670","line":19,"column":46,"nodeType":"671","messageId":"672","endLine":19,"endColumn":48},{"ruleId":"663","severity":1,"message":"673","line":36,"column":35,"nodeType":"648","messageId":"665","endLine":36,"endColumn":37},{"ruleId":"663","severity":1,"message":"664","line":40,"column":31,"nodeType":"648","messageId":"665","endLine":40,"endColumn":33},{"ruleId":"663","severity":1,"message":"673","line":42,"column":41,"nodeType":"648","messageId":"665","endLine":42,"endColumn":43},{"ruleId":"669","severity":1,"message":"676","line":80,"column":58,"nodeType":"671","messageId":"677","endLine":80,"endColumn":60},{"ruleId":"663","severity":1,"message":"673","line":81,"column":49,"nodeType":"648","messageId":"665","endLine":81,"endColumn":51},{"ruleId":"669","severity":1,"message":"676","line":101,"column":69,"nodeType":"671","messageId":"677","endLine":101,"endColumn":71},{"ruleId":"663","severity":1,"message":"673","line":103,"column":103,"nodeType":"648","messageId":"665","endLine":103,"endColumn":105},"no-native-reassign",["745"],"no-negated-in-lhs",["746"],"no-unused-vars","'GetTruckModel' is defined but never used.","Identifier","unusedVar","'GetMessage' is defined but never used.","'Api' is defined but never used.","'GET' is defined but never used.","'GetAuto' is defined but never used.","'GetScoreList' is defined but never used.","'Result' is defined but never used.","'SendMessage' is defined but never used.","'Redirect' is defined but never used.","'TEST_POST' is defined but never used.","use-isnan","Use the isNaN function to compare with NaN.","BinaryExpression","comparisonWithNaN","no-self-assign","'pageNumber' is assigned to itself.","selfAssignment","'FontAwesomeIcon' is defined but never used.","'faSearch' is defined but never used.","'GetSearchMarkModelLink' is defined but never used.","'SearchMarkModel' is defined but never used.","'SearchResult' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'TEST_GET' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","unexpected","'GetFavorite' is defined but never used.","'GetUserFavorite' is defined but never used.","'GetDialogId' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Expected '===' and instead saw '=='.","'img' is assigned a value but never used.","'GetId' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'p4' is assigned a value but never used.","'SearchResultAnal' is defined but never used.","'SearchResultAnalCount' is defined but never used.","'SearchResultAuto' is defined but never used.","'SearchResultImg' is defined but never used.","'SearchResultProduct' is defined but never used.","'data' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'auto' is assigned a value but never used.","'cars' is defined but never used.","'autogruz' is defined but never used.","Array.prototype.filter() expects a value to be returned at the end of arrow function.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'DefaultBtn' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'faMapMarkerAlt' is defined but never used.","'span' is assigned a value but never used.","'Route' is defined but never used.","'GetScoreListId' is defined but never used.","'pathId' is assigned a value but never used.","'faWindowClose' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'faEnvelopeSquare' is defined but never used.","'Link' is defined but never used.","'CarsForm' is defined but never used.","'royle' is defined but never used.","'engine' is defined but never used.","'GetModel' is defined but never used.","'status' is assigned a value but never used.","'DefaultSelect' is defined but never used.","'MainFormGlobalAutoParts' is defined but never used.","'FormGlobalAutoParts' is defined but never used.","'NavLink' is defined but never used.","'GetMessageDialogId' is defined but never used.","'POST' is defined but never used.","'Url' is defined but never used.","'GetMessageId' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'sol' is defined but never used.","'faSync' is defined but never used.","'faRedoAlt' is defined but never used.","'maser' is defined but never used.","'TypeCars' is defined but never used.","'faCog' is defined but never used.","'faAngleDoubleRight' is defined but never used.","'faMailBulk' is defined but never used.","'faClock' is defined but never used.","'Fragment' is defined but never used.","'faArrowDown' is defined but never used.","'faPen' is defined but never used.","'faTrashAlt' is defined but never used.","'MainListGlobalAutoParts' is defined but never used.","no-global-assign","no-unsafe-negation"]